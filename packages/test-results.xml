<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="965.9400" tests="2951" failures="0" skipped="47">
  <testsuite name="Root Suite" timestamp="2021-02-09T06:54:59" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="AddressSpace : Conditions 1" timestamp="2021-02-09T06:54:59" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="AddressSpace : Conditions 2" timestamp="2021-02-09T06:55:00" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0030" failures="0">
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 should fail to instantiate a ConditionType (because it&apos;s abstract)" time="0.0030" classname="should fail to instantiate a ConditionType (because it&apos;s abstract)">
    </testcase>
  </testsuite>
  <testsuite name="With a custom condition type" timestamp="2021-02-09T06:55:00" tests="13" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1920" failures="0">
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should instantiate a custom ConditionType" time="0.0300" classname="should instantiate a custom ConditionType">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should be possible to enable and disable a condition using the enable &amp; disable methods ( as a client would do)" time="0.0150" classname="should be possible to enable and disable a condition using the enable &amp; disable methods ( as a client would do)">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should provide BadConditionNotEnabled when client try to interrogate a condition variable, when the condition is disabled" time="0.0240" classname="should provide BadConditionNotEnabled when client try to interrogate a condition variable, when the condition is disabled">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should be possible to activate the EnabledState.TransitionTime optional property" time="0.0160" classname="should be possible to activate the EnabledState.TransitionTime optional property">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should be possible to activate the EnabledState.EffectiveTransitionTime optional property" time="0.0130" classname="should be possible to activate the EnabledState.EffectiveTransitionTime optional property">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should be possible to activate the EnabledState.EffectiveDisplayName optional property" time="0.0150" classname="should be possible to activate the EnabledState.EffectiveDisplayName optional property">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should be possible to set the comment of a condition using the addComment method of the condition instance" time="0.0170" classname="should be possible to set the comment of a condition using the addComment method of the condition instance">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should be possible to set the comment of a condition using the addComment method of the conditionType" time="0.0120" classname="should be possible to set the comment of a condition using the addComment method of the conditionType">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should install the conditionSource in SourceNode and SourceName" time="0.0080" classname="should install the conditionSource in SourceNode and SourceName">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type initial value of lastSeverity should be zero" time="0.0090" classname="initial value of lastSeverity should be zero">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type setting severity should record lastSeverity" time="0.0080" classname="setting severity should record lastSeverity">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should produce eventData " time="0.0130" classname="should produce eventData ">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type should raise a new condition " time="0.0120" classname="should raise a new condition ">
    </testcase>
  </testsuite>
  <testsuite name="Testing Branches " timestamp="2021-02-09T06:55:00" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type Testing Branches  writing to a master branch (branch0) variable should affect the underlying variable" time="0.0010" classname="writing to a master branch (branch0) variable should affect the underlying variable">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type Testing Branches  writing to a new created branch variable should  NOT affect the underlying variable" time="0.0010" classname="writing to a new created branch variable should  NOT affect the underlying variable">
    </testcase>
  </testsuite>
  <testsuite name="Condition Branches" timestamp="2021-02-09T06:55:00" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0110" failures="0">
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type Condition Branches should be possible to create several branches of a condition state" time="0.0110" classname="should be possible to create several branches of a condition state">
    </testcase>
  </testsuite>
  <testsuite name="Condition &amp; Subscriptions : ConditionRefresh" timestamp="2021-02-09T06:55:00" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0330" failures="0">
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Conditions 2 With a custom condition type Condition &amp; Subscriptions : ConditionRefresh should be possible to refresh a condition" time="0.0330" classname="should be possible to refresh a condition">
    </testcase>
  </testsuite>
  <testsuite name="AddressSpace : Acknowledgeable Conditions " timestamp="2021-02-09T06:55:00" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0940" failures="0">
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Acknowledgeable Conditions  should instantiate AcknowledgeableConditionType" time="0.0070" classname="should instantiate AcknowledgeableConditionType">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Acknowledgeable Conditions  should instantiate AcknowledgeableConditionType (variation 2)" time="0.0140" classname="should instantiate AcknowledgeableConditionType (variation 2)">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Acknowledgeable Conditions  should instantiate AcknowledgeableConditionType (variation 3)" time="0.0140" classname="should instantiate AcknowledgeableConditionType (variation 3)">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Acknowledgeable Conditions  should instantiate AcknowledgeableConditionType with ConfirmedState" time="0.0140" classname="should instantiate AcknowledgeableConditionType with ConfirmedState">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Acknowledgeable Conditions  should instantiate AlarmConditionType with ConfirmedState and ShelvedState" time="0.0360" classname="should instantiate AlarmConditionType with ConfirmedState and ShelvedState">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AddressSpace : Acknowledgeable Conditions  should instantiate AcknowledgeableConditionType **Without** ConfirmedState" time="0.0090" classname="should instantiate AcknowledgeableConditionType **Without** ConfirmedState">
    </testcase>
  </testsuite>
  <testsuite name="AlarmConditionType" timestamp="2021-02-09T06:55:00" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0520" failures="0">
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate an AlarmConditionType" time="0.0090" classname="should instantiate an AlarmConditionType">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType (variation 2)" time="0.0120" classname="should instantiate AlarmConditionType (variation 2)">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should be possible to instantiate a Alarm with a inputNode as Null NodeId (ns=0;i=0)" time="0.0160" classname="should be possible to instantiate a Alarm with a inputNode as Null NodeId (ns=0;i=0)">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should be possible to instantiate a Alarm with &apos;maxTimeShelved&apos; " time="0.0150" classname="should be possible to instantiate a Alarm with &apos;maxTimeShelved&apos; ">
    </testcase>
  </testsuite>
  <testsuite name="should instantiate AlarmConditionType with ConfirmedState" timestamp="2021-02-09T06:55:01" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.5280" failures="0">
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState checking basic properties" time="0.0000" classname="checking basic properties">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState checking active state behavior" time="0.0010" classname="checking active state behavior">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState checking suppressed state behavior" time="0.0000" classname="checking suppressed state behavior">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState checking shelving state behavior" time="0.0040" classname="checking shelving state behavior">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState checking shelving state behavior with automatic unshelving" time="1.5180" classname="checking shelving state behavior with automatic unshelving">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState checking suppressedOrShelved behavior" time="0.0050" classname="checking suppressedOrShelved behavior">
    </testcase>
  </testsuite>
  <testsuite name="Testing alarm  ShelvingStateMachine methods" timestamp="2021-02-09T06:55:02" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0210" failures="0">
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState Testing alarm  ShelvingStateMachine methods unshelving an already unshelved alarm should return BadConditionNotShelved" time="0.0010" classname="unshelving an already unshelved alarm should return BadConditionNotShelved">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState Testing alarm  ShelvingStateMachine methods unshelving an TimedShelved  alarm should succeed" time="0.0030" classname="unshelving an TimedShelved  alarm should succeed">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState Testing alarm  ShelvingStateMachine methods unshelving an OneShotShelved  alarm should succeed" time="0.0030" classname="unshelving an OneShotShelved  alarm should succeed">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState Testing alarm  ShelvingStateMachine methods timed-shelving an already timed-shelved alarm should return BadConditionAlreadyShelved" time="0.0040" classname="timed-shelving an already timed-shelved alarm should return BadConditionAlreadyShelved">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState Testing alarm  ShelvingStateMachine methods timed-shelving an already oneshot-shelved alarm should return BadConditionAlreadyShelved" time="0.0020" classname="timed-shelving an already oneshot-shelved alarm should return BadConditionAlreadyShelved">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState Testing alarm  ShelvingStateMachine methods timed-shelving an unshelved alarm should return Good when ShelvingTime is OK" time="0.0020" classname="timed-shelving an unshelved alarm should return Good when ShelvingTime is OK">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState Testing alarm  ShelvingStateMachine methods timed-shelving an unshelved alarm should return ShelvingTimeOutOfRange when ShelvingTime is out of range" time="0.0010" classname="timed-shelving an unshelved alarm should return ShelvingTimeOutOfRange when ShelvingTime is out of range">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState Testing alarm  ShelvingStateMachine methods one-shot-shelving an already one-shot-shelved alarm should return BadConditionAlreadyShelved" time="0.0030" classname="one-shot-shelving an already one-shot-shelved alarm should return BadConditionAlreadyShelved">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType should instantiate AlarmConditionType with ConfirmedState Testing alarm  ShelvingStateMachine methods one-shot-shelving an unshelved alarm should return Good" time="0.0020" classname="one-shot-shelving an unshelved alarm should return Good">
    </testcase>
  </testsuite>
  <testsuite name="AlarmConditionType: Server maintains current state only" timestamp="2021-02-09T06:55:02" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0530" failures="0">
    <testcase name="AddressSpace : Conditions 1 AlarmConditionType: Server maintains current state only should follow the example opcua 1.03 part 9 - annexe B  B.1.2 " time="0.0530" classname="should follow the example opcua 1.03 part 9 - annexe B  B.1.2 ">
    </testcase>
  </testsuite>
  <testsuite name="Limit Alarms " timestamp="2021-02-09T06:55:02" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2830" failures="0">
    <testcase name="AddressSpace : Conditions 1 Limit Alarms  should instantiate a ExclusiveLimitAlarm" time="0.1060" classname="should instantiate a ExclusiveLimitAlarm">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Limit Alarms  should instantiate a NonExclusiveLimitAlarm" time="0.0740" classname="should instantiate a NonExclusiveLimitAlarm">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Limit Alarms  Alarm should not trigger event if state change but enableState is false" time="0.0450" classname="Alarm should not trigger event if state change but enableState is false">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Limit Alarms  should be possible to temporarily disable the alarm (this should trigger* an event with custom severity and retain flag) " time="0.0010" classname="should be possible to temporarily disable the alarm (this should trigger* an event with custom severity and retain flag) ">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Limit Alarms  should be possible to automatically trigger the new status event when limit values are updated" time="0.0210" classname="should be possible to automatically trigger the new status event when limit values are updated">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Limit Alarms  should not raise an event twice if the value changes without changing the state" time="0.0360" classname="should not raise an event twice if the value changes without changing the state">
    </testcase>
  </testsuite>
  <testsuite name="Testing alarms with enabledState false" timestamp="2021-02-09T06:55:02" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0400" failures="0">
    <testcase name="AddressSpace : Conditions 1 Limit Alarms  Testing alarms with enabledState false should not raise alarm if the alarm is not enabled" time="0.0400" classname="should not raise alarm if the alarm is not enabled">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Limit Alarms  Testing alarms with enabledState false it should retain state and fire an event reflecting the actual state when alarms is set back to enabled=true" time="0.0000" classname="it should retain state and fire an event reflecting the actual state when alarms is set back to enabled=true">
    </testcase>
  </testsuite>
  <testsuite name="Deviation Alarms : ExclusiveDeviation Alarms " timestamp="2021-02-09T06:55:03" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="ExclusiveDeviationAlarm" timestamp="2021-02-09T06:55:03" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0660" failures="0">
    <testcase name="AddressSpace : Conditions 1 Deviation Alarms : ExclusiveDeviation Alarms  ExclusiveDeviationAlarm should provide correct properties" time="0.0050" classname="should provide correct properties">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Deviation Alarms : ExclusiveDeviation Alarms  ExclusiveDeviationAlarm ExclusiveDeviationAlarm - setpointNode Value is zero" time="0.0370" classname="ExclusiveDeviationAlarm - setpointNode Value is zero">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Deviation Alarms : ExclusiveDeviation Alarms  ExclusiveDeviationAlarm ExclusiveDeviationAlarm - setPointValue is not zero" time="0.0240" classname="ExclusiveDeviationAlarm - setPointValue is not zero">
    </testcase>
  </testsuite>
  <testsuite name="Deviation Alarms : Non ExclusiveDeviationAlarms" timestamp="2021-02-09T06:55:03" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="NonExclusiveDeviationAlarm" timestamp="2021-02-09T06:55:03" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0530" failures="0">
    <testcase name="AddressSpace : Conditions 1 Deviation Alarms : Non ExclusiveDeviationAlarms NonExclusiveDeviationAlarm should provide correct properties" time="0.0020" classname="should provide correct properties">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Deviation Alarms : Non ExclusiveDeviationAlarms NonExclusiveDeviationAlarm should provide correct properties when set value is changed and back to orignal value" time="0.0100" classname="should provide correct properties when set value is changed and back to orignal value">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Deviation Alarms : Non ExclusiveDeviationAlarms NonExclusiveDeviationAlarm NonExclusiveDeviationAlarm" time="0.0410" classname="NonExclusiveDeviationAlarm">
    </testcase>
  </testsuite>
  <testsuite name="Off Normal Alarms " timestamp="2021-02-09T06:55:03" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0320" failures="0">
    <testcase name="AddressSpace : Conditions 1 Off Normal Alarms  should instantiate a off normal alarm of a 3 state variable" time="0.0090" classname="should instantiate a off normal alarm of a 3 state variable">
    </testcase>
    <testcase name="AddressSpace : Conditions 1 Off Normal Alarms  should automatically active the alarm when inputNode Value doesn&apos;t match normal state" time="0.0230" classname="should automatically active the alarm when inputNode Value doesn&apos;t match normal state">
    </testcase>
  </testsuite>
  <testsuite name="Alarm&amp;Condition ConditionClassName and ConditionName " timestamp="2021-02-09T06:55:03" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0090" failures="0">
    <testcase name="AddressSpace : Conditions 1 Alarm&amp;Condition ConditionClassName and ConditionName  CC1 - should be possible to set the ConditionName and ConditionClassName of an alarm" time="0.0090" classname="CC1 - should be possible to set the ConditionName and ConditionClassName of an alarm">
    </testcase>
  </testsuite>
  <testsuite name="Testing extract EventField" timestamp="2021-02-09T06:55:03" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_extract_event_fields.ts" time="0.0120" failures="0">
    <testcase name="Testing extract EventField EVF1- EventFilter" time="0.0050" classname="EVF1- EventFilter">
    </testcase>
    <testcase name="Testing extract EventField EVF1b " time="0.0010" classname="EVF1b ">
    </testcase>
    <testcase name="Testing extract EventField EVF2- check Where Clause OfType" time="0.0020" classname="EVF2- check Where Clause OfType">
    </testcase>
    <testcase name="Testing extract EventField EVF3- check Where Clause InList OfType" time="0.0030" classname="EVF3- check Where Clause InList OfType">
    </testcase>
    <testcase name="Testing extract EventField EVF4- check WhereClause with Not Operand #810" time="0.0010" classname="EVF4- check WhereClause with Not Operand #810">
    </testcase>
  </testsuite>
  <testsuite name="DataAccess" timestamp="2021-02-09T06:55:03" tests="14" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="DataAccess should find a BaseDataVariableType in the addressSpace" time="0.0000" classname="should find a BaseDataVariableType in the addressSpace">
    </testcase>
    <testcase name="DataAccess should find a DataItemType in the addressSpace" time="0.0000" classname="should find a DataItemType in the addressSpace">
    </testcase>
    <testcase name="DataAccess should find a ArrayItemType in the addressSpace" time="0.0000" classname="should find a ArrayItemType in the addressSpace">
    </testcase>
    <testcase name="DataAccess should find a AnalogItemType in the addressSpace" time="0.0010" classname="should find a AnalogItemType in the addressSpace">
    </testcase>
    <testcase name="DataAccess should find a DiscreteItemType in the addressSpace" time="0.0000" classname="should find a DiscreteItemType in the addressSpace">
    </testcase>
    <testcase name="DataAccess should find a TwoStateDiscreteType in the addressSpace" time="0.0000" classname="should find a TwoStateDiscreteType in the addressSpace">
    </testcase>
    <testcase name="DataAccess should find a MultiStateDiscreteType in the addressSpace" time="0.0000" classname="should find a MultiStateDiscreteType in the addressSpace">
    </testcase>
    <testcase name="DataAccess should find a MultiStateValueDiscreteType in the addressSpace" time="0.0000" classname="should find a MultiStateValueDiscreteType in the addressSpace">
    </testcase>
    <testcase name="DataAccess should find a EUInformation in the addressSpace" time="0.0000" classname="should find a EUInformation in the addressSpace">
    </testcase>
    <testcase name="DataAccess should find a Range in the addressSpace" time="0.0000" classname="should find a Range in the addressSpace">
    </testcase>
    <testcase name="DataAccess should have a UAVariableType XYArrayItemType" time="0.0000" classname="should have a UAVariableType XYArrayItemType">
    </testcase>
    <testcase name="DataAccess should have a ImageItemType " time="0.0000" classname="should have a ImageItemType ">
    </testcase>
    <testcase name="DataAccess should have a CubeItemType " time="0.0000" classname="should have a CubeItemType ">
    </testcase>
    <testcase name="DataAccess should encode and decode a string containing fancy characters" time="0.0010" classname="should encode and decode a string containing fancy characters">
    </testcase>
  </testsuite>
  <testsuite name="AnalogDataItem" timestamp="2021-02-09T06:55:04" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\data_access\test_data_item.ts" time="0.0120" failures="0">
    <testcase name="DataAccess AnalogDataItem should add an analog data item in the addresss_space" time="0.0060" classname="should add an analog data item in the addresss_space">
    </testcase>
    <testcase name="DataAccess AnalogDataItem Writing a value exceeding InstrumentRange shall return BadOutOfRange" time="0.0040" classname="Writing a value exceeding InstrumentRange shall return BadOutOfRange">
    </testcase>
    <testcase name="DataAccess AnalogDataItem Writing a value within InstrumentRange shall return Good" time="0.0020" classname="Writing a value within InstrumentRange shall return Good">
    </testcase>
  </testsuite>
  <testsuite name="PercentDeadband" timestamp="2021-02-09T06:55:04" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\data_access\test_data_item.ts" time="0.0020" failures="0">
    <testcase name="DataAccess PercentDeadband should provide a mechanism to operate PercentDeadband " time="0.0020" classname="should provide a mechanism to operate PercentDeadband ">
    </testcase>
  </testsuite>
  <testsuite name="YArrayItemType" timestamp="2021-02-09T06:55:04" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\data_access\test_data_item.ts" time="0.0070" failures="0">
    <testcase name="DataAccess YArrayItemType YArrayItemType should not be abstract" time="0.0000" classname="YArrayItemType should not be abstract">
    </testcase>
    <testcase name="DataAccess YArrayItemType should add a YArrayItem" time="0.0050" classname="should add a YArrayItem">
    </testcase>
    <testcase name="DataAccess YArrayItemType should add a YArrayItem with optional instrument range" time="0.0020" classname="should add a YArrayItem with optional instrument range">
    </testcase>
  </testsuite>
  <testsuite name="AnalogDataItem and semantic changes" timestamp="2021-02-09T06:55:04" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\data_access\test_data_item.ts" time="0.0030" failures="0">
    <testcase name="DataAccess AnalogDataItem and semantic changes should increase semantic_version when EURange changes" time="0.0010" classname="should increase semantic_version when EURange changes">
    </testcase>
    <testcase name="DataAccess AnalogDataItem and semantic changes should increase &apos;semantic_&apos; event when EURange changes" time="0.0010" classname="should increase &apos;semantic_&apos; event when EURange changes">
    </testcase>
    <testcase name="DataAccess AnalogDataItem and semantic changes should not emit a &apos;semantic_changed&apos; event when value changes" time="0.0010" classname="should not emit a &apos;semantic_changed&apos; event when value changes">
    </testcase>
  </testsuite>
  <testsuite name="TwoStateDiscreteType" timestamp="2021-02-09T06:55:04" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\data_access\test_data_item.ts" time="1.1170" failures="0">
    <testcase name="DataAccess TwoStateDiscreteType TwoStateDiscrete should not be abstract" time="0.0000" classname="TwoStateDiscrete should not be abstract">
    </testcase>
    <testcase name="DataAccess TwoStateDiscreteType should add a TwoStateDiscreteType variable" time="0.0020" classname="should add a TwoStateDiscreteType variable">
    </testcase>
    <testcase name="DataAccess TwoStateDiscreteType UATwoStateDiscrete#setValue" time="0.0020" classname="UATwoStateDiscrete#setValue">
    </testcase>
    <testcase name="DataAccess TwoStateDiscreteType ZZ2 should instantiate a DataType containing a TwoStateDiscreteType" time="0.0030" classname="ZZ2 should instantiate a DataType containing a TwoStateDiscreteType">
    </testcase>
    <testcase name="DataAccess TwoStateDiscreteType ZZ3 should create a TwoStateVariable with value getter/setter" time="0.0640" classname="ZZ3 should create a TwoStateVariable with value getter/setter">
    </testcase>
    <testcase name="DataAccess TwoStateDiscreteType ZZ4 should promote automatically TwoStateDiscrete Variable found while loading nodeset2.xml" time="1.0460" classname="ZZ4 should promote automatically TwoStateDiscrete Variable found while loading nodeset2.xml">
    </testcase>
  </testsuite>
  <testsuite name="MultiStateDiscreteType" timestamp="2021-02-09T06:55:05" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\data_access\test_data_item.ts" time="0.0660" failures="0">
    <testcase name="DataAccess MultiStateDiscreteType MultiStateDiscreteType should not be abstract" time="0.0000" classname="MultiStateDiscreteType should not be abstract">
    </testcase>
    <testcase name="DataAccess MultiStateDiscreteType should add a MultiStateDiscreteType variable" time="0.0010" classname="should add a MultiStateDiscreteType variable">
    </testcase>
    <testcase name="DataAccess MultiStateDiscreteType ZZ3 should create a MultiStateDiscreteType with value getter/setter" time="0.0650" classname="ZZ3 should create a MultiStateDiscreteType with value getter/setter">
    </testcase>
  </testsuite>
  <testsuite name="edge case tests" timestamp="2021-02-09T06:55:05" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\data_access\test_data_item.ts" time="0.0020" failures="0">
    <testcase name="DataAccess MultiStateDiscreteType edge case tests writing a value exceeding EnumString length shall return BadOutOfRange" time="0.0000" classname="writing a value exceeding EnumString length shall return BadOutOfRange">
    </testcase>
    <testcase name="DataAccess MultiStateDiscreteType edge case tests writing a value within EnumString length shall return Good" time="0.0010" classname="writing a value within EnumString length shall return Good">
    </testcase>
    <testcase name="DataAccess MultiStateDiscreteType edge case tests writing a value which has not the correct type shall return BadTypeMismatch" time="0.0000" classname="writing a value which has not the correct type shall return BadTypeMismatch">
    </testcase>
    <testcase name="DataAccess MultiStateDiscreteType edge case tests using setValue" time="0.0010" classname="using setValue">
    </testcase>
  </testsuite>
  <testsuite name="MultiStateValueDiscreteType" timestamp="2021-02-09T06:55:05" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\data_access\test_data_item.ts" time="0.0820" failures="0">
    <testcase name="DataAccess MultiStateValueDiscreteType MultiStateValueDiscreteType should not be abstract" time="0.0000" classname="MultiStateValueDiscreteType should not be abstract">
    </testcase>
    <testcase name="DataAccess MultiStateValueDiscreteType should add a MultiStateValueDiscreteType variable - form 1" time="0.0020" classname="should add a MultiStateValueDiscreteType variable - form 1">
    </testcase>
    <testcase name="DataAccess MultiStateValueDiscreteType should add a MultiStateValueDiscreteType variable - form 2" time="0.0020" classname="should add a MultiStateValueDiscreteType variable - form 2">
    </testcase>
    <testcase name="DataAccess MultiStateValueDiscreteType ZZ3 should create a MultiStateValueDiscreteType with value getter/setter" time="0.0720" classname="ZZ3 should create a MultiStateValueDiscreteType with value getter/setter">
    </testcase>
    <testcase name="DataAccess MultiStateValueDiscreteType ZZ2 should instantiate a DataType containing a MultiStateValueDiscreteType" time="0.0060" classname="ZZ2 should instantiate a DataType containing a MultiStateValueDiscreteType">
    </testcase>
  </testsuite>
  <testsuite name="edge case tests" timestamp="2021-02-09T06:55:05" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\data_access\test_data_item.ts" time="0.0030" failures="0">
    <testcase name="DataAccess MultiStateValueDiscreteType edge case tests writing a value not in the EnumValues map shall return BadOutOfRange" time="0.0010" classname="writing a value not in the EnumValues map shall return BadOutOfRange">
    </testcase>
    <testcase name="DataAccess MultiStateValueDiscreteType edge case tests writing a value within EnumValues shall return Good" time="0.0000" classname="writing a value within EnumValues shall return Good">
    </testcase>
    <testcase name="DataAccess MultiStateValueDiscreteType edge case tests changing MultiStateVariable value shall change valueAsText accordingly" time="0.0010" classname="changing MultiStateVariable value shall change valueAsText accordingly">
    </testcase>
    <testcase name="DataAccess MultiStateValueDiscreteType edge case tests UAMultiStateValueDiscreteVariable#setValue - 1" time="0.0000" classname="UAMultiStateValueDiscreteVariable#setValue - 1">
    </testcase>
    <testcase name="DataAccess MultiStateValueDiscreteType edge case tests UAMultiStateValueDiscreteVariable#setValue - 2" time="0.0010" classname="UAMultiStateValueDiscreteVariable#setValue - 2">
    </testcase>
  </testsuite>
  <testsuite name="MultiStateValueDiscreteType - 2" timestamp="2021-02-09T06:55:05" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0040" failures="0">
    <testcase name="MultiStateValueDiscreteType - 2 ZYZ-1 it should promoteToMultiStateValueDiscrete from an existing nodeset" time="0.0020" classname="ZYZ-1 it should promoteToMultiStateValueDiscrete from an existing nodeset">
    </testcase>
    <testcase name="MultiStateValueDiscreteType - 2 ZYZ-2 it should promoteToMultiStateDiscrete from an existing nodeset" time="0.0020" classname="ZYZ-2 it should promoteToMultiStateDiscrete from an existing nodeset">
    </testcase>
  </testsuite>
  <testsuite name="Testing Finite State Machine" timestamp="2021-02-09T06:55:06" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0130" failures="0">
    <testcase name="Testing Finite State Machine finite state machine should have expected mandatory and optional fields" time="0.0010" classname="finite state machine should have expected mandatory and optional fields">
    </testcase>
    <testcase name="Testing Finite State Machine should instantiate a finite state machine" time="0.0010" classname="should instantiate a finite state machine">
    </testcase>
    <testcase name="Testing Finite State Machine should instantiate a finite state machine with lastTransition" time="0.0010" classname="should instantiate a finite state machine with lastTransition">
    </testcase>
    <testcase name="Testing Finite State Machine should bind a finite state machine state variable" time="0.0010" classname="should bind a finite state machine state variable">
    </testcase>
    <testcase name="Testing Finite State Machine should explore FiniteStateMachineType" time="0.0010" classname="should explore FiniteStateMachineType">
    </testcase>
    <testcase name="Testing Finite State Machine should handle a FiniteStateMachine Type defined in a nodeset.xml file" time="0.0020" classname="should handle a FiniteStateMachine Type defined in a nodeset.xml file">
    </testcase>
    <testcase name="Testing Finite State Machine should define a new FiniteMachineStateType" time="0.0060" classname="should define a new FiniteMachineStateType">
    </testcase>
  </testsuite>
  <testsuite name="FiniteStateMachine with Multiple transition from one state to an other" timestamp="2021-02-09T06:55:06" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0030" failures="0">
    <testcase name="FiniteStateMachine with Multiple transition from one state to an other MachineState#setState: should display a warning if multiple transition exists and no predicate is provided" time="0.0020" classname="MachineState#setState: should display a warning if multiple transition exists and no predicate is provided">
    </testcase>
    <testcase name="FiniteStateMachine with Multiple transition from one state to an other MachineState#setState: should properly use the predicate to select which transition to use for the TransitionEventType Event" time="0.0010" classname="MachineState#setState: should properly use the predicate to select which transition to use for the TransitionEventType Event">
    </testcase>
  </testsuite>
  <testsuite name="Testing Historical Data Node" timestamp="2021-02-09T06:55:07" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0310" failures="0">
    <testcase name="Testing Historical Data Node HHH1- should create a &apos;HA Configuration&apos; node" time="0.0050" classname="HHH1- should create a &apos;HA Configuration&apos; node">
    </testcase>
    <testcase name="Testing Historical Data Node HHH2- should keep values in memory to provide historical reads" time="0.0060" classname="HHH2- should keep values in memory to provide historical reads">
    </testcase>
    <testcase name="Testing Historical Data Node HHH4- should store initial dataValue when historical stuff is set" time="0.0170" classname="HHH4- should store initial dataValue when historical stuff is set">
    </testcase>
    <testcase name="Testing Historical Data Node HHH5- #420 should be possible to set/unset historizing attribute " time="0.0030" classname="HHH5- #420 should be possible to set/unset historizing attribute ">
    </testcase>
  </testsuite>
  <testsuite name="HRRM HistoryReadRawModified" timestamp="2021-02-09T06:55:07" tests="11" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0040" failures="0">
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRRM-1 should be possible to retrieve the start date of a time series" time="0.0000" classname="HRRM-1 should be possible to retrieve the start date of a time series">
    </testcase>
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRRM-2 should be possible to retrieve the end date of a time series" time="0.0000" classname="HRRM-2 should be possible to retrieve the end date of a time series">
    </testcase>
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRRM-3 should be possible to retrieve a limited number of value between a start date  and a end date of a time series" time="0.0010" classname="HRRM-3 should be possible to retrieve a limited number of value between a start date  and a end date of a time series">
    </testcase>
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRRM-4 should be possible to retrieve values in reverse order (no continuation point)" time="0.0010" classname="HRRM-4 should be possible to retrieve values in reverse order (no continuation point)">
    </testcase>
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRRM-5 should be possible to retrieve values in reverse order (and continuation points)" time="0.0010" classname="HRRM-5 should be possible to retrieve values in reverse order (and continuation points)">
    </testcase>
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRRM-6 should return some data if endTime &amp; numValuesPerNode, are specified (no startTime)" time="0.0000" classname="HRRM-6 should return some data if endTime &amp; numValuesPerNode, are specified (no startTime)">
    </testcase>
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRRM-7 should return an error if less than two constraints are specified (no endTime, no startTime)" time="0.0010" classname="HRRM-7 should return an error if less than two constraints are specified (no endTime, no startTime)">
    </testcase>
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRRM-8 should return an error if less than two constraints are specified (endTime, no numValuesPerNode, no startTime)" time="0.0000" classname="HRRM-8 should return an error if less than two constraints are specified (endTime, no numValuesPerNode, no startTime)">
    </testcase>
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRED-1 [TODO] implement ReadEventDetails" time="0.0000" classname="HRED-1 [TODO] implement ReadEventDetails">
    </testcase>
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRPD-1 [TODO] implement ReadProcessedDetails" time="0.0000" classname="HRPD-1 [TODO] implement ReadProcessedDetails">
    </testcase>
    <testcase name="Testing Historical Data Node HRRM HistoryReadRawModified HRPD-1 [TODO] implement ReadAtTimeDetails" time="0.0000" classname="HRPD-1 [TODO] implement ReadAtTimeDetails">
    </testcase>
  </testsuite>
  <testsuite name="Testing Historical Data Node Enumeration" timestamp="2021-02-09T06:55:07" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="Testing Historical Data Node Enumeration should be easy to enumerate  UAVariable with History from a addressSpace" time="0.0000" classname="should be easy to enumerate  UAVariable with History from a addressSpace">
    </testcase>
  </testsuite>
  <testsuite name="Testing Historical Data Node" timestamp="2021-02-09T06:55:08" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0060" failures="0">
    <testcase name="Testing Historical Data Node HHH3- should keep values up to options.maxOnlineValues to provide historical reads" time="0.0060" classname="HHH3- should keep values up to options.maxOnlineValues to provide historical reads">
    </testcase>
  </testsuite>
  <testsuite name="testing Variables " timestamp="2021-02-09T06:55:08" tests="16" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0060" failures="0">
    <testcase name="testing Variables  accessLevel: CurrentRead | CurrentWrite	userAccessLevel: CurrentRead | CurrentWrite" time="0.0010" classname="accessLevel: CurrentRead | CurrentWrite	userAccessLevel: CurrentRead | CurrentWrite">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentRead | CurrentWrite	userAccessLevel: CurrentRead" time="0.0000" classname="accessLevel: CurrentRead | CurrentWrite	userAccessLevel: CurrentRead">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentRead | CurrentWrite	userAccessLevel: CurrentWrite" time="0.0000" classname="accessLevel: CurrentRead | CurrentWrite	userAccessLevel: CurrentWrite">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentRead | CurrentWrite	userAccessLevel: undefined" time="0.0010" classname="accessLevel: CurrentRead | CurrentWrite	userAccessLevel: undefined">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentRead 	userAccessLevel: CurrentRead | CurrentWrite" time="0.0000" classname="accessLevel: CurrentRead 	userAccessLevel: CurrentRead | CurrentWrite">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentRead 	userAccessLevel: CurrentRead" time="0.0000" classname="accessLevel: CurrentRead 	userAccessLevel: CurrentRead">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentRead 	userAccessLevel: CurrentWrite" time="0.0000" classname="accessLevel: CurrentRead 	userAccessLevel: CurrentWrite">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentRead 	userAccessLevel: undefined" time="0.0000" classname="accessLevel: CurrentRead 	userAccessLevel: undefined">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentWrite 	userAccessLevel: CurrentRead | CurrentWrite" time="0.0010" classname="accessLevel: CurrentWrite 	userAccessLevel: CurrentRead | CurrentWrite">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentWrite 	userAccessLevel: CurrentRead" time="0.0010" classname="accessLevel: CurrentWrite 	userAccessLevel: CurrentRead">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentWrite 	userAccessLevel: CurrentWrite" time="0.0000" classname="accessLevel: CurrentWrite 	userAccessLevel: CurrentWrite">
    </testcase>
    <testcase name="testing Variables  accessLevel: CurrentWrite 	userAccessLevel: undefined" time="0.0010" classname="accessLevel: CurrentWrite 	userAccessLevel: undefined">
    </testcase>
    <testcase name="testing Variables  accessLevel: undefined 	userAccessLevel: CurrentRead | CurrentWrite" time="0.0000" classname="accessLevel: undefined 	userAccessLevel: CurrentRead | CurrentWrite">
    </testcase>
    <testcase name="testing Variables  accessLevel: undefined 	userAccessLevel: CurrentRead" time="0.0000" classname="accessLevel: undefined 	userAccessLevel: CurrentRead">
    </testcase>
    <testcase name="testing Variables  accessLevel: undefined 	userAccessLevel: CurrentWrite" time="0.0000" classname="accessLevel: undefined 	userAccessLevel: CurrentWrite">
    </testcase>
    <testcase name="testing Variables  accessLevel: undefined 	userAccessLevel: undefined" time="0.0010" classname="accessLevel: undefined 	userAccessLevel: undefined">
    </testcase>
  </testsuite>
  <testsuite name="testing address space" timestamp="2021-02-09T06:55:09" tests="17" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0150" failures="0">
    <testcase name="testing address space BaseNode#findReferencesEx - should find HierarchicalReferences" time="0.0010" classname="BaseNode#findReferencesEx - should find HierarchicalReferences">
    </testcase>
    <testcase name="testing address space AddressSpace#deleteNode - should remove an object from the address space" time="0.0010" classname="AddressSpace#deleteNode - should remove an object from the address space">
    </testcase>
    <testcase name="testing address space AddressSpace#deleteNode - should remove an object and its children from the address space" time="0.0020" classname="AddressSpace#deleteNode - should remove an object and its children from the address space">
    </testcase>
    <testcase name="testing address space AddressSpace#deleteNode - should remove a component of a existing object" time="0.0030" classname="AddressSpace#deleteNode - should remove a component of a existing object">
    </testcase>
    <testcase name="testing address space AddressSpace#findCorrespondingBasicDataType i=13 =&gt; DataType.String" time="0.0000" classname="AddressSpace#findCorrespondingBasicDataType i=13 =&gt; DataType.String">
    </testcase>
    <testcase name="testing address space AddressSpace#findCorrespondingBasicDataType i=338 =&gt; BuildInfo =&gt; DataType.ExtensionObject" time="0.0000" classname="AddressSpace#findCorrespondingBasicDataType i=338 =&gt; BuildInfo =&gt; DataType.ExtensionObject">
    </testcase>
    <testcase name="testing address space AddressSpace#findCorrespondingBasicDataType variation 1 - Alias" time="0.0000" classname="AddressSpace#findCorrespondingBasicDataType variation 1 - Alias">
    </testcase>
    <testcase name="testing address space AddressSpace#findCorrespondingBasicDataType variation 2 - nodeId as String" time="0.0010" classname="AddressSpace#findCorrespondingBasicDataType variation 2 - nodeId as String">
    </testcase>
    <testcase name="testing address space AddressSpace#findCorrespondingBasicDataType variation 3 - nodeId as NodeId" time="0.0000" classname="AddressSpace#findCorrespondingBasicDataType variation 3 - nodeId as NodeId">
    </testcase>
    <testcase name="testing address space AddressSpace#findCorrespondingBasicDataType i=852 (Enumeration ServerState) =&gt; UInt32" time="0.0000" classname="AddressSpace#findCorrespondingBasicDataType i=852 (Enumeration ServerState) =&gt; UInt32">
    </testcase>
    <testcase name="testing address space  AddressSpace#findCorrespondingBasicDataType  i=13 =&gt; DataType.String" time="0.0010" classname=" AddressSpace#findCorrespondingBasicDataType  i=13 =&gt; DataType.String">
    </testcase>
    <testcase name="testing address space AddressSpace#findCorrespondingBasicDataType i=338 =&gt; BuildInfo =&gt; DataType.ExtensionObject" time="0.0000" classname="AddressSpace#findCorrespondingBasicDataType i=338 =&gt; BuildInfo =&gt; DataType.ExtensionObject">
    </testcase>
    <testcase name="testing address space AddressSpace#findCorrespondingBasicDataType variation 1 - Alias" time="0.0000" classname="AddressSpace#findCorrespondingBasicDataType variation 1 - Alias">
    </testcase>
    <testcase name="testing address space AddressSpace#findCorrespondingBasicDataType variation 2 - nodeId as String" time="0.0010" classname="AddressSpace#findCorrespondingBasicDataType variation 2 - nodeId as String">
    </testcase>
    <testcase name="testing address space AddressSpace#findCorrespondingBasicDataType variation 3 - nodeId as NodeId" time="0.0000" classname="AddressSpace#findCorrespondingBasicDataType variation 3 - nodeId as NodeId">
    </testcase>
    <testcase name="testing address space AddressSpace#addObject : should verify that Only Organizes References are used to relate Objects to the &apos;Objects&apos; standard Object." time="0.0010" classname="AddressSpace#addObject : should verify that Only Organizes References are used to relate Objects to the &apos;Objects&apos; standard Object.">
    </testcase>
    <testcase name="testing address space AddressSpace#extractRootViews : it should provide a mean to extract the list of views to which the object is visible" time="0.0040" classname="AddressSpace#extractRootViews : it should provide a mean to extract the list of views to which the object is visible">
    </testcase>
  </testsuite>
  <testsuite name="AddressSpace : testing add enumeration type" timestamp="2021-02-09T06:55:09" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0070" failures="0">
    <testcase name="AddressSpace : testing add enumeration type should add a new Enumeration type into an address space - Form 1" time="0.0040" classname="should add a new Enumeration type into an address space - Form 1">
    </testcase>
    <testcase name="AddressSpace : testing add enumeration type should add a new Enumeration type into an address space - Form 2" time="0.0030" classname="should add a new Enumeration type into an address space - Form 2">
    </testcase>
    <testcase name="AddressSpace : testing add enumeration type should add a writable new Enumeration type into an address space  #552 " time="0.0000" classname="should add a writable new Enumeration type into an address space  #552 ">
    </testcase>
  </testsuite>
  <testsuite name="AddressSpace : add event type " timestamp="2021-02-09T06:55:09" tests="13" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1090" failures="0">
    <testcase name="AddressSpace : add event type  #generateEventId should generate event id sequentially" time="0.0010" classname="#generateEventId should generate event id sequentially">
    </testcase>
    <testcase name="AddressSpace : add event type  should find BaseEventType" time="0.0000" classname="should find BaseEventType">
    </testcase>
    <testcase name="AddressSpace : add event type  BaseEventType should be abstract " time="0.0000" classname="BaseEventType should be abstract ">
    </testcase>
    <testcase name="AddressSpace : add event type  should find AuditEventType" time="0.0000" classname="should find AuditEventType">
    </testcase>
    <testcase name="AddressSpace : add event type  should verify that AuditEventType is a superType of BaseEventType" time="0.0000" classname="should verify that AuditEventType is a superType of BaseEventType">
    </testcase>
    <testcase name="AddressSpace : add event type  should find a newly added EventType" time="0.0000" classname="should find a newly added EventType">
    </testcase>
    <testcase name="AddressSpace : add event type  should retrieve EventType in several ways" time="0.0000" classname="should retrieve EventType in several ways">
    </testcase>
    <testcase name="AddressSpace : add event type  added EventType should be abstract by default" time="0.0010" classname="added EventType should be abstract by default">
    </testcase>
    <testcase name="AddressSpace : add event type  should be possible to add a non-abstract event type" time="0.0000" classname="should be possible to add a non-abstract event type">
    </testcase>
    <testcase name="AddressSpace : add event type  should select node in a EventType using a SelectClause on BaseEventType" time="0.0010" classname="should select node in a EventType using a SelectClause on BaseEventType">
    </testcase>
    <testcase name="AddressSpace : add event type  should select node in a EventType using a SelectClause  n AuditEventType" time="0.0010" classname="should select node in a EventType using a SelectClause  n AuditEventType">
    </testcase>
    <testcase name="AddressSpace : add event type  should instantiate a condition efficiently ( more than 1000 per second on a decent computer)" time="0.1040" classname="should instantiate a condition efficiently ( more than 1000 per second on a decent computer)">
    </testcase>
    <testcase name="AddressSpace : add event type  #constructEventData " time="0.0010" classname="#constructEventData ">
    </testcase>
  </testsuite>
  <testsuite name="test AddressSpace#generateEventId" timestamp="2021-02-09T06:55:09" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="AddressSpace : add event type  test AddressSpace#generateEventId it should generate different eventId each time" time="0.0000" classname="it should generate different eventId each time">
    </testcase>
  </testsuite>
  <testsuite name="testing add new ObjectType " timestamp="2021-02-09T06:55:09" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0090" failures="0">
    <testcase name="testing add new ObjectType  should create a new TemperatureSensorType" time="0.0060" classname="should create a new TemperatureSensorType">
    </testcase>
    <testcase name="testing add new ObjectType  should create a new CameraType with Method" time="0.0030" classname="should create a new CameraType with Method">
    </testcase>
  </testsuite>
  <testsuite name="testing add TwoStateVariable " timestamp="2021-02-09T06:55:09" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0180" failures="0">
    <testcase name="testing add TwoStateVariable  should add a TwoStateVariableType" time="0.0020" classname="should add a TwoStateVariableType">
    </testcase>
    <testcase name="testing add TwoStateVariable  TwoStateVariableType should add an uncertain value after creation" time="0.0010" classname="TwoStateVariableType should add an uncertain value after creation">
    </testcase>
    <testcase name="testing add TwoStateVariable  should add a TwoStateVariableType with trueState and falseState as String" time="0.0010" classname="should add a TwoStateVariableType with trueState and falseState as String">
    </testcase>
    <testcase name="testing add TwoStateVariable  should add a TwoStateVariableType with transitionTime" time="0.0020" classname="should add a TwoStateVariableType with transitionTime">
    </testcase>
    <testcase name="testing add TwoStateVariable  SubState =&gt; IsFalseSubStateOf" time="0.0030" classname="SubState =&gt; IsFalseSubStateOf">
    </testcase>
    <testcase name="testing add TwoStateVariable  SubState =&gt; IsTrueSubStateOf" time="0.0060" classname="SubState =&gt; IsTrueSubStateOf">
    </testcase>
    <testcase name="testing add TwoStateVariable  should add a TwoStateVariableType with effectiveTransitionTime" time="0.0030" classname="should add a TwoStateVariableType with effectiveTransitionTime">
    </testcase>
  </testsuite>
  <testsuite name="testing add new ObjectType " timestamp="2021-02-09T06:55:10" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing add new ObjectType  should add a new ObjectType (=&gt; BaseObjectType)" time="0.0010" classname="should add a new ObjectType (=&gt; BaseObjectType)">
    </testcase>
    <testcase name="testing add new ObjectType  should add a new VariableType (=&gt; BaseVariableType)" time="0.0000" classname="should add a new VariableType (=&gt; BaseVariableType)">
    </testcase>
    <testcase name="testing add new ObjectType  should add a new VariableType (=&gt; BaseDataVariableType)" time="0.0000" classname="should add a new VariableType (=&gt; BaseDataVariableType)">
    </testcase>
  </testsuite>
  <testsuite name="AddressSpace#browsePath" timestamp="2021-02-09T06:55:10" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_address_space_browse_path.ts" time="0.0070" failures="0">
    <testcase name="AddressSpace#browsePath should browse Server" time="0.0010" classname="should browse Server">
    </testcase>
    <testcase name="AddressSpace#browsePath should browse Status" time="0.0010" classname="should browse Status">
    </testcase>
    <testcase name="AddressSpace#browsePath #QQ browsing a path when a null target name is not in the last element shall return an error " time="0.0010" classname="#QQ browsing a path when a null target name is not in the last element shall return an error ">
    </testcase>
    <testcase name="AddressSpace#browsePath should browse EventGeneratorObject" time="0.0010" classname="should browse EventGeneratorObject">
    </testcase>
    <testcase name="AddressSpace#browsePath should browse MyEventType" time="0.0020" classname="should browse MyEventType">
    </testcase>
    <testcase name="AddressSpace#browsePath should browse an empty path" time="0.0000" classname="should browse an empty path">
    </testcase>
    <testcase name="AddressSpace#browsePath should return one target" time="0.0010" classname="should return one target">
    </testcase>
  </testsuite>
  <testsuite name="AddressSpace#browsePath 2/2" timestamp="2021-02-09T06:55:10" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_address_space_browse_path.ts" time="0.0010" failures="0">
    <testcase name="AddressSpace#browsePath 2/2 XSXS should explore browse path and only return one target" time="0.0010" classname="XSXS should explore browse path and only return one target">
    </testcase>
  </testsuite>
  <testsuite name="AddressSpace#browsePath 2/2" timestamp="2021-02-09T06:55:11" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_address_space_browse_path.ts" time="0.0010" failures="0">
    <testcase name="AddressSpace#browsePath 2/2 AddressSpace#deleteNode =&gt; delete OOO" time="0.0010" classname="AddressSpace#deleteNode =&gt; delete OOO">
    </testcase>
  </testsuite>
  <testsuite name="testing address space namespace loading" timestamp="2021-02-09T06:55:11" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="2.2590" failures="0">
    <testcase name="testing address space namespace loading should be possible to create a ServerStatus ExtensionObject" time="0.0010" classname="should be possible to create a ServerStatus ExtensionObject">
    </testcase>
    <testcase name="testing address space namespace loading should be possible to create an AttributeOperand ExtensionObject" time="0.0000" classname="should be possible to create an AttributeOperand ExtensionObject">
    </testcase>
    <testcase name="testing address space namespace loading should create a arbitrary structure from a second name space" time="0.0060" classname="should create a arbitrary structure from a second name space">
    </testcase>
    <testcase name="testing address space namespace loading should explore the DataType through OPCUA" time="0.0010" classname="should explore the DataType through OPCUA">
    </testcase>
    <testcase name="testing address space namespace loading AC explore the DataType through OPCUA" time="0.0000" classname="AC explore the DataType through OPCUA">
    </testcase>
    <testcase name="testing address space namespace loading should bind an xml-preloaded Extension Object Variable : ServerStatus " time="0.0030" classname="should bind an xml-preloaded Extension Object Variable : ServerStatus ">
    </testcase>
    <testcase name="testing address space namespace loading should instantiate SessionDiagnostics in a linear time" time="2.2480" classname="should instantiate SessionDiagnostics in a linear time">
    </testcase>
  </testsuite>
  <testsuite name="AddressSpace#delete" timestamp="2021-02-09T06:55:14" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_address_space_delete_node.ts" time="0.0020" failures="0">
    <testcase name="AddressSpace#delete DX1 sshould delete node " time="0.0010" classname="DX1 sshould delete node ">
    </testcase>
    <testcase name="AddressSpace#delete DX2 should delete node " time="0.0010" classname="DX2 should delete node ">
    </testcase>
  </testsuite>
  <testsuite name="AddressSpace#deleteNode-b" timestamp="2021-02-09T06:55:14" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_address_space_delete_node.ts" time="0.0260" failures="0">
    <testcase name="AddressSpace#deleteNode-b YUYU should create an alarm and delete it" time="0.0260" classname="YUYU should create an alarm and delete it">
    </testcase>
  </testsuite>
  <testsuite name="Testing AddressSpace memory Leaks" timestamp="2021-02-09T06:55:14" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_address_space_dispose.ts" time="0.7940" failures="0">
    <testcase name="Testing AddressSpace memory Leaks It should dispose an address_space" time="0.0380" classname="It should dispose an address_space">
    </testcase>
    <testcase name="Testing AddressSpace memory Leaks It should repeatedly load an address_space =&gt; no Leak" time="0.7560" classname="It should repeatedly load an address_space =&gt; no Leak">
    </testcase>
  </testsuite>
  <testsuite name="testing AddressSpace#findReferenceType and findReferenceTypeFromInverseName" timestamp="2021-02-09T06:55:15" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_address_space_find_reference.ts" time="0.0010" failures="0">
    <testcase name="testing AddressSpace#findReferenceType and findReferenceTypeFromInverseName findReferenceType findReferenceTypeFromInverseName - should provide a way to access a referenceType from its inverse name" time="0.0010" classname="findReferenceType findReferenceTypeFromInverseName - should provide a way to access a referenceType from its inverse name">
    </testcase>
    <testcase name="testing AddressSpace#findReferenceType and findReferenceTypeFromInverseName should normalize a {referenceType/isForward} combination" time="0.0000" classname="should normalize a {referenceType/isForward} combination">
    </testcase>
    <testcase name="testing AddressSpace#findReferenceType and findReferenceTypeFromInverseName inverseReferenceType - should provide a easy way to get the inverse name of a Reference Type" time="0.0000" classname="inverseReferenceType - should provide a easy way to get the inverse name of a Reference Type">
    </testcase>
  </testsuite>
  <testsuite name="address_space ModelChangeEvent" timestamp="2021-02-09T06:55:15" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_address_space_model_change_event.ts" time="0.0080" failures="0">
    <testcase name="address_space ModelChangeEvent a node with a NodeVersion property shall trigger a ModelChangeEvent and update its NodeVersion when a object is added as one of its component" time="0.0040" classname="a node with a NodeVersion property shall trigger a ModelChangeEvent and update its NodeVersion when a object is added as one of its component">
    </testcase>
    <testcase name="address_space ModelChangeEvent a node with a NodeVersion property shall trigger a ModelChangeEvent and update its NodeVersion when one of its child object is deleted" time="0.0020" classname="a node with a NodeVersion property shall trigger a ModelChangeEvent and update its NodeVersion when one of its child object is deleted">
    </testcase>
    <testcase name="address_space ModelChangeEvent a node with a NodeVersion property shall trigger a ModelChangeEvent and update its NodeVersion when a reference is added" time="0.0010" classname="a node with a NodeVersion property shall trigger a ModelChangeEvent and update its NodeVersion when a reference is added">
    </testcase>
    <testcase name="address_space ModelChangeEvent addressSpace#modelChangeTransactions should compress model change events " time="0.0010" classname="addressSpace#modelChangeTransactions should compress model change events ">
    </testcase>
  </testsuite>
  <testsuite name="testing address space namespace" timestamp="2021-02-09T06:55:16" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing address space namespace #getNamespaceUri : should have namespace 0" time="0.0000" classname="#getNamespaceUri : should have namespace 0">
    </testcase>
    <testcase name="testing address space namespace #registerNamespace should register new namespace" time="0.0010" classname="#registerNamespace should register new namespace">
    </testcase>
  </testsuite>
  <testsuite name="testing  address space namespace loading" timestamp="2021-02-09T06:55:16" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.5100" failures="0">
    <testcase name="testing  address space namespace loading should process namespaces and translate namespace index when loading node set xml files" time="0.0500" classname="should process namespaces and translate namespace index when loading node set xml files">
    </testcase>
    <testcase name="testing  address space namespace loading should process multiple xml files that reference each other" time="0.0450" classname="should process multiple xml files that reference each other">
    </testcase>
    <testcase name="testing  address space namespace loading should process namespaces with DI" time="0.4150" classname="should process namespaces with DI">
    </testcase>
  </testsuite>
  <testsuite name="testing add new ObjectType " timestamp="2021-02-09T06:55:16" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0070" failures="0">
    <testcase name="testing add new ObjectType  should instantiate a objectType that uses custom HasChild Property" time="0.0030" classname="should instantiate a objectType that uses custom HasChild Property">
    </testcase>
    <testcase name="testing add new ObjectType  should be possible to choose which optional item to instantiate in sub objects" time="0.0040" classname="should be possible to choose which optional item to instantiate in sub objects">
    </testcase>
  </testsuite>
  <testsuite name="testing ArgumentList special encode/decode process" timestamp="2021-02-09T06:55:16" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_argument_list.ts" time="0.0010" failures="0">
    <testcase name="testing ArgumentList special encode/decode process should encode/decode an ArgumentList (scalar)" time="0.0000" classname="should encode/decode an ArgumentList (scalar)">
    </testcase>
    <testcase name="testing ArgumentList special encode/decode process should encode/decode an ArgumentList (array)" time="0.0010" classname="should encode/decode an ArgumentList (array)">
    </testcase>
    <testcase name="testing ArgumentList special encode/decode process should encode/decode an ArgumentList with a complex definition" time="0.0000" classname="should encode/decode an ArgumentList with a complex definition">
    </testcase>
  </testsuite>
  <testsuite name="verifyArguments_ArgumentList" timestamp="2021-02-09T06:55:16" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_argument_list.ts" time="0.0030" failures="0">
    <testcase name="verifyArguments_ArgumentList verifyArguments_ArgumentList - One UInt32 - Good" time="0.0010" classname="verifyArguments_ArgumentList - One UInt32 - Good">
    </testcase>
    <testcase name="verifyArguments_ArgumentList verifyArguments_ArgumentList - One UInt32 - TypeMismatch" time="0.0000" classname="verifyArguments_ArgumentList - One UInt32 - TypeMismatch">
    </testcase>
    <testcase name="verifyArguments_ArgumentList verifyArguments_ArgumentList - One UInt32 - BadArgumentsMissing" time="0.0000" classname="verifyArguments_ArgumentList - One UInt32 - BadArgumentsMissing">
    </testcase>
    <testcase name="verifyArguments_ArgumentList verifyArguments_ArgumentList - One UInt32 - BadTooManyArguments" time="0.0000" classname="verifyArguments_ArgumentList - One UInt32 - BadTooManyArguments">
    </testcase>
    <testcase name="verifyArguments_ArgumentList verifyArguments_ArgumentList - One UInt32 - BadTooManyArguments &amp; BadTypeMismatch" time="0.0000" classname="verifyArguments_ArgumentList - One UInt32 - BadTooManyArguments &amp; BadTypeMismatch">
    </testcase>
    <testcase name="verifyArguments_ArgumentList methodInputArgumentsOneArrayOfAny - Good" time="0.0010" classname="methodInputArgumentsOneArrayOfAny - Good">
    </testcase>
    <testcase name="verifyArguments_ArgumentList methodInputArgumentsOneArrayOfAny - TypeMismatch" time="0.0000" classname="methodInputArgumentsOneArrayOfAny - TypeMismatch">
    </testcase>
    <testcase name="verifyArguments_ArgumentList methodInputArgumentsOneArrayOfAny - SpecialCase" time="0.0010" classname="methodInputArgumentsOneArrayOfAny - SpecialCase">
    </testcase>
  </testsuite>
  <testsuite name="Automatic Generation of  string nodeId" timestamp="2021-02-09T06:55:17" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_automatic_generation_of_string_node_ids.ts" time="0.0090" failures="0">
    <testcase name="Automatic Generation of  string nodeId testing default string node creation (NodeOPCUA specified)

      Given a Node with a String Node ( for instance : ns=1;s=abcdef )  
      When  I add a component or a property to this node, without specifying a nodeId
      Then  NodeOPCUA should assign a string nodeId to the child node made from
            the nodeId of the parent node and the browse name of the child.
" time="0.0020" classname="testing default string node creation (NodeOPCUA specified)

      Given a Node with a String Node ( for instance : ns=1;s=abcdef )  
      When  I add a component or a property to this node, without specifying a nodeId
      Then  NodeOPCUA should assign a string nodeId to the child node made from
            the nodeId of the parent node and the browse name of the child.
">
    </testcase>
    <testcase name="Automatic Generation of  string nodeId should generate string NodeIds on components and properties when instantiating an object type that have a string nodeId (node-opcua specific)" time="0.0030" classname="should generate string NodeIds on components and properties when instantiating an object type that have a string nodeId (node-opcua specific)">
    </testcase>
    <testcase name="Automatic Generation of  string nodeId should generate string NodeIds on components and properties when instantiating an VariableType that have a string nodeId (node-opcua specific)" time="0.0040" classname="should generate string NodeIds on components and properties when instantiating an VariableType that have a string nodeId (node-opcua specific)">
    </testcase>
  </testsuite>
  <testsuite name="Given a derived ObjectType " timestamp="2021-02-09T06:55:17" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_automatic_generation_of_string_node_ids.ts" time="0.0030" failures="0">
    <testcase name="Automatic Generation of  string nodeId Given a derived ObjectType  When instantiating a derived ObjectType, unwanted optional components should not be instantiated" time="0.0010" classname="When instantiating a derived ObjectType, unwanted optional components should not be instantiated">
    </testcase>
    <testcase name="Automatic Generation of  string nodeId Given a derived ObjectType  When instantiating a derived ObjectType, wanted optional components should be instantiated" time="0.0020" classname="When instantiating a derived ObjectType, wanted optional components should be instantiated">
    </testcase>
  </testsuite>
  <testsuite name="Testing UAObject" timestamp="2021-02-09T06:55:17" tests="17" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0130" failures="0">
    <testcase name="Testing UAObject AddressSpace#addObject should create a &apos;hasTypeDefinition&apos; reference on node" time="0.0010" classname="AddressSpace#addObject should create a &apos;hasTypeDefinition&apos; reference on node">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference - referenceType as ReferenceType BrowseName" time="0.0010" classname="BaseNode#addReference - referenceType as ReferenceType BrowseName">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference - referenceType as nodeId String" time="0.0000" classname="BaseNode#addReference - referenceType as nodeId String">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference - referenceType as NodeId" time="0.0000" classname="BaseNode#addReference - referenceType as NodeId">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference - nodeId as NodeId" time="0.0010" classname="BaseNode#addReference - nodeId as NodeId">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference - nodeId as Node" time="0.0010" classname="BaseNode#addReference - nodeId as Node">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference - nodeId as String" time="0.0010" classname="BaseNode#addReference - nodeId as String">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference with invalid referenceType should raise an exception" time="0.0010" classname="BaseNode#addReference with invalid referenceType should raise an exception">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference - four equivalent cases" time="0.0010" classname="BaseNode#addReference - four equivalent cases">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference - 2 nodes - should properly update backward references on referenced nodes" time="0.0010" classname="BaseNode#addReference - 2 nodes - should properly update backward references on referenced nodes">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference - 3 nodes - should properly update backward references on referenced nodes" time="0.0010" classname="BaseNode#addReference - 3 nodes - should properly update backward references on referenced nodes">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference should throw if the same reference is added twice" time="0.0010" classname="BaseNode#addReference should throw if the same reference is added twice">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference internal cache must be invalidated" time="0.0010" classname="BaseNode#addReference internal cache must be invalidated">
    </testcase>
    <testcase name="Testing UAObject BaseNode#addReference (Inverse) internal cache must be invalidated" time="0.0000" classname="BaseNode#addReference (Inverse) internal cache must be invalidated">
    </testcase>
    <testcase name="Testing UAObject BaseNode#namespaceIndex" time="0.0000" classname="BaseNode#namespaceIndex">
    </testcase>
    <testcase name="Testing UAObject BaseNode#namespaceUri" time="0.0010" classname="BaseNode#namespaceUri">
    </testcase>
    <testcase name="Testing UAObject AddressSpace#parent should provide a parent property to access parent node" time="0.0010" classname="AddressSpace#parent should provide a parent property to access parent node">
    </testcase>
  </testsuite>
  <testsuite name="Extension Object binding and sub  components
" timestamp="2021-02-09T06:55:17" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="bindObject" timestamp="2021-02-09T06:55:17" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0360" failures="0">
    <testcase name="Extension Object binding and sub  components
 bindObject ZZ1 - should handle a Variable containing a ServiceCounterDataType" time="0.0050" classname="ZZ1 - should handle a Variable containing a ServiceCounterDataType">
    </testcase>
    <testcase name="Extension Object binding and sub  components
 bindObject ZZ2 - should handle a Variable containing a ServerStatus" time="0.0040" classname="ZZ2 - should handle a Variable containing a ServerStatus">
    </testcase>
    <testcase name="Extension Object binding and sub  components
 bindObject ZZ3 - should handle a Variable containing a SessionDiagnostic" time="0.0270" classname="ZZ3 - should handle a Variable containing a SessionDiagnostic">
    </testcase>
  </testsuite>
  <testsuite name="should be possible to bind an Extension Object properties with variable node properties" timestamp="2021-02-09T06:55:17" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0100" failures="0">
    <testcase name="Extension Object binding and sub  components
 should be possible to bind an Extension Object properties with variable node properties ZA1- a ExtensionObject variable should have the expected dataType node" time="0.0010" classname="ZA1- a ExtensionObject variable should have the expected dataType node">
    </testcase>
    <testcase name="Extension Object binding and sub  components
 should be possible to bind an Extension Object properties with variable node properties ZA2- sessionDiagnostics should have a dataValue with the expected ExtensionObjectType" time="0.0010" classname="ZA2- sessionDiagnostics should have a dataValue with the expected ExtensionObjectType">
    </testcase>
    <testcase name="Extension Object binding and sub  components
 should be possible to bind an Extension Object properties with variable node properties ZA3- updateExtensionObjectPartial: it should be possible to cascade changes by acting on the whole ExtensionObject" time="0.0010" classname="ZA3- updateExtensionObjectPartial: it should be possible to cascade changes by acting on the whole ExtensionObject">
    </testcase>
    <testcase name="Extension Object binding and sub  components
 should be possible to bind an Extension Object properties with variable node properties ZA4- updateExtensionObjectPartial: it should be possible to cascade changes by acting on the whole ExtensionObject - middle" time="0.0030" classname="ZA4- updateExtensionObjectPartial: it should be possible to cascade changes by acting on the whole ExtensionObject - middle">
    </testcase>
    <testcase name="Extension Object binding and sub  components
 should be possible to bind an Extension Object properties with variable node properties ZA5- incrementExtensionObjectPartial: it should be possible to cascade changes by increasing a value on ExtensionObject" time="0.0020" classname="ZA5- incrementExtensionObjectPartial: it should be possible to cascade changes by increasing a value on ExtensionObject">
    </testcase>
    <testcase name="Extension Object binding and sub  components
 should be possible to bind an Extension Object properties with variable node properties ZA6- changing property values in extension object directly should propagates changes and notification to NodeVariables" time="0.0020" classname="ZA6- changing property values in extension object directly should propagates changes and notification to NodeVariables">
    </testcase>
  </testsuite>
  <testsuite name="Extension Object binding and sub  components On MachineVision" timestamp="2021-02-09T06:55:17" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0140" failures="0">
    <testcase name="Extension Object binding and sub  components On MachineVision MachineVision-BindExtensionObject should instantitate a ResultType" time="0.0080" classname="MachineVision-BindExtensionObject should instantitate a ResultType">
    </testcase>
    <testcase name="Extension Object binding and sub  components On MachineVision MachineVision-BindExtensionObject should instantitate a ResultType" time="0.0060" classname="MachineVision-BindExtensionObject should instantitate a ResultType">
    </testcase>
  </testsuite>
  <testsuite name="Testing Boiler System" timestamp="2021-02-09T06:55:18" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1430" failures="0">
    <testcase name="Testing Boiler System should handle StateMachine derived from ProgramStateMachine" time="0.0030" classname="should handle StateMachine derived from ProgramStateMachine">
    </testcase>
    <testcase name="Testing Boiler System should handle StateMachine derived from ProgramStateMachine" time="0.0030" classname="should handle StateMachine derived from ProgramStateMachine">
    </testcase>
    <testcase name="Testing Boiler System should create a boiler system" time="0.1370" classname="should create a boiler system">
    </testcase>
  </testsuite>
  <testsuite name="testing address space" timestamp="2021-02-09T06:55:19" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0060" failures="0">
    <testcase name="testing address space should dump references" time="0.0040" classname="should dump references">
    </testcase>
    <testcase name="testing address space should dump a browseDescription" time="0.0020" classname="should dump a browseDescription">
    </testcase>
    <testcase name="testing address space should provide a convenient a way to construct the node full name " time="0.0000" classname="should provide a convenient a way to construct the node full name ">
    </testcase>
  </testsuite>
  <testsuite name="testing dump browseDescriptions" timestamp="2021-02-09T06:55:19" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="testing dump browseDescriptions should provide a way to find a Method object by nodeId" time="0.0000" classname="should provide a way to find a Method object by nodeId">
    </testcase>
  </testsuite>
  <testsuite name="Companion " timestamp="2021-02-09T06:55:19" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_companions.ts" time="0.7190" failures="0">
    <testcase name="Companion  Kitchen" time="0.7190" classname="Kitchen">
    </testcase>
  </testsuite>
  <testsuite name="ContinuationPointManager" timestamp="2021-02-09T06:55:20" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_continuation_point_manager.js" time="0.0010" failures="0">
    <testcase name="ContinuationPointManager should create a ContinuationPointManager" time="0.0000" classname="should create a ContinuationPointManager">
    </testcase>
    <testcase name="ContinuationPointManager should return the full a array and no continuation point if array length is less than maxElements" time="0.0000" classname="should return the full a array and no continuation point if array length is less than maxElements">
    </testcase>
    <testcase name="ContinuationPointManager should return the full a array if maxElements===0" time="0.0000" classname="should return the full a array if maxElements===0">
    </testcase>
    <testcase name="ContinuationPointManager should return up  maxElements if array.length is greater than maxElements" time="0.0010" classname="should return up  maxElements if array.length is greater than maxElements">
    </testcase>
    <testcase name="ContinuationPointManager ContinuationPointManager#cancel - should be possible to cancel a continuation point to free up memory" time="0.0000" classname="ContinuationPointManager#cancel - should be possible to cancel a continuation point to free up memory">
    </testcase>
    <testcase name="ContinuationPointManager ContinuationPointManager#hasReachMaximum" time="0.0000" classname="ContinuationPointManager#hasReachMaximum">
    </testcase>
  </testsuite>
  <testsuite name="testing UADataype -  Attribute" timestamp="2021-02-09T06:55:20" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="testing UADataype -  Attribute namespace should have HasSubtype reference" time="0.0000" classname="namespace should have HasSubtype reference">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#readAttribute" time="0.0000" classname="UADataType#readAttribute">
    </testcase>
  </testsuite>
  <testsuite name="UADataType#isSupertypeOf" timestamp="2021-02-09T06:55:20" tests="17" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf Number should not be a super type of Double" time="0.0000" classname="Number should not be a super type of Double">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf Double should be a super type of Number" time="0.0000" classname="Double should be a super type of Number">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf Int16 should be a super type of Integer" time="0.0000" classname="Int16 should be a super type of Integer">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf Int16 should be a super type of Number" time="0.0000" classname="Int16 should be a super type of Number">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf Int16 should not be a super type of Float" time="0.0000" classname="Int16 should not be a super type of Float">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf Int16 should be a super type of Int16" time="0.0000" classname="Int16 should be a super type of Int16">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf Duration should be a super type of Double" time="0.0000" classname="Duration should be a super type of Double">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf Double should *not* be a super type of Duration" time="0.0000" classname="Double should *not* be a super type of Duration">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf Integer should *not* be a super type of UInt32" time="0.0000" classname="Integer should *not* be a super type of UInt32">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf UInteger should *not* be a super type of Integer" time="0.0000" classname="UInteger should *not* be a super type of Integer">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf UInt32 should be a super type of UInteger" time="0.0000" classname="UInt32 should be a super type of UInteger">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf UInt32 should *not* be a super type of Integer" time="0.0000" classname="UInt32 should *not* be a super type of Integer">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf UInt32 should be a super type of UInteger" time="0.0000" classname="UInt32 should be a super type of UInteger">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf UInt64 should be a super type of UInteger" time="0.0000" classname="UInt64 should be a super type of UInteger">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf int64 should be a super type of Integer" time="0.0000" classname="int64 should be a super type of Integer">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf UInt64 should *not* be a super type of Integer" time="0.0000" classname="UInt64 should *not* be a super type of Integer">
    </testcase>
    <testcase name="testing UADataype -  Attribute UADataType#isSupertypeOf int64 should *not* be a super type of UInteger" time="0.0000" classname="int64 should *not* be a super type of UInteger">
    </testcase>
  </testsuite>
  <testsuite name="testing UADataype -  Attribute" timestamp="2021-02-09T06:55:20" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing UADataype -  Attribute DTX1 should extract Definition from DataType enumeration type 1" time="0.0000" classname="DTX1 should extract Definition from DataType enumeration type 1">
    </testcase>
    <testcase name="testing UADataype -  Attribute DTX2 should extract Definition from DataType enumeration type 2" time="0.0000" classname="DTX2 should extract Definition from DataType enumeration type 2">
    </testcase>
    <testcase name="testing UADataype -  Attribute DTX3 should extract Definition from DataType enumeration type 3" time="0.0000" classname="DTX3 should extract Definition from DataType enumeration type 3">
    </testcase>
    <testcase name="testing UADataype -  Attribute DTX4 should extract Definition from DataType structure" time="0.0010" classname="DTX4 should extract Definition from DataType structure">
    </testcase>
  </testsuite>
  <testsuite name="converting DataType to BSD schema files" timestamp="2021-02-09T06:55:20" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_dump_to_bsd.ts" time="0.0120" failures="0">
    <testcase name="converting DataType to BSD schema files BSD1- should convert a DataType to a schema file" time="0.0070" classname="BSD1- should convert a DataType to a schema file">
    </testcase>
    <testcase name="converting DataType to BSD schema files BSD2- structure 1" time="0.0010" classname="BSD2- structure 1">
    </testcase>
    <testcase name="converting DataType to BSD schema files BSD3 - Enumeration " time="0.0020" classname="BSD3 - Enumeration ">
    </testcase>
    <testcase name="converting DataType to BSD schema files BSD4- structure 2" time="0.0010" classname="BSD4- structure 2">
    </testcase>
    <testcase name="converting DataType to BSD schema files BSD5 - Opaque" time="0.0000" classname="BSD5 - Opaque">
    </testcase>
    <testcase name="converting DataType to BSD schema files BSD6 - WithOptionalValue" time="0.0010" classname="BSD6 - WithOptionalValue">
    </testcase>
  </testsuite>
  <testsuite name="Extension Object Array Node (or Complex Variable)" timestamp="2021-02-09T06:55:23" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0680" failures="0">
    <testcase name="Extension Object Array Node (or Complex Variable) should create a Variable that exposes an array of ExtensionObject of a specific type" time="0.0080" classname="should create a Variable that exposes an array of ExtensionObject of a specific type">
    </testcase>
    <testcase name="Extension Object Array Node (or Complex Variable) should be possible to add more than one element in the Extension Object variable node" time="0.0130" classname="should be possible to add more than one element in the Extension Object variable node">
    </testcase>
    <testcase name="Extension Object Array Node (or Complex Variable) should be possible to remove some element in the Extension Object variable node" time="0.0280" classname="should be possible to remove some element in the Extension Object variable node">
    </testcase>
    <testcase name="Extension Object Array Node (or Complex Variable) should be possible to add an element in  the Extension array that already exists " time="0.0120" classname="should be possible to add an element in  the Extension array that already exists ">
    </testcase>
    <testcase name="Extension Object Array Node (or Complex Variable) should be possible to add the same extension object into two array Variables" time="0.0070" classname="should be possible to add the same extension object into two array Variables">
    </testcase>
  </testsuite>
  <testsuite name="testing findReferenceEx" timestamp="2021-02-09T06:55:23" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1380" failures="0">
    <testcase name="testing findReferenceEx should findReferenceEx" time="0.1380" classname="should findReferenceEx">
    </testcase>
  </testsuite>
  <testsuite name="testing github issue https://github.com/node-opcua/node-opcua/issues/104" timestamp="2021-02-09T06:55:23" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="testing github issue https://github.com/node-opcua/node-opcua/issues/104 should not happen that node IDs are use twice" time="0.0020" classname="should not happen that node IDs are use twice">
    </testcase>
  </testsuite>
  <testsuite name="testing github issue https://github.com/node-opcua/node-opcua/issues/105" timestamp="2021-02-09T06:55:23" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="testing github issue https://github.com/node-opcua/node-opcua/issues/105 should be possible to create an object organized by a folder whose type is a subtype of FolderType" time="0.0020" classname="should be possible to create an object organized by a folder whose type is a subtype of FolderType">
    </testcase>
  </testsuite>
  <testsuite name="testing add new DataType " timestamp="2021-02-09T06:55:23" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0040" failures="0">
    <testcase name="testing add new DataType  should instantiate an object whose type defines an analog item" time="0.0040" classname="should instantiate an object whose type defines an analog item">
    </testcase>
  </testsuite>
  <testsuite name="issue #108" timestamp="2021-02-09T06:55:24" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.4810" failures="0">
    <testcase name="issue #108 should verify that UAObjectType.instantiate works for complex ObjectTypes like DI and ADI (reading from old 1.02 NodeSet)" time="0.4810" classname="should verify that UAObjectType.instantiate works for complex ObjectTypes like DI and ADI (reading from old 1.02 NodeSet)">
    </testcase>
  </testsuite>
  <testsuite name="Issue 162 : demonstrate how to modify an instantiate object variable" timestamp="2021-02-09T06:55:24" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="Issue 162 : demonstrate how to modify an instantiate object variable example from 162 - way 1 : using setValueFromSource" time="0.0020" classname="example from 162 - way 1 : using setValueFromSource">
    </testcase>
    <testcase name="Issue 162 : demonstrate how to modify an instantiate object variable example from 162 - way 2 : rebinding variable " time="0.0000" classname="example from 162 - way 2 : rebinding variable ">
    </testcase>
  </testsuite>
  <testsuite name="Issue 132" timestamp="2021-02-09T06:55:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0490" failures="0">
    <testcase name="Issue 132 #312 - should load a nodeset xml file containing MandatoryPlaceHolder f" time="0.0490" classname="#312 - should load a nodeset xml file containing MandatoryPlaceHolder f">
    </testcase>
  </testsuite>
  <testsuite name="testing loading ExtensionObject value from NodeSet XML file" timestamp="2021-02-09T06:55:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.3970" failures="0">
    <testcase name="testing loading ExtensionObject value from NodeSet XML file #314 should load a EUInformation value from nodeset xml file" time="0.3970" classname="#314 should load a EUInformation value from nodeset xml file">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug found in #337" timestamp="2021-02-09T06:55:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="Testing bug found in #337 should handle Matrix " time="0.0010" classname="should handle Matrix ">
    </testcase>
  </testsuite>
  <testsuite name="Testing automatic string nodeid assignment" timestamp="2021-02-09T06:55:25" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0140" failures="0">
    <testcase name="Testing automatic string nodeid assignment should automatically assign string nodeId in same namespace as parent object" time="0.0050" classname="should automatically assign string nodeId in same namespace as parent object">
    </testcase>
    <testcase name="Testing automatic string nodeid assignment should be possible to specify a custom separator for construction string nodeid during object instantiation" time="0.0090" classname="should be possible to specify a custom separator for construction string nodeid during object instantiation">
    </testcase>
  </testsuite>
  <testsuite name="AnalogDataItem ValuePrecision issue #410" timestamp="2021-02-09T06:55:26" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="AnalogDataItem ValuePrecision issue #410 ValuePrecision should have a DataType Double" time="0.0000" classname="ValuePrecision should have a DataType Double">
    </testcase>
    <testcase name="AnalogDataItem ValuePrecision issue #410 ValuePrecision should be writable " time="0.0000" classname="ValuePrecision should be writable ">
    </testcase>
  </testsuite>
  <testsuite name="#411 - AddMethod  should not changes namespace of custom datatype" timestamp="2021-02-09T06:55:26" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0040" failures="0">
    <testcase name="#411 - AddMethod  should not changes namespace of custom datatype should verify that addMethod doesn&apos;t mess up with dataType namespace" time="0.0040" classname="should verify that addMethod doesn&apos;t mess up with dataType namespace">
    </testcase>
  </testsuite>
  <testsuite name="testing github issue https://github.com/node-opcua/node-opcua/issues/432" timestamp="2021-02-09T06:55:27" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="testing github issue https://github.com/node-opcua/node-opcua/issues/432 should be possible to specify a custom nodeId when creating an object type" time="0.0000" classname="should be possible to specify a custom nodeId when creating an object type">
    </testcase>
  </testsuite>
  <testsuite name="UANode#removeReference" timestamp="2021-02-09T06:55:27" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0110" failures="0">
    <testcase name="UANode#removeReference should be possible to remove a reference " time="0.0110" classname="should be possible to remove a reference ">
    </testcase>
  </testsuite>
  <testsuite name="testing github issue https://github.com/node-opcua/node-opcua/issues/449" timestamp="2021-02-09T06:55:27" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="testing github issue https://github.com/node-opcua/node-opcua/issues/449 #449 should be possible to access this in UAVariable get/set value accessor" time="0.0020" classname="#449 should be possible to access this in UAVariable get/set value accessor">
    </testcase>
  </testsuite>
  <testsuite name="Testing display name in ObjectType and VariableType &amp; Method #469 #466" timestamp="2021-02-09T06:55:27" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0030" failures="0">
    <testcase name="Testing display name in ObjectType and VariableType &amp; Method #469 #466 should be possible to provide a DisplayName when declaring a VariableType - Form 1" time="0.0000" classname="should be possible to provide a DisplayName when declaring a VariableType - Form 1">
    </testcase>
    <testcase name="Testing display name in ObjectType and VariableType &amp; Method #469 #466 should be possible to provide a DisplayName when declaring a VariableType - Form 2" time="0.0010" classname="should be possible to provide a DisplayName when declaring a VariableType - Form 2">
    </testcase>
    <testcase name="Testing display name in ObjectType and VariableType &amp; Method #469 #466 should be possible to provide a DisplayName when declaring a VariableType - Form 3" time="0.0000" classname="should be possible to provide a DisplayName when declaring a VariableType - Form 3">
    </testcase>
    <testcase name="Testing display name in ObjectType and VariableType &amp; Method #469 #466 should be possible to provide a DisplayName when declaring a ObjectType - Form1" time="0.0000" classname="should be possible to provide a DisplayName when declaring a ObjectType - Form1">
    </testcase>
    <testcase name="Testing display name in ObjectType and VariableType &amp; Method #469 #466 should be possible to provide a DisplayName when declaring a ObjectType - Form2" time="0.0000" classname="should be possible to provide a DisplayName when declaring a ObjectType - Form2">
    </testcase>
    <testcase name="Testing display name in ObjectType and VariableType &amp; Method #469 #466 should be possible to provide a DisplayName when declaring a ObjectType - Form3" time="0.0000" classname="should be possible to provide a DisplayName when declaring a ObjectType - Form3">
    </testcase>
    <testcase name="Testing display name in ObjectType and VariableType &amp; Method #469 #466 should be possible to provide a DisplayName when declaring a Method - form 0" time="0.0010" classname="should be possible to provide a DisplayName when declaring a Method - form 0">
    </testcase>
    <testcase name="Testing display name in ObjectType and VariableType &amp; Method #469 #466 should be possible to provide a DisplayName when declaring a Method - form 1" time="0.0010" classname="should be possible to provide a DisplayName when declaring a Method - form 1">
    </testcase>
  </testsuite>
  <testsuite name="#625 automatic string nodeid assignment" timestamp="2021-02-09T06:55:27" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="#625 automatic string nodeid assignment should resolve nodeId provided in issue #625" time="0.0000" classname="should resolve nodeId provided in issue #625">
    </testcase>
    <testcase name="#625 automatic string nodeid assignment should resolve simple node id strings" time="0.0000" classname="should resolve simple node id strings">
    </testcase>
    <testcase name="#625 automatic string nodeid assignment should resolve more complex node id strings containing special characters like / or :" time="0.0000" classname="should resolve more complex node id strings containing special characters like / or :">
    </testcase>
    <testcase name="#625 automatic string nodeid assignment should resolve more complex node id strings containing special characters like ;" time="0.0000" classname="should resolve more complex node id strings containing special characters like ;">
    </testcase>
    <testcase name="#625 automatic string nodeid assignment should resolve a alias" time="0.0000" classname="should resolve a alias">
    </testcase>
  </testsuite>
  <testsuite name="#899 Variable with NodeId Value in nodeset2.xml" timestamp="2021-02-09T06:55:27" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="#899 Variable with NodeId Value in nodeset2.xml should load a UAVariable of type NodeId that provide a Value " time="0.0010" classname="should load a UAVariable of type NodeId that provide a Value ">
    </testcase>
    <testcase name="#899 Variable with NodeId Value in nodeset2.xml should load a UAVariable of type NodeId Array that provide a Value " time="0.0000" classname="should load a UAVariable of type NodeId Array that provide a Value ">
    </testcase>
  </testsuite>
  <testsuite name="#846 Various Variable Value in nodeset2.xml" timestamp="2021-02-09T06:55:28" tests="29" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0070" failures="0">
    <testcase name="#846 Various Variable Value in nodeset2.xml EnumTypeData1" time="0.0000" classname="EnumTypeData1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read an array of Boolean" time="0.0000" classname="should read an array of Boolean">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read a Boolean" time="0.0000" classname="should read a Boolean">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read a Byte" time="0.0010" classname="should read a Byte">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read an array of Byte" time="0.0000" classname="should read an array of Byte">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read ByteOptionSetArrayTypeData1" time="0.0010" classname="should read ByteOptionSetArrayTypeData1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read ByteOptionSetTypeData1" time="0.0000" classname="should read ByteOptionSetTypeData1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read an array of Float" time="0.0000" classname="should read an array of Float">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read a Float" time="0.0000" classname="should read a Float">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read an array of Int16" time="0.0000" classname="should read an array of Int16">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read a Int16" time="0.0010" classname="should read a Int16">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read an array of Int32" time="0.0000" classname="should read an array of Int32">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read a Int32" time="0.0000" classname="should read a Int32">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read a StructVarTypeData1" time="0.0010" classname="should read a StructVarTypeData1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read a StructNonVarTypeData1" time="0.0000" classname="should read a StructNonVarTypeData1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read a StructNonVarTypeData2" time="0.0000" classname="should read a StructNonVarTypeData2">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read an array of UInt16" time="0.0000" classname="should read an array of UInt16">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read a UInt16" time="0.0000" classname="should read a UInt16">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml Uint16OptionSetArrayTypeData1" time="0.0000" classname="Uint16OptionSetArrayTypeData1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml Uint16OptionSetTypeData1" time="0.0010" classname="Uint16OptionSetTypeData1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read an array of UInt32" time="0.0000" classname="should read an array of UInt32">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should read a UInt32" time="0.0000" classname="should read a UInt32">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml Uint32OptionSetArrayTypeData1" time="0.0000" classname="Uint32OptionSetArrayTypeData1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml Uint32OptionSetTypeData1" time="0.0010" classname="Uint32OptionSetTypeData1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should never be null EnumTypePropertyData1 #849-1" time="0.0000" classname="should never be null EnumTypePropertyData1 #849-1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should write a EnumTypePropertyData1 #849-2" time="0.0000" classname="should write a EnumTypePropertyData1 #849-2">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should write a EnumTypePropertyData1 #849-3" time="0.0000" classname="should write a EnumTypePropertyData1 #849-3">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should write a EnumTypePropertyData1 #849-4" time="0.0010" classname="should write a EnumTypePropertyData1 #849-4">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml should write a EnumTypePropertyData1 #849-5" time="0.0000" classname="should write a EnumTypePropertyData1 #849-5">
    </testcase>
  </testsuite>
  <testsuite name="to verify" timestamp="2021-02-09T06:55:28" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="#846 Various Variable Value in nodeset2.xml to verify NestedStructNonVarTypeData3" time="0.0000" classname="NestedStructNonVarTypeData3">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml to verify EnumArrayTypeData1" time="0.0010" classname="EnumArrayTypeData1">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml to verify should read a NestedStructNonVarTypeData3" time="0.0000" classname="should read a NestedStructNonVarTypeData3">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml to verify should read an array of StatusCode" time="0.0000" classname="should read an array of StatusCode">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml to verify should read a StatusCode" time="0.0000" classname="should read a StatusCode">
    </testcase>
    <testcase name="#846 Various Variable Value in nodeset2.xml to verify should read an array of StructNonVarArrayTypeData1" time="0.0010" classname="should read an array of StructNonVarArrayTypeData1">
    </testcase>
  </testsuite>
  <testsuite name="testing NodeSet XML file loading" timestamp="2021-02-09T06:55:28" tests="17" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="3.7890" failures="0">
    <testcase name="testing NodeSet XML file loading should load a nodeset xml file" time="0.0420" classname="should load a nodeset xml file">
    </testcase>
    <testcase name="testing NodeSet XML file loading should load a large nodeset xml file" time="0.4150" classname="should load a large nodeset xml file">
    </testcase>
    <testcase name="testing NodeSet XML file loading should load the DI nodeset " time="0.3760" classname="should load the DI nodeset ">
    </testcase>
    <testcase name="testing NodeSet XML file loading should read accessLevel and userAccessLevel attributes" time="0.3670" classname="should read accessLevel and userAccessLevel attributes">
    </testcase>
    <testcase name="testing NodeSet XML file loading should read predefined values for variables" time="0.3710" classname="should read predefined values for variables">
    </testcase>
    <testcase name="testing NodeSet XML file loading Q1 should read a VariableType with a default value" time="0.0340" classname="Q1 should read a VariableType with a default value">
    </testcase>
    <testcase name="testing NodeSet XML file loading #339 default ValueRank should be -1  for UAVariable and UAVariableType when loading nodeset2.xml files" time="0.3460" classname="#339 default ValueRank should be -1  for UAVariable and UAVariableType when loading nodeset2.xml files">
    </testcase>
    <testcase name="testing NodeSet XML file loading VV0 should provide appropriate error when nodeset file doesn&apos;t exist" time="0.0250" classname="VV0 should provide appropriate error when nodeset file doesn&apos;t exist">
    </testcase>
    <testcase name="testing NodeSet XML file loading VV1 should load a nodeset file with a Models section" time="0.0020" classname="VV1 should load a nodeset file with a Models section">
    </testcase>
    <testcase name="testing NodeSet XML file loading VV2 should load a nodeset file with hierarchy of Models" time="0.0030" classname="VV2 should load a nodeset file with hierarchy of Models">
    </testcase>
    <testcase name="testing NodeSet XML file loading VV3 should load a nodeset from UAModeler" time="0.4660" classname="VV3 should load a nodeset from UAModeler">
    </testcase>
    <testcase name="testing NodeSet XML file loading VV4 should parse a dataType made of bit sets" time="0.0050" classname="VV4 should parse a dataType made of bit sets">
    </testcase>
    <testcase name="testing NodeSet XML file loading VV5 read datatype " time="0.3950" classname="VV5 read datatype ">
    </testcase>
    <testcase name="testing NodeSet XML file loading VV6 Coordinates 3DFrame (which is from namespace 0)" time="0.0070" classname="VV6 Coordinates 3DFrame (which is from namespace 0)">
    </testcase>
    <testcase name="testing NodeSet XML file loading VV7 ----------" time="0.0080" classname="VV7 ----------">
    </testcase>
    <testcase name="testing NodeSet XML file loading VV8 ----------" time="0.5090" classname="VV8 ----------">
    </testcase>
    <testcase name="testing NodeSet XML file loading VV9 ----------" time="0.4180" classname="VV9 ----------">
    </testcase>
  </testsuite>
  <testsuite name="Testing variables loading " timestamp="2021-02-09T06:55:32" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="Testing variables loading  GG1 - should have a variable with pre-fetched values" time="0.0000" classname="GG1 - should have a variable with pre-fetched values">
    </testcase>
    <testcase name="Testing variables loading  should load ListOfString variables as an array of strings" time="0.0000" classname="should load ListOfString variables as an array of strings">
    </testcase>
  </testsuite>
  <testsuite name="@A@ Testing loading nodeset with custom basic types" timestamp="2021-02-09T06:55:32" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="@A@ Testing loading nodeset with custom basic types should compose new  basic type " time="0.0010" classname="should compose new  basic type ">
    </testcase>
  </testsuite>
  <testsuite name="Testing AutoID custom types" timestamp="2021-02-09T06:55:33" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_loadnodeset_autoid.ts" time="0.0080" failures="0">
    <testcase name="Testing AutoID custom types should construct a ScanSettings" time="0.0000" classname="should construct a ScanSettings">
    </testcase>
    <testcase name="Testing AutoID custom types should construct a ScanResult " time="0.0060" classname="should construct a ScanResult ">
    </testcase>
    <testcase name="Testing AutoID custom types should create a opcua variable with a scan result" time="0.0010" classname="should create a opcua variable with a scan result">
    </testcase>
    <testcase name="Testing AutoID custom types test RfidScanResult" time="0.0010" classname="test RfidScanResult">
    </testcase>
  </testsuite>
  <testsuite name="Testing PackML custom types" timestamp="2021-02-09T06:55:33" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_loadnodeset_packml.ts" time="0.0020" failures="0">
    <testcase name="Testing PackML custom types should create a PackMLAlarmDataType" time="0.0020" classname="should create a PackMLAlarmDataType">
    </testcase>
  </testsuite>
  <testsuite name="Testing makeOptionalsMap" timestamp="2021-02-09T06:55:34" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\test_make_optionals_map.ts" time="0.0010" failures="0">
    <testcase name="Testing makeOptionalsMap should create an optional map from a single string" time="0.0000" classname="should create an optional map from a single string">
    </testcase>
    <testcase name="Testing makeOptionalsMap should create an optional map from a single string" time="0.0010" classname="should create an optional map from a single string">
    </testcase>
  </testsuite>
  <testsuite name="testing Method -  Attribute UserExecutable &amp; Executable on Method " timestamp="2021-02-09T06:55:34" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0040" failures="0">
    <testcase name="testing Method -  Attribute UserExecutable &amp; Executable on Method  should return Executable= false and UserExecutable=false if method is not bound " time="0.0020" classname="should return Executable= false and UserExecutable=false if method is not bound ">
    </testcase>
    <testcase name="testing Method -  Attribute UserExecutable &amp; Executable on Method  should return Executable= true and UserExecutable=true if method is  bound " time="0.0010" classname="should return Executable= true and UserExecutable=true if method is  bound ">
    </testcase>
    <testcase name="testing Method -  Attribute UserExecutable &amp; Executable on Method  should be possible to pass displayName when adding a method" time="0.0010" classname="should be possible to pass displayName when adding a method">
    </testcase>
  </testsuite>
  <testsuite name="testing Method in address space" timestamp="2021-02-09T06:55:34" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing Method in address space should provide a way to find a Method object by nodeId" time="0.0000" classname="should provide a way to find a Method object by nodeId">
    </testcase>
    <testcase name="testing Method in address space should provide a way to find a Method object by nodeId" time="0.0000" classname="should provide a way to find a Method object by nodeId">
    </testcase>
    <testcase name="testing Method in address space should provide a input Parameter variable" time="0.0000" classname="should provide a input Parameter variable">
    </testcase>
    <testcase name="testing Method in address space should provide a output Parameter variable" time="0.0010" classname="should provide a output Parameter variable">
    </testcase>
  </testsuite>
  <testsuite name="testing Method binding" timestamp="2021-02-09T06:55:34" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing Method binding should bind a method  " time="0.0010" classname="should bind a method  ">
    </testcase>
  </testsuite>
  <testsuite name="CallRequest on custom method" timestamp="2021-02-09T06:55:34" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0030" failures="0">
    <testcase name="CallRequest on custom method Q3 should encode and decode a method call request" time="0.0030" classname="Q3 should encode and decode a method call request">
    </testcase>
  </testsuite>
  <testsuite name="AddressSpace Namespace" timestamp="2021-02-09T06:55:34" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="AddressSpace Namespace should create a namespace" time="0.0010" classname="should create a namespace">
    </testcase>
    <testcase name="AddressSpace Namespace should create several namespaces" time="0.0000" classname="should create several namespaces">
    </testcase>
    <testcase name="AddressSpace Namespace should create a object in the namespace" time="0.0000" classname="should create a object in the namespace">
    </testcase>
  </testsuite>
  <testsuite name="NodeIdManager" timestamp="2021-02-09T06:55:34" tests="10" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0050" failures="0">
    <testcase name="NodeIdManager should register a new node id" time="0.0000" classname="should register a new node id">
    </testcase>
    <testcase name="NodeIdManager should register a new node id" time="0.0000" classname="should register a new node id">
    </testcase>
    <testcase name="NodeIdManager should constructNodeId with s=STRING form" time="0.0000" classname="should constructNodeId with s=STRING form">
    </testcase>
    <testcase name="NodeIdManager should constructNodeId with ns=1;s=MyBoiler form" time="0.0010" classname="should constructNodeId with ns=1;s=MyBoiler form">
    </testcase>
    <testcase name="NodeIdManager should constructNodeId with i=123 form" time="0.0000" classname="should constructNodeId with i=123 form">
    </testcase>
    <testcase name="NodeIdManager should constructNodeId with CoercibleString form" time="0.0010" classname="should constructNodeId with CoercibleString form">
    </testcase>
    <testcase name="NodeIdManager should constructNodeId with SomeName form" time="0.0000" classname="should constructNodeId with SomeName form">
    </testcase>
    <testcase name="NodeIdManager should constructNodeId with SomeName_SomeProp form" time="0.0010" classname="should constructNodeId with SomeName_SomeProp form">
    </testcase>
    <testcase name="NodeIdManager should maintain a list of Symbol and recycle the one that exists already" time="0.0010" classname="should maintain a list of Symbol and recycle the one that exists already">
    </testcase>
    <testcase name="NodeIdManager should maintain a list of Symbol and recycle the one that exists already" time="0.0010" classname="should maintain a list of Symbol and recycle the one that exists already">
    </testcase>
  </testsuite>
  <testsuite name="testing nodeset to xml" timestamp="2021-02-09T06:55:34" tests="10" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0240" failures="0">
    <testcase name="testing nodeset to xml should output a standard extension object datatype to xml (Argument)" time="0.0010" classname="should output a standard extension object datatype to xml (Argument)">
    </testcase>
    <testcase name="testing nodeset to xml should output a standard Enum node to xml (ServerState)" time="0.0040" classname="should output a standard Enum node to xml (ServerState)">
    </testcase>
    <testcase name="testing nodeset to xml €€€ should output a custom Enum node to xml (MyEnumType) - Form1( with EnumStrings )" time="0.0010" classname="€€€ should output a custom Enum node to xml (MyEnumType) - Form1( with EnumStrings )">
    </testcase>
    <testcase name="testing nodeset to xml €€ should output a custom Enum node to xml (MyEnumType) - Form2 ( with EnumValues )" time="0.0040" classname="€€ should output a custom Enum node to xml (MyEnumType) - Form2 ( with EnumValues )">
    </testcase>
    <testcase name="testing nodeset to xml should output a simple objectType node to xml" time="0.0010" classname="should output a simple objectType node to xml">
    </testcase>
    <testcase name="testing nodeset to xml should output a instance of a new ObjectType  to xml" time="0.0040" classname="should output a instance of a new ObjectType  to xml">
    </testcase>
    <testcase name="testing nodeset to xml KLKL should output a instance of object with method  to xml" time="0.0040" classname="KLKL should output a instance of object with method  to xml">
    </testcase>
    <testcase name="testing nodeset to xml should output an instance of variable type to xml" time="0.0010" classname="should output an instance of variable type to xml">
    </testcase>
    <testcase name="testing nodeset to xml should output a ReferenceType to xml" time="0.0010" classname="should output a ReferenceType to xml">
    </testcase>
    <testcase name="testing nodeset to xml should output a Method to xml" time="0.0030" classname="should output a Method to xml">
    </testcase>
  </testsuite>
  <testsuite name="Namespace to NodeSet2.xml" timestamp="2021-02-09T06:55:34" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0040" failures="0">
    <testcase name="Namespace to NodeSet2.xml should produce a XML file from a namespace - a new Reference" time="0.0020" classname="should produce a XML file from a namespace - a new Reference">
    </testcase>
    <testcase name="Namespace to NodeSet2.xml should produce a XML file from a namespace - a new UAObjectType" time="0.0010" classname="should produce a XML file from a namespace - a new UAObjectType">
    </testcase>
    <testcase name="Namespace to NodeSet2.xml should produce a XML file from a namespace - with 2 UAObjectType" time="0.0010" classname="should produce a XML file from a namespace - with 2 UAObjectType">
    </testcase>
    <testcase name="Namespace to NodeSet2.xml should emit AccessLevel attribute when needed (UAVariable)" time="0.0000" classname="should emit AccessLevel attribute when needed (UAVariable)">
    </testcase>
  </testsuite>
  <testsuite name="nodeset2.xml with more than one referenced namespace" timestamp="2021-02-09T06:55:34" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="3.6070" failures="0">
    <testcase name="nodeset2.xml with more than one referenced namespace should produce a XML file - with DI included - 1 Rich ObjectType - and reload it" time="0.5620" classname="should produce a XML file - with DI included - 1 Rich ObjectType - and reload it">
    </testcase>
    <testcase name="nodeset2.xml with more than one referenced namespace NSXML1 should output an XML file - with Variant GUID" time="0.3990" classname="NSXML1 should output an XML file - with Variant GUID">
    </testcase>
    <testcase name="nodeset2.xml with more than one referenced namespace NSXML2 should output an XML file - with Variant LocalizedText" time="0.3890" classname="NSXML2 should output an XML file - with Variant LocalizedText">
    </testcase>
    <testcase name="nodeset2.xml with more than one referenced namespace NSXML3 should output an XML file - with Variant XmlElement" time="0.3910" classname="NSXML3 should output an XML file - with Variant XmlElement">
    </testcase>
    <testcase name="nodeset2.xml with more than one referenced namespace NSXML4 should output an XML file - with Variant QualifiedName" time="0.3940" classname="NSXML4 should output an XML file - with Variant QualifiedName">
    </testcase>
    <testcase name="nodeset2.xml with more than one referenced namespace NSXML5 should output an XML file - with Variant Matrix UAVariable" time="0.4480" classname="NSXML5 should output an XML file - with Variant Matrix UAVariable">
    </testcase>
    <testcase name="nodeset2.xml with more than one referenced namespace NSXML6 should output an XML file - with Variant Matrix UAVariableType" time="0.3870" classname="NSXML6 should output an XML file - with Variant Matrix UAVariableType">
    </testcase>
    <testcase name="nodeset2.xml with more than one referenced namespace NSXML7 - empty buffer #861 " time="0.6370" classname="NSXML7 - empty buffer #861 ">
    </testcase>
  </testsuite>
  <testsuite name="testing UAObjectType" timestamp="2021-02-09T06:55:42" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0030" failures="0">
    <testcase name="testing UAObjectType should read Attribute IsAbstract on UAObjectType " time="0.0010" classname="should read Attribute IsAbstract on UAObjectType ">
    </testcase>
    <testcase name="testing UAObjectType should read Attribute IsAbstract on Abstract UAObjectType " time="0.0000" classname="should read Attribute IsAbstract on Abstract UAObjectType ">
    </testcase>
    <testcase name="testing UAObjectType UAObjectType#instantiate should be possible to instantiate a ObjectType (nodeId not specified)" time="0.0010" classname="UAObjectType#instantiate should be possible to instantiate a ObjectType (nodeId not specified)">
    </testcase>
    <testcase name="testing UAObjectType UAObjectType#instantiate should be possible to instantiate a ObjectType and specify its nodeId)" time="0.0000" classname="UAObjectType#instantiate should be possible to instantiate a ObjectType and specify its nodeId)">
    </testcase>
    <testcase name="testing UAObjectType UAObjectType#toString()" time="0.0010" classname="UAObjectType#toString()">
    </testcase>
  </testsuite>
  <testsuite name="PseudoSession" timestamp="2021-02-09T06:55:42" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="PseudoSession should browse a single node " time="0.0010" classname="should browse a single node ">
    </testcase>
    <testcase name="PseudoSession should browse multiple nodes " time="0.0000" classname="should browse multiple nodes ">
    </testcase>
    <testcase name="PseudoSession should read a single node" time="0.0010" classname="should read a single node">
    </testcase>
    <testcase name="PseudoSession should read multiple nodes" time="0.0000" classname="should read multiple nodes">
    </testcase>
  </testsuite>
  <testsuite name="testing ReferenceType" timestamp="2021-02-09T06:55:42" tests="22" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.5960" failures="0">
    <testcase name="testing ReferenceType should find &apos;HierarchicalReferences&apos;" time="0.0000" classname="should find &apos;HierarchicalReferences&apos;">
    </testcase>
    <testcase name="testing ReferenceType HierarchicalReferences should have an Abstract attribute set to true " time="0.0010" classname="HierarchicalReferences should have an Abstract attribute set to true ">
    </testcase>
    <testcase name="testing ReferenceType Organizes should have an Abstract attribute set to true " time="0.0000" classname="Organizes should have an Abstract attribute set to true ">
    </testcase>
    <testcase name="testing ReferenceType should find &apos;Organizes&apos;" time="0.0000" classname="should find &apos;Organizes&apos;">
    </testcase>
    <testcase name="testing ReferenceType &apos;Organizes&apos; should be a super type of &apos;HierarchicalReferences&apos;" time="0.0000" classname="&apos;Organizes&apos; should be a super type of &apos;HierarchicalReferences&apos;">
    </testcase>
    <testcase name="testing ReferenceType &apos;HasTypeDefinition&apos; should *not* be a super-type of &apos;HierarchicalReferences&apos;" time="0.0000" classname="&apos;HasTypeDefinition&apos; should *not* be a super-type of &apos;HierarchicalReferences&apos;">
    </testcase>
    <testcase name="testing ReferenceType &apos;HasTypeDefinition&apos; should  be a super-type of &apos;NonHierarchicalReferences&apos;" time="0.0000" classname="&apos;HasTypeDefinition&apos; should  be a super-type of &apos;NonHierarchicalReferences&apos;">
    </testcase>
    <testcase name="testing ReferenceType should return 4 refs for browseNode on RootFolder ,  referenceTypeId=null,!includeSubtypes  " time="0.0000" classname="should return 4 refs for browseNode on RootFolder ,  referenceTypeId=null,!includeSubtypes  ">
    </testcase>
    <testcase name="testing ReferenceType should return 1 refs for browseNode on RootFolder ,  NonHierarchicalReferences, includeSubtypes  " time="0.0000" classname="should return 1 refs for browseNode on RootFolder ,  NonHierarchicalReferences, includeSubtypes  ">
    </testcase>
    <testcase name="testing ReferenceType should return 3 refs for browseNode on RootFolder , Organizes ,!includeSubtypes  " time="0.0010" classname="should return 3 refs for browseNode on RootFolder , Organizes ,!includeSubtypes  ">
    </testcase>
    <testcase name="testing ReferenceType should return 0 refs for browseNode on RootFolder , HierarchicalReferences ,!includeSubtypes  " time="0.0000" classname="should return 0 refs for browseNode on RootFolder , HierarchicalReferences ,!includeSubtypes  ">
    </testcase>
    <testcase name="testing ReferenceType should return 3 refs for browseNode on RootFolder , HierarchicalReferences , includeSubtypes  " time="0.0000" classname="should return 3 refs for browseNode on RootFolder , HierarchicalReferences , includeSubtypes  ">
    </testcase>
    <testcase name="testing ReferenceType should return 6 refs for browseNode on ServerStatus (BrowseDirection.Forward)" time="0.0010" classname="should return 6 refs for browseNode on ServerStatus (BrowseDirection.Forward)">
    </testcase>
    <testcase name="testing ReferenceType ServerStatus parent shall be Server" time="0.0000" classname="ServerStatus parent shall be Server">
    </testcase>
    <testcase name="testing ReferenceType should return 1 refs for browseNode on ServerStatus (BrowseDirection.Reverse)" time="0.0040" classname="should return 1 refs for browseNode on ServerStatus (BrowseDirection.Reverse)">
    </testcase>
    <testcase name="testing ReferenceType should return 7 refs for browseNode on ServerStatus (BrowseDirection.Both)" time="0.0020" classname="should return 7 refs for browseNode on ServerStatus (BrowseDirection.Both)">
    </testcase>
    <testcase name="testing ReferenceType should return 1 refs for browseNode on ServerStatus (BrowseDirection.Reverse)" time="0.0010" classname="should return 1 refs for browseNode on ServerStatus (BrowseDirection.Reverse)">
    </testcase>
    <testcase name="testing ReferenceType should return 1 refs for browseNode on Server (BrowseDirection.Forward) and NodeClass set to Method" time="0.0000" classname="should return 1 refs for browseNode on Server (BrowseDirection.Forward) and NodeClass set to Method">
    </testcase>
    <testcase name="testing ReferenceType ReferenceType should have a toString (HierarchicalReferences)" time="0.0010" classname="ReferenceType should have a toString (HierarchicalReferences)">
    </testcase>
    <testcase name="testing ReferenceType ReferenceType should have a toString (Organizes)" time="0.0000" classname="ReferenceType should have a toString (Organizes)">
    </testcase>
    <testcase name="testing ReferenceType ReferenceType#getAllSubtypes should extract all possible referenceType " time="0.0000" classname="ReferenceType#getAllSubtypes should extract all possible referenceType ">
    </testcase>
    <testcase name="testing ReferenceType BaseNode#findReferencesEx should be fast " time="0.5850" classname="BaseNode#findReferencesEx should be fast ">
    </testcase>
  </testsuite>
  <testsuite name=" improving performance of isSupertypeOf" timestamp="2021-02-09T06:55:42" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.9440" failures="0">
    <testcase name=" improving performance of isSupertypeOf should ensure that optimized version of isSupertypeOf produce same result as brute force version" time="0.0070" classname="should ensure that optimized version of isSupertypeOf produce same result as brute force version">
    </testcase>
    <testcase name=" improving performance of isSupertypeOf should ensure that optimized version of isSupertypeOf is really faster that brute force version" time="0.9350" classname="should ensure that optimized version of isSupertypeOf is really faster that brute force version">
    </testcase>
    <testcase name=" improving performance of isSupertypeOf ZZ should ensure that fast version isSupertypeOf shall update its cache when new References are added " time="0.0020" classname="ZZ should ensure that fast version isSupertypeOf shall update its cache when new References are added ">
    </testcase>
  </testsuite>
  <testsuite name="SessionContext" timestamp="2021-02-09T06:55:43" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="SessionContext should provide a default session context - getCurrentUserRole" time="0.0000" classname="should provide a default session context - getCurrentUserRole">
    </testcase>
    <testcase name="SessionContext should provide a  default session context - checkPermission" time="0.0000" classname="should provide a  default session context - checkPermission">
    </testcase>
  </testsuite>
  <testsuite name="SessionContext - with  dedicated SessionContext and certificate " timestamp="2021-02-09T06:55:43" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0050" failures="0">
    <testcase name="SessionContext - with  dedicated SessionContext and certificate  should provide a default session context - getCurrentUserRole" time="0.0050" classname="should provide a default session context - getCurrentUserRole">
    </testcase>
    <testcase name="SessionContext - with  dedicated SessionContext and certificate  should provide a  default session context - checkPermission" time="0.0000" classname="should provide a  default session context - checkPermission">
    </testcase>
  </testsuite>
  <testsuite name="Variable#setPermissions &amp; checkPermission" timestamp="2021-02-09T06:55:43" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="Variable#setPermissions &amp; checkPermission checkPermission-1 should obey default flags when variable has no specific permission" time="0.0010" classname="checkPermission-1 should obey default flags when variable has no specific permission">
    </testcase>
    <testcase name="Variable#setPermissions &amp; checkPermission checkPermission-2 should obey default flags when variable has no specific permission" time="0.0010" classname="checkPermission-2 should obey default flags when variable has no specific permission">
    </testcase>
  </testsuite>
  <testsuite name="testing Variables " timestamp="2021-02-09T06:55:43" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="testing Variables  ZZ1- a variable should return attributes with  the expected data type " time="0.0020" classname="ZZ1- a variable should return attributes with  the expected data type ">
    </testcase>
  </testsuite>
  <testsuite name="Address Space : add Variable :  testing various variations for specifying dataType" timestamp="2021-02-09T06:55:43" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0040" failures="0">
    <testcase name="Address Space : add Variable :  testing various variations for specifying dataType AddressSpace#addVariable should accept a dataType as String" time="0.0010" classname="AddressSpace#addVariable should accept a dataType as String">
    </testcase>
    <testcase name="Address Space : add Variable :  testing various variations for specifying dataType AddressSpace#addVariable should accept a dataType as DataTypeId value" time="0.0000" classname="AddressSpace#addVariable should accept a dataType as DataTypeId value">
    </testcase>
    <testcase name="Address Space : add Variable :  testing various variations for specifying dataType AddressSpace#addVariable should accept a dataType as a NodeId object" time="0.0010" classname="AddressSpace#addVariable should accept a dataType as a NodeId object">
    </testcase>
    <testcase name="Address Space : add Variable :  testing various variations for specifying dataType AddressSpace#addVariable should accept a dataType as a NodeId string" time="0.0000" classname="AddressSpace#addVariable should accept a dataType as a NodeId string">
    </testcase>
    <testcase name="Address Space : add Variable :  testing various variations for specifying dataType AddressSpace#addVariable({propertyOf:..}) should accept a typeDefinition as a String" time="0.0000" classname="AddressSpace#addVariable({propertyOf:..}) should accept a typeDefinition as a String">
    </testcase>
    <testcase name="Address Space : add Variable :  testing various variations for specifying dataType AddressSpace#addVariable should accept a typeDefinition as a VariableTypeId value" time="0.0000" classname="AddressSpace#addVariable should accept a typeDefinition as a VariableTypeId value">
    </testcase>
    <testcase name="Address Space : add Variable :  testing various variations for specifying dataType AddressSpace#addVariable should accept a typeDefinition as a NodeId object" time="0.0010" classname="AddressSpace#addVariable should accept a typeDefinition as a NodeId object">
    </testcase>
    <testcase name="Address Space : add Variable :  testing various variations for specifying dataType AddressSpace#addVariable should accept a typeDefinition as a NodeId string" time="0.0000" classname="AddressSpace#addVariable should accept a typeDefinition as a NodeId string">
    </testcase>
    <testcase name="Address Space : add Variable :  testing various variations for specifying dataType AddressSpace#addVariable should throw if typeDefinition is invalid" time="0.0010" classname="AddressSpace#addVariable should throw if typeDefinition is invalid">
    </testcase>
  </testsuite>
  <testsuite name="testing Variable#bindVariable" timestamp="2021-02-09T06:55:43" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.3670" failures="0">
    <testcase name="testing Variable#bindVariable T1 - testing Variable#bindVariable -&gt; Getter - should create a static read only variable (static value defined at construction time)" time="0.0010" classname="T1 - testing Variable#bindVariable -&gt; Getter - should create a static read only variable (static value defined at construction time)">
    </testcase>
    <testcase name="testing Variable#bindVariable T2 - testing Variable#bindVariable -&gt; Getter - should create a variable with synchronous get, dataValue shall change only if &apos;get&apos; returns a different value" time="0.0010" classname="T2 - testing Variable#bindVariable -&gt; Getter - should create a variable with synchronous get, dataValue shall change only if &apos;get&apos; returns a different value">
    </testcase>
    <testcase name="testing Variable#bindVariable T3 - testing Variable#bindVariable -&gt; Getter - should create a variable with synchronous get and set functor" time="0.0000" classname="T3 - testing Variable#bindVariable -&gt; Getter - should create a variable with synchronous get and set functor">
    </testcase>
    <testcase name="testing Variable#bindVariable T4 - testing Variable#bindVariable -&gt; Getter - should create a read only variable with a timestamped_get" time="0.0000" classname="T4 - testing Variable#bindVariable -&gt; Getter - should create a read only variable with a timestamped_get">
    </testcase>
    <testcase name="testing Variable#bindVariable T5 - testing Variable#bindVariable -&gt; Getter - should create a read only variable with a refreshFunc" time="0.0190" classname="T5 - testing Variable#bindVariable -&gt; Getter - should create a read only variable with a refreshFunc">
    </testcase>
    <testcase name="testing Variable#bindVariable Q1 - testing Variable#bindVariable -&gt; Setter - should create a variable with a sync  setter" time="0.0010" classname="Q1 - testing Variable#bindVariable -&gt; Setter - should create a variable with a sync  setter">
    </testcase>
    <testcase name="testing Variable#bindVariable Q2 - testing Variable#bindVariable -&gt; Setter - should create a variable with a async setter" time="0.0140" classname="Q2 - testing Variable#bindVariable -&gt; Setter - should create a variable with a async setter">
    </testcase>
    <testcase name="testing Variable#bindVariable Q3 - testing Variable#bindVariable -&gt; Setter - should create a variable with a sync timestamped setter" time="0.0010" classname="Q3 - testing Variable#bindVariable -&gt; Setter - should create a variable with a sync timestamped setter">
    </testcase>
    <testcase name="testing Variable#bindVariable Q4 - testing Variable#bindVariable -&gt; Setter - issue#332 should create a variable with async setter and an async getter" time="0.3300" classname="Q4 - testing Variable#bindVariable -&gt; Setter - issue#332 should create a variable with async setter and an async getter">
    </testcase>
  </testsuite>
  <testsuite name="testing Variable#writeValue Scalar" timestamp="2021-02-09T06:55:44" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing Variable#writeValue Scalar should write a double in a Duration " time="0.0010" classname="should write a double in a Duration ">
    </testcase>
  </testsuite>
  <testsuite name="testing Variable#writeValue Array" timestamp="2021-02-09T06:55:44" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0130" failures="0">
    <testcase name="testing Variable#writeValue Array A1 should write an array " time="0.0010" classname="A1 should write an array ">
    </testcase>
    <testcase name="testing Variable#writeValue Array A2 should write an portion of an array " time="0.0030" classname="A2 should write an portion of an array ">
    </testcase>
    <testcase name="testing Variable#writeValue Array A3 should write statusCode= GoodClamped and retrieve statusCode GoodClamped" time="0.0010" classname="A3 should write statusCode= GoodClamped and retrieve statusCode GoodClamped">
    </testcase>
    <testcase name="testing Variable#writeValue Array A4 should write statusCode= GoodClamped and retrieve statusCode GoodClamped with index range" time="0.0020" classname="A4 should write statusCode= GoodClamped and retrieve statusCode GoodClamped with index range">
    </testcase>
    <testcase name="testing Variable#writeValue Array A5 should write sourceTimestamp and retrieve sourceTimestamp" time="0.0010" classname="A5 should write sourceTimestamp and retrieve sourceTimestamp">
    </testcase>
    <testcase name="testing Variable#writeValue Array A6 - should write a ByteString into a Array of Byte" time="0.0050" classname="A6 - should write a ByteString into a Array of Byte">
    </testcase>
  </testsuite>
  <testsuite name="testing Variable#writeValue on Integer" timestamp="2021-02-09T06:55:44" tests="13" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0070" failures="0">
    <testcase name="testing Variable#writeValue on Integer DZ1 should not be possible to write a Byte Value into a none integer Variable" time="0.0010" classname="DZ1 should not be possible to write a Byte Value into a none integer Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZ2 should not be possible to write a UInt16 Value into a none integer Variable" time="0.0010" classname="DZ2 should not be possible to write a UInt16 Value into a none integer Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZ3 should not be possible to write a UInt32 Value into a none integer Variable" time="0.0010" classname="DZ3 should not be possible to write a UInt32 Value into a none integer Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZ2 should not be possible to write a UInt16 Value into a none Integer Variable" time="0.0010" classname="DZ2 should not be possible to write a UInt16 Value into a none Integer Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZ3 should not be possible to write a UInt64 Value into a none integer Variable" time="0.0000" classname="DZ3 should not be possible to write a UInt64 Value into a none integer Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZ4 should not be possible to write a Byte Value into a none Integer Variable" time="0.0010" classname="DZ4 should not be possible to write a Byte Value into a none Integer Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZ5 should not be possible to write a Byte Value into a Int32 Variable" time="0.0010" classname="DZ5 should not be possible to write a Byte Value into a Int32 Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZ6 should not be possible to write a UInt16 Value into a Int32 Variable" time="0.0010" classname="DZ6 should not be possible to write a UInt16 Value into a Int32 Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZ7 should not be possible to write a UInt32 Value into a Int32 Variable" time="0.0000" classname="DZ7 should not be possible to write a UInt32 Value into a Int32 Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZ8 should not be possible to write a SByte Value into a Int32 Variable" time="0.0000" classname="DZ8 should not be possible to write a SByte Value into a Int32 Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZ9 should not be possible to write a Int16 Value into a Int32 Variable" time="0.0000" classname="DZ9 should not be possible to write a Int16 Value into a Int32 Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZA should not be possible to write a UInt32 Value into a Int32 Variable" time="0.0000" classname="DZA should not be possible to write a UInt32 Value into a Int32 Variable">
    </testcase>
    <testcase name="testing Variable#writeValue on Integer DZB should  possible to write a Int32 Value into a Int32 Variable" time="0.0000" classname="DZB should  possible to write a Int32 Value into a Int32 Variable">
    </testcase>
  </testsuite>
  <testsuite name="testing UAVariable " timestamp="2021-02-09T06:55:44" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2650" failures="0">
    <testcase name="testing UAVariable  UAVariable#clone should clone a variable" time="0.0030" classname="UAVariable#clone should clone a variable">
    </testcase>
    <testcase name="testing UAVariable  UAVariable#readValue should return an error if value is not readable" time="0.0020" classname="UAVariable#readValue should return an error if value is not readable">
    </testcase>
    <testcase name="testing UAVariable  UAVariable#readValueAsync should return an error if value is not readable" time="0.0010" classname="UAVariable#readValueAsync should return an error if value is not readable">
    </testcase>
    <testcase name="testing UAVariable  UAVariable#readValueAsync should cope with faulty refreshFunc -- calling callback with an error" time="0.1160" classname="UAVariable#readValueAsync should cope with faulty refreshFunc -- calling callback with an error">
    </testcase>
    <testcase name="testing UAVariable  UAVariable#readValueAsync should cope with faulty refreshFunc - crashing inside refreshFunc" time="0.0010" classname="UAVariable#readValueAsync should cope with faulty refreshFunc - crashing inside refreshFunc">
    </testcase>
    <testcase name="testing UAVariable  UAVariable#readValueAsync  should be re-entrant" time="0.1100" classname="UAVariable#readValueAsync  should be re-entrant">
    </testcase>
    <testcase name="testing UAVariable  UAVariable#writeAttribute " time="0.0000" classname="UAVariable#writeAttribute ">
    </testcase>
    <testcase name="testing UAVariable  UAVariable#setValueFromSource should cause &apos;value_changed&apos; event to be raised" time="0.0310" classname="UAVariable#setValueFromSource should cause &apos;value_changed&apos; event to be raised">
    </testcase>
    <testcase name="testing UAVariable  %%% should create a UAVariable with default value and be writable" time="0.0010" classname="%%% should create a UAVariable with default value and be writable">
    </testcase>
  </testsuite>
  <testsuite name="testing UAVariableType" timestamp="2021-02-09T06:55:45" tests="10" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0070" failures="0">
    <testcase name="testing UAVariableType should read Attribute IsAbstract on UAVariableType " time="0.0000" classname="should read Attribute IsAbstract on UAVariableType ">
    </testcase>
    <testcase name="testing UAVariableType should read Attribute IsAbstract on Abstract UAVariableType " time="0.0010" classname="should read Attribute IsAbstract on Abstract UAVariableType ">
    </testcase>
    <testcase name="testing UAVariableType UAVariableType#instantiate should be possible to instantiate a VariableType (nodeId not specified)" time="0.0010" classname="UAVariableType#instantiate should be possible to instantiate a VariableType (nodeId not specified)">
    </testcase>
    <testcase name="testing UAVariableType UAVariableType#instantiate should be possible to instantiate a VariableType and specify its nodeId)" time="0.0010" classname="UAVariableType#instantiate should be possible to instantiate a VariableType and specify its nodeId)">
    </testcase>
    <testcase name="testing UAVariableType UAVariableType#instantiate with componentOf" time="0.0010" classname="UAVariableType#instantiate with componentOf">
    </testcase>
    <testcase name="testing UAVariableType UAVariableType#instantiate with organizedBy" time="0.0000" classname="UAVariableType#instantiate with organizedBy">
    </testcase>
    <testcase name="testing UAVariableType UAVariableType#instantiate with valueRank and arrayDimension" time="0.0010" classname="UAVariableType#instantiate with valueRank and arrayDimension">
    </testcase>
    <testcase name="testing UAVariableType should provide a mechanism to customize newly created instance" time="0.0010" classname="should provide a mechanism to customize newly created instance">
    </testcase>
    <testcase name="testing UAVariableType UAVariableType#toString()" time="0.0010" classname="UAVariableType#toString()">
    </testcase>
    <testcase name="testing UAVariableType UADataType#toString()" time="0.0000" classname="UADataType#toString()">
    </testcase>
  </testsuite>
  <testsuite name="AddressSpace : Variable.setPermissions" timestamp="2021-02-09T06:55:45" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="AddressSpace : Variable.setPermissions should adjust userAccessLevel based on session Context permission" time="0.0000" classname="should adjust userAccessLevel based on session Context permission">
    </testcase>
    <testcase name="AddressSpace : Variable.setPermissions should adjust userAccessLevel based on session Context permission" time="0.0010" classname="should adjust userAccessLevel based on session Context permission">
    </testcase>
    <testcase name="AddressSpace : Variable.setPermissions should adjust userAccessLevel based on session Context permission" time="0.0000" classname="should adjust userAccessLevel based on session Context permission">
    </testcase>
  </testsuite>
  <testsuite name="Aggregates " timestamp="2021-02-09T06:55:45" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0060" failures="0">
    <testcase name="Aggregates  should augment the addressSpace with aggregate function support" time="0.0060" classname="should augment the addressSpace with aggregate function support">
    </testcase>
  </testsuite>
  <testsuite name="Aggregates - Function " timestamp="2021-02-09T06:55:45" tests="12" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0130" failures="0">
    <testcase name="Aggregates - Function  Aggregate Interpolate with History1 use case" time="0.0060" classname="Aggregate Interpolate with History1 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Interpolate with History2 use case" time="0.0010" classname="Aggregate Interpolate with History2 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Interpolate with History3 use case" time="0.0010" classname="Aggregate Interpolate with History3 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Min with History1 use case" time="0.0000" classname="Aggregate Min with History1 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Min with History2 use case" time="0.0010" classname="Aggregate Min with History2 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Min with History3 use case" time="0.0000" classname="Aggregate Min with History3 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Max with History1 use case" time="0.0000" classname="Aggregate Max with History1 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Max with History2 use case" time="0.0010" classname="Aggregate Max with History2 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Max with History3 use case" time="0.0000" classname="Aggregate Max with History3 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Average with History1 use case" time="0.0010" classname="Aggregate Average with History1 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Average with History2 use case" time="0.0010" classname="Aggregate Average with History2 use case">
    </testcase>
    <testcase name="Aggregates - Function  Aggregate Average with History3 use case" time="0.0010" classname="Aggregate Average with History3 use case">
    </testcase>
  </testsuite>
  <testsuite name="Aggregates Intervals &amp; Regions" timestamp="2021-02-09T06:55:46" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-aggregates\test\test_aggregates_functions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Stepped = false" timestamp="2021-02-09T06:55:46" tests="11" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-aggregates\test\test_aggregates_functions.ts" time="0.0020" failures="0">
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should find interval below start of data" time="0.0010" classname="should find interval below start of data">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should find interval starting at raw data" time="0.0000" classname="should find interval starting at raw data">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should find interval starting with interpolated data - case 1" time="0.0000" classname="should find interval starting with interpolated data - case 1">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should find interval starting with interpolated data - case 2" time="0.0000" classname="should find interval starting with interpolated data - case 2">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should find interval starting with uncertain raw data" time="0.0000" classname="should find interval starting with uncertain raw data">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should find interval having a single uncertain raw data inside - " time="0.0000" classname="should find interval having a single uncertain raw data inside - ">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should find interval starting with bad raw data" time="0.0000" classname="should find interval starting with bad raw data">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should find interval having a single bad raw data inside - " time="0.0000" classname="should find interval having a single bad raw data inside - ">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should find interval with no data in it" time="0.0010" classname="should find interval with no data in it">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should extrapolate if interval is beyond end data - useSlopedExtrapolation = true" time="0.0000" classname="should extrapolate if interval is beyond end data - useSlopedExtrapolation = true">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = false should extrapolate if interval is beyond end data - useSlopedExtrapolation = false" time="0.0000" classname="should extrapolate if interval is beyond end data - useSlopedExtrapolation = false">
    </testcase>
  </testsuite>
  <testsuite name="Stepped = true" timestamp="2021-02-09T06:55:46" tests="11" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-aggregates\test\test_aggregates_functions.ts" time="0.0020" failures="0">
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should find interval below start of data" time="0.0000" classname="should find interval below start of data">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should find interval starting at raw data" time="0.0000" classname="should find interval starting at raw data">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should find interval starting with interpolated data - case 1" time="0.0000" classname="should find interval starting with interpolated data - case 1">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should find interval starting with interpolated data - case 2" time="0.0010" classname="should find interval starting with interpolated data - case 2">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should find interval starting with uncertain raw data" time="0.0000" classname="should find interval starting with uncertain raw data">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should find interval having a single uncertain raw data inside - " time="0.0000" classname="should find interval having a single uncertain raw data inside - ">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should find interval starting with bad raw data" time="0.0000" classname="should find interval starting with bad raw data">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should find interval having a single bad raw data inside - " time="0.0000" classname="should find interval having a single bad raw data inside - ">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should find interval with no data in it" time="0.0010" classname="should find interval with no data in it">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should extrapolate if interval is beyond end data - useSlopedExtrapolation = true" time="0.0000" classname="should extrapolate if interval is beyond end data - useSlopedExtrapolation = true">
    </testcase>
    <testcase name="Aggregates Intervals &amp; Regions Stepped = true should extrapolate if interval is beyond end data - useSlopedExtrapolation = false" time="0.0000" classname="should extrapolate if interval is beyond end data - useSlopedExtrapolation = false">
    </testcase>
  </testsuite>
  <testsuite name="AttributeIds" timestamp="2021-02-09T06:55:46" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_attribute_id.js" time="0.0000" failures="0">
    <testcase name="AttributeIds isValidAttributeId 1" time="0.0000" classname="isValidAttributeId 1">
    </testcase>
  </testsuite>
  <testsuite name="ByteString" timestamp="2021-02-09T06:55:46" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_coerce.js" time="0.0010" failures="0">
    <testcase name="ByteString coerceByteString with an array of integer" time="0.0000" classname="coerceByteString with an array of integer">
    </testcase>
    <testcase name="ByteString coerceByteString with base64 string" time="0.0010" classname="coerceByteString with base64 string">
    </testcase>
    <testcase name="ByteString coerceByteString with a Buffer" time="0.0000" classname="coerceByteString with a Buffer">
    </testcase>
  </testsuite>
  <testsuite name="coerceUInt32" timestamp="2021-02-09T06:55:46" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_coerce.js" time="0.0000" failures="0">
    <testcase name="coerceUInt32 coerceUInt32 number" time="0.0000" classname="coerceUInt32 number">
    </testcase>
    <testcase name="coerceUInt32 coerceUInt32 number" time="0.0000" classname="coerceUInt32 number">
    </testcase>
    <testcase name="coerceUInt32 coerceUInt32 number" time="0.0000" classname="coerceUInt32 number">
    </testcase>
  </testsuite>
  <testsuite name="coerceInt32" timestamp="2021-02-09T06:55:46" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_coerce.js" time="0.0000" failures="0">
    <testcase name="coerceInt32 coerceInt32 number" time="0.0000" classname="coerceInt32 number">
    </testcase>
    <testcase name="coerceInt32 coerceInt32 number" time="0.0000" classname="coerceInt32 number">
    </testcase>
    <testcase name="coerceInt32 coerceInt32 number" time="0.0000" classname="coerceInt32 number">
    </testcase>
  </testsuite>
  <testsuite name="coerceUInt64" timestamp="2021-02-09T06:55:46" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_coerce.js" time="0.0000" failures="0">
    <testcase name="coerceUInt64 should coerce an Int32 into Int64" time="0.0000" classname="should coerce an Int32 into Int64">
    </testcase>
    <testcase name="coerceUInt64 should coerce an long number into Int64" time="0.0000" classname="should coerce an long number into Int64">
    </testcase>
    <testcase name="coerceUInt64 should coerce an long number into Int64" time="0.0000" classname="should coerce an long number into Int64">
    </testcase>
  </testsuite>
  <testsuite name="check coerce various types" timestamp="2021-02-09T06:55:46" tests="25" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_coerce.js" time="0.0050" failures="0">
    <testcase name="check coerce various types should have a coerce method for boolean" time="0.0000" classname="should have a coerce method for boolean">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for Byte" time="0.0010" classname="should have a coerce method for Byte">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for SByte" time="0.0010" classname="should have a coerce method for SByte">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for UInt8" time="0.0000" classname="should have a coerce method for UInt8">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for UInt16" time="0.0000" classname="should have a coerce method for UInt16">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for UInt32" time="0.0000" classname="should have a coerce method for UInt32">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for Int8" time="0.0000" classname="should have a coerce method for Int8">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for Int16" time="0.0000" classname="should have a coerce method for Int16">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for Int32" time="0.0000" classname="should have a coerce method for Int32">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for Float" time="0.0010" classname="should have a coerce method for Float">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for Double" time="0.0000" classname="should have a coerce method for Double">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for Int64" time="0.0000" classname="should have a coerce method for Int64">
    </testcase>
    <testcase name="check coerce various types should have a coerce method for UInt64" time="0.0000" classname="should have a coerce method for UInt64">
    </testcase>
    <testcase name="check coerce various types coerceByte     should preserves null or undefined values " time="0.0000" classname="coerceByte     should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceSByte    should preserves null or undefined values " time="0.0010" classname="coerceSByte    should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceUInt8    should preserves null or undefined values " time="0.0000" classname="coerceUInt8    should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceUInt16   should preserves null or undefined values " time="0.0000" classname="coerceUInt16   should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceUInt32   should preserves null or undefined values " time="0.0000" classname="coerceUInt32   should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceInt8     should preserves null or undefined values " time="0.0000" classname="coerceInt8     should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceInt16    should preserves null or undefined values " time="0.0010" classname="coerceInt16    should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceInt32    should preserves null or undefined values " time="0.0000" classname="coerceInt32    should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceFloat    should preserves null or undefined values " time="0.0000" classname="coerceFloat    should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceDouble   should preserves null or undefined values " time="0.0000" classname="coerceDouble   should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceInt64    should preserves null or undefined values " time="0.0000" classname="coerceInt64    should preserves null or undefined values ">
    </testcase>
    <testcase name="check coerce various types coerceUInt64   should preserves null or undefined values " time="0.0000" classname="coerceUInt64   should preserves null or undefined values ">
    </testcase>
  </testsuite>
  <testsuite name="testing built-in type encoding" timestamp="2021-02-09T06:55:46" tests="33" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_encode_decode.js" time="0.0220" failures="0">
    <testcase name="testing built-in type encoding should encode and decode a boolean as a single byte" time="0.0000" classname="should encode and decode a boolean as a single byte">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Int8 (1 (signed) byte)" time="0.0000" classname="should encode and decode a Int8 (1 (signed) byte)">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a UInt8 (1 byte)" time="0.0010" classname="should encode and decode a UInt8 (1 byte)">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Int16 (2 bytes)" time="0.0000" classname="should encode and decode a Int16 (2 bytes)">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Int16 (2 bytes)" time="0.0000" classname="should encode and decode a Int16 (2 bytes)">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Integer (4 bytes)" time="0.0000" classname="should encode and decode a Integer (4 bytes)">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Int64 (8 bytes)" time="0.0010" classname="should encode and decode a Int64 (8 bytes)">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Floating Point (4 bytes)" time="0.0000" classname="should encode and decode a Floating Point (4 bytes)">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Double Point (8 bytes)" time="0.0000" classname="should encode and decode a Double Point (8 bytes)">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a null string" time="0.0010" classname="should encode and decode a null string">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a normal string" time="0.0010" classname="should encode and decode a normal string">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a LocaleId" time="0.0010" classname="should encode and decode a LocaleId">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a DateTime - origin" time="0.0000" classname="should encode and decode a DateTime - origin">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a DateTime" time="0.0000" classname="should encode and decode a DateTime">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a GUID" time="0.0010" classname="should encode and decode a GUID">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a GUID" time="0.0010" classname="should encode and decode a GUID">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a ByteString" time="0.0000" classname="should encode and decode a ByteString">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a two byte NodeId" time="0.0000" classname="should encode and decode a two byte NodeId">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a four byte NodeId" time="0.0000" classname="should encode and decode a four byte NodeId">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Numeric NodeId" time="0.0000" classname="should encode and decode a Numeric NodeId">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a byte NodeId (bug reported by Mika)" time="0.0000" classname="should encode and decode a byte NodeId (bug reported by Mika)">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode any small numeric NodeId" time="0.0120" classname="should encode and decode any small numeric NodeId">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a String NodeId" time="0.0000" classname="should encode and decode a String NodeId">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Guid NodeId" time="0.0010" classname="should encode and decode a Guid NodeId">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a String NodeId that looks like a GUID (issue#377)" time="0.0000" classname="should encode and decode a String NodeId that looks like a GUID (issue#377)">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Opaque NodeId" time="0.0000" classname="should encode and decode a Opaque NodeId">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a BYTESTRING NodeId" time="0.0000" classname="should encode and decode a BYTESTRING NodeId">
    </testcase>
    <testcase name="testing built-in type encoding should use the second form of decodeNodeId" time="0.0010" classname="should use the second form of decodeNodeId">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Expanded NodeId  - TwoBytes" time="0.0010" classname="should encode and decode a Expanded NodeId  - TwoBytes">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Expanded NodeId  - FourBytes" time="0.0000" classname="should encode and decode a Expanded NodeId  - FourBytes">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Expanded NodeId with namespaceUri" time="0.0000" classname="should encode and decode a Expanded NodeId with namespaceUri">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a UInt64 EightBytes" time="0.0000" classname="should encode and decode a UInt64 EightBytes">
    </testcase>
    <testcase name="testing built-in type encoding should encode and decode a Int64 EightBytes" time="0.0000" classname="should encode and decode a Int64 EightBytes">
    </testcase>
  </testsuite>
  <testsuite name="encoding and decoding string" timestamp="2021-02-09T06:55:46" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_encode_decode.js" time="0.0140" failures="0">
    <testcase name="encoding and decoding string should encode and decode a simple ascii String" time="0.0000" classname="should encode and decode a simple ascii String">
    </testcase>
    <testcase name="encoding and decoding string should encode and decode a utf-8 containing double bytes characters" time="0.0010" classname="should encode and decode a utf-8 containing double bytes characters">
    </testcase>
    <testcase name="encoding and decoding string should encode and decode a utf-8 containing chinese characters" time="0.0130" classname="should encode and decode a utf-8 containing chinese characters">
    </testcase>
  </testsuite>
  <testsuite name="encoding and decoding arrays" timestamp="2021-02-09T06:55:46" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_encode_decode.js" time="0.0020" failures="0">
    <testcase name="encoding and decoding arrays should encode and decode a null array of integer" time="0.0010" classname="should encode and decode a null array of integer">
    </testcase>
    <testcase name="encoding and decoding arrays should encode and decode an array of integer" time="0.0010" classname="should encode and decode an array of integer">
    </testcase>
    <testcase name="encoding and decoding arrays should encode and decode an array of strings" time="0.0000" classname="should encode and decode an array of strings">
    </testcase>
    <testcase name="encoding and decoding arrays should encode and decode an array of ByteString" time="0.0000" classname="should encode and decode an array of ByteString">
    </testcase>
  </testsuite>
  <testsuite name="check isValid and random for various types" timestamp="2021-02-09T06:55:46" tests="22" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_encode_decode.js" time="0.0040" failures="0">
    <testcase name="check isValid and random for various types isValidDouble on string shall return false" time="0.0010" classname="isValidDouble on string shall return false">
    </testcase>
    <testcase name="check isValid and random for various types isValidFloat on string shall return false" time="0.0000" classname="isValidFloat on string shall return false">
    </testcase>
    <testcase name="check isValid and random for various types should test isValid on Int32" time="0.0000" classname="should test isValid on Int32">
    </testcase>
    <testcase name="check isValid and random for various types should test isValid on UInt16" time="0.0000" classname="should test isValid on UInt16">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type Byte" time="0.0000" classname="should have a random and isValid method for type Byte">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type SByte" time="0.0000" classname="should have a random and isValid method for type SByte">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type UInt8" time="0.0000" classname="should have a random and isValid method for type UInt8">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type UInt16" time="0.0000" classname="should have a random and isValid method for type UInt16">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type UInt32" time="0.0000" classname="should have a random and isValid method for type UInt32">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type Int8" time="0.0000" classname="should have a random and isValid method for type Int8">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type Int16" time="0.0000" classname="should have a random and isValid method for type Int16">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type Int32" time="0.0000" classname="should have a random and isValid method for type Int32">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type String" time="0.0000" classname="should have a random and isValid method for type String">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type Boolean" time="0.0000" classname="should have a random and isValid method for type Boolean">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type Double" time="0.0000" classname="should have a random and isValid method for type Double">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type Float" time="0.0000" classname="should have a random and isValid method for type Float">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type Guid" time="0.0010" classname="should have a random and isValid method for type Guid">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type DateTime" time="0.0000" classname="should have a random and isValid method for type DateTime">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type NodeId" time="0.0010" classname="should have a random and isValid method for type NodeId">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type ByteString" time="0.0010" classname="should have a random and isValid method for type ByteString">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type Int64" time="0.0000" classname="should have a random and isValid method for type Int64">
    </testcase>
    <testcase name="check isValid and random for various types should have a random and isValid method for type UInt64" time="0.0000" classname="should have a random and isValid method for type UInt64">
    </testcase>
  </testsuite>
  <testsuite name="DateTime" timestamp="2021-02-09T06:55:46" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_encode_decode.js" time="0.0000" failures="0">
    <testcase name="DateTime converting 1491684476245" time="0.0000" classname="converting 1491684476245">
    </testcase>
  </testsuite>
  <testsuite name="Float" timestamp="2021-02-09T06:55:46" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_encode_decode.js" time="0.0020" failures="0">
    <testcase name="Float should encode float (0)" time="0.0010" classname="should encode float (0)">
    </testcase>
    <testcase name="Float should encode float (0)" time="0.0010" classname="should encode float (0)">
    </testcase>
    <testcase name="Float should decode zero from a buffer with 4 bytes set to zero" time="0.0000" classname="should decode zero from a buffer with 4 bytes set to zero">
    </testcase>
  </testsuite>
  <testsuite name="GUID" timestamp="2021-02-09T06:55:46" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_guid_encoding_performance.ts" time="0.0020" failures="0">
    <testcase name="GUID should encode guid efficiently" time="0.0020" classname="should encode guid efficiently">
    </testcase>
  </testsuite>
  <testsuite name="Map vs Object" timestamp="2021-02-09T06:55:48" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_guid_encoding_performance.ts" time="0.0380" failures="0">
    <testcase name="Map vs Object inserting " time="0.0000" classname="inserting ">
    </testcase>
    <testcase name="Map vs Object has  " time="0.0240" classname="has  ">
    </testcase>
    <testcase name="Map vs Object get  " time="0.0140" classname="get  ">
    </testcase>
  </testsuite>
  <testsuite name="encodeGuid" timestamp="2021-02-09T06:55:53" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_guid_encoding_performance.ts" time="0.0000" failures="0">
    <testcase name="encodeGuid should raise a exception if GUID is invalid" time="0.0000" classname="should raise a exception if GUID is invalid">
    </testcase>
  </testsuite>
  <testsuite name="Integers" timestamp="2021-02-09T06:55:53" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_integers.js" time="0.0010" failures="0">
    <testcase name="Integers isValidUInt16" time="0.0000" classname="isValidUInt16">
    </testcase>
    <testcase name="Integers isValidInt16" time="0.0010" classname="isValidInt16">
    </testcase>
    <testcase name="Integers isValidUInt32" time="0.0000" classname="isValidUInt32">
    </testcase>
    <testcase name="Integers isValidInt32" time="0.0000" classname="isValidInt32">
    </testcase>
    <testcase name="Integers isValidInt8" time="0.0000" classname="isValidInt8">
    </testcase>
    <testcase name="Integers isValidUInt8" time="0.0000" classname="isValidUInt8">
    </testcase>
  </testsuite>
  <testsuite name="validateLocaleId" timestamp="2021-02-09T06:55:53" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_locale_id.js" time="0.0000" failures="0">
    <testcase name="validateLocaleId validateLocaleId" time="0.0000" classname="validateLocaleId">
    </testcase>
  </testsuite>
  <testsuite name="roundToFloat2" timestamp="2021-02-09T06:55:53" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-basic-types\test\test_round_to_float2.js" time="0.0000" failures="0">
    <testcase name="roundToFloat2 roundToFloat2" time="0.0000" classname="roundToFloat2">
    </testcase>
  </testsuite>
  <testsuite name="Testing Benchmarker" timestamp="2021-02-09T06:55:53" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-benchmarker\test\test_benchmarker.ts" time="0.9720" failures="0">
    <testcase name="Testing Benchmarker forEach vs simple loops" time="0.2410" classname="forEach vs simple loops">
    </testcase>
    <testcase name="Testing Benchmarker should benchmark async function " time="0.7310" classname="should benchmark async function ">
    </testcase>
  </testsuite>
  <testsuite name="Testing BinaryStream" timestamp="2021-02-09T06:55:54" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-binary-stream\test\test_binary_stream.js" time="0.0010" failures="0">
    <testcase name="Testing BinaryStream should create a binary stream" time="0.0010" classname="should create a binary stream">
    </testcase>
    <testcase name="Testing BinaryStream readArrayBuffer should not returned a shared buffer" time="0.0000" classname="readArrayBuffer should not returned a shared buffer">
    </testcase>
  </testsuite>
  <testsuite name="Testing BinaryStreamSizeCalculator" timestamp="2021-02-09T06:55:54" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-binary-stream\test\test_binary_stream.js" time="0.0000" failures="0">
    <testcase name="Testing BinaryStreamSizeCalculator should calculate the right size" time="0.0000" classname="should calculate the right size">
    </testcase>
  </testsuite>
  <testsuite name="Testing BinaryStream#writeArrayBuffer /  BinaryStream#readArrayBuffer" timestamp="2021-02-09T06:55:54" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-binary-stream\test\test_binary_stream.js" time="0.1580" failures="0">
    <testcase name="Testing BinaryStream#writeArrayBuffer /  BinaryStream#readArrayBuffer should provide a working writeArrayBuffer" time="0.0280" classname="should provide a working writeArrayBuffer">
    </testcase>
    <testcase name="Testing BinaryStream#writeArrayBuffer /  BinaryStream#readArrayBuffer should provide a working writeArrayBuffer_old" time="0.0310" classname="should provide a working writeArrayBuffer_old">
    </testcase>
    <testcase name="Testing BinaryStream#writeArrayBuffer /  BinaryStream#readArrayBuffer should provide a efficient calculateByteLength" time="0.0010" classname="should provide a efficient calculateByteLength">
    </testcase>
    <testcase name="Testing BinaryStream#writeArrayBuffer /  BinaryStream#readArrayBuffer should provide a efficient writeArrayBuffer" time="0.0240" classname="should provide a efficient writeArrayBuffer">
    </testcase>
    <testcase name="Testing BinaryStream#writeArrayBuffer /  BinaryStream#readArrayBuffer should provide a efficient readArrayBuffer" time="0.0300" classname="should provide a efficient readArrayBuffer">
    </testcase>
    <testcase name="Testing BinaryStream#writeArrayBuffer /  BinaryStream#readArrayBuffer round trip" time="0.0440" classname="round trip">
    </testcase>
  </testsuite>
  <testsuite name="BinaryStreamSizeCalculator" timestamp="2021-02-09T06:55:58" tests="15" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-binary-stream\test\test_binary_stream2.js" time="0.0010" failures="0">
    <testcase name="BinaryStreamSizeCalculator Int8" time="0.0000" classname="Int8">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator UInt8" time="0.0000" classname="UInt8">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator Int16" time="0.0010" classname="Int16">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator UInt16" time="0.0000" classname="UInt16">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator Integer" time="0.0000" classname="Integer">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator UInt32" time="0.0000" classname="UInt32">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator ByteStream" time="0.0000" classname="ByteStream">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator ByteStream" time="0.0000" classname="ByteStream">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator ByteStream" time="0.0000" classname="ByteStream">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator String" time="0.0000" classname="String">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator String" time="0.0000" classname="String">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator String" time="0.0000" classname="String">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator Float" time="0.0000" classname="Float">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator Double" time="0.0000" classname="Double">
    </testcase>
    <testcase name="BinaryStreamSizeCalculator ArrayBuffer" time="0.0000" classname="ArrayBuffer">
    </testcase>
  </testsuite>
  <testsuite name="BinaryStream" timestamp="2021-02-09T06:55:58" tests="15" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-binary-stream\test\test_binary_stream2.js" time="0.0010" failures="0">
    <testcase name="BinaryStream Int8" time="0.0000" classname="Int8">
    </testcase>
    <testcase name="BinaryStream UInt8" time="0.0000" classname="UInt8">
    </testcase>
    <testcase name="BinaryStream Int16" time="0.0010" classname="Int16">
    </testcase>
    <testcase name="BinaryStream UInt16" time="0.0000" classname="UInt16">
    </testcase>
    <testcase name="BinaryStream Integer" time="0.0000" classname="Integer">
    </testcase>
    <testcase name="BinaryStream UInt32" time="0.0000" classname="UInt32">
    </testcase>
    <testcase name="BinaryStream ByteStream" time="0.0000" classname="ByteStream">
    </testcase>
    <testcase name="BinaryStream ByteStream" time="0.0000" classname="ByteStream">
    </testcase>
    <testcase name="BinaryStream ByteStream" time="0.0000" classname="ByteStream">
    </testcase>
    <testcase name="BinaryStream String" time="0.0000" classname="String">
    </testcase>
    <testcase name="BinaryStream String" time="0.0000" classname="String">
    </testcase>
    <testcase name="BinaryStream String" time="0.0000" classname="String">
    </testcase>
    <testcase name="BinaryStream Float" time="0.0000" classname="Float">
    </testcase>
    <testcase name="BinaryStream Double" time="0.0000" classname="Double">
    </testcase>
    <testcase name="BinaryStream ArrayBuffer" time="0.0000" classname="ArrayBuffer">
    </testcase>
  </testsuite>
  <testsuite name="testing buffer utils" timestamp="2021-02-09T06:55:58" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-buffer-utils\test\test_buffer_utils.js" time="1.0190" failures="0">
    <testcase name="testing buffer utils buffer_utils.createFastUninitializedBuffer should be faster than new Buffer(size)" time="1.0190" classname="buffer_utils.createFastUninitializedBuffer should be faster than new Buffer(size)">
    </testcase>
  </testsuite>
  <testsuite name="Testing OPCUA Client Certificate Manager" timestamp="2021-02-09T06:55:59" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="With self-signed certificates" timestamp="2021-02-09T06:56:00" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0280" failures="0">
    <testcase name="Testing OPCUA Client Certificate Manager With self-signed certificates AQS01- should reject a valid self-signed certificate that has never been seen before  with BadCertificateUntrusted" time="0.0180" classname="AQS01- should reject a valid self-signed certificate that has never been seen before  with BadCertificateUntrusted">
    </testcase>
    <testcase name="Testing OPCUA Client Certificate Manager With self-signed certificates AQS02- should reject a valid self-signed certificate that appears in the rejected folder with BadCertificateUntrusted" time="0.0050" classname="AQS02- should reject a valid self-signed certificate that appears in the rejected folder with BadCertificateUntrusted">
    </testcase>
    <testcase name="Testing OPCUA Client Certificate Manager With self-signed certificates AQS03- should accept a valid self-signed certificate that appears in the trusted certificate folder" time="0.0050" classname="AQS03- should accept a valid self-signed certificate that appears in the trusted certificate folder">
    </testcase>
  </testsuite>
  <testsuite name="with certificate (issued by CA)" timestamp="2021-02-09T06:56:05" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="when issuer (CA certificate) is trusted and has a revocation list" timestamp="2021-02-09T06:56:05" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0440" failures="0">
    <testcase name="Testing OPCUA Client Certificate Manager with certificate (issued by CA) when issuer (CA certificate) is trusted and has a revocation list AQT01- should accept a certificate (issued by CA) that has never been seen before with Good" time="0.0080" classname="AQT01- should accept a certificate (issued by CA) that has never been seen before with Good">
    </testcase>
    <testcase name="Testing OPCUA Client Certificate Manager with certificate (issued by CA) when issuer (CA certificate) is trusted and has a revocation list AQT02- should reject a certificate (signed by CA) that appears in the rejected folder with BadCertificateUntrusted" time="0.0030" classname="AQT02- should reject a certificate (signed by CA) that appears in the rejected folder with BadCertificateUntrusted">
    </testcase>
    <testcase name="Testing OPCUA Client Certificate Manager with certificate (issued by CA) when issuer (CA certificate) is trusted and has a revocation list AQT03- should accept a certificate (signed by CA) that appears in the trusted certificate folder - and check its validity" time="0.0130" classname="AQT03- should accept a certificate (signed by CA) that appears in the trusted certificate folder - and check its validity">
    </testcase>
    <testcase name="Testing OPCUA Client Certificate Manager with certificate (issued by CA) when issuer (CA certificate) is trusted and has a revocation list AQT04- should accept a certificate (signed by CA) that appears in the trusted certificate folder" time="0.0110" classname="AQT04- should accept a certificate (signed by CA) that appears in the trusted certificate folder">
    </testcase>
    <testcase name="Testing OPCUA Client Certificate Manager with certificate (issued by CA) when issuer (CA certificate) is trusted and has a revocation list AQT05- should accept a certificate (signed by CA) even if the certificate doesn&apos;t appear in the  trusted certificate folder" time="0.0090" classname="AQT05- should accept a certificate (signed by CA) even if the certificate doesn&apos;t appear in the  trusted certificate folder">
    </testcase>
  </testsuite>
  <testsuite name="when issuer (CA certificate) is not trusted" timestamp="2021-02-09T06:56:14" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0470" failures="0">
    <testcase name="Testing OPCUA Client Certificate Manager with certificate (issued by CA) when issuer (CA certificate) is not trusted AQU01- should reject a certificate (signed by CA) that has never been seen before with BadCertificateUntrusted" time="0.0060" classname="AQU01- should reject a certificate (signed by CA) that has never been seen before with BadCertificateUntrusted">
    </testcase>
    <testcase name="Testing OPCUA Client Certificate Manager with certificate (issued by CA) when issuer (CA certificate) is not trusted AQU02- should reject a certificate (signed by CA) that appears in the trusted certificate folder - if the issuer is not trusted !" time="0.0080" classname="AQU02- should reject a certificate (signed by CA) that appears in the trusted certificate folder - if the issuer is not trusted !">
    </testcase>
    <testcase name="Testing OPCUA Client Certificate Manager with certificate (issued by CA) when issuer (CA certificate) is not trusted AQU03- should reject a certificate (signed by CA) that appears in the trusted certificate folder - if the issuer certificate is also trusted  - and revocation list is missing!" time="0.0170" classname="AQU03- should reject a certificate (signed by CA) that appears in the trusted certificate folder - if the issuer certificate is also trusted  - and revocation list is missing!">
    </testcase>
    <testcase name="Testing OPCUA Client Certificate Manager with certificate (issued by CA) when issuer (CA certificate) is not trusted AQU04- should accept a certificate (signed by CA) that appears in the trusted certificate folder - if the issuer certificate is also trusted  - and revocation list is known!" time="0.0160" classname="AQU04- should accept a certificate (signed by CA) that appears in the trusted certificate folder - if the issuer certificate is also trusted  - and revocation list is known!">
    </testcase>
  </testsuite>
  <testsuite name="Testing OPCUA Certificate Manager with automatically acceptance of unknown certificate" timestamp="2021-02-09T06:56:22" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0120" failures="0">
    <testcase name="Testing OPCUA Certificate Manager with automatically acceptance of unknown certificate BW01- should automatically accept &apos;unknown&apos; self-signed certificate if  automaticallyAcceptUnknownCertificate is true" time="0.0090" classname="BW01- should automatically accept &apos;unknown&apos; self-signed certificate if  automaticallyAcceptUnknownCertificate is true">
    </testcase>
    <testcase name="Testing OPCUA Certificate Manager with automatically acceptance of unknown certificate BW02- should automatically reject &apos;unknown&apos; self-signed certificate if  automaticallyAcceptUnknownCertificate is false" time="0.0030" classname="BW02- should automatically reject &apos;unknown&apos; self-signed certificate if  automaticallyAcceptUnknownCertificate is false">
    </testcase>
  </testsuite>
  <testsuite name="Chunk manager - no header - no signature - no encryption" timestamp="2021-02-09T06:56:26" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-chunkmanager\test\test_chunk_manager.js" time="0.0030" failures="0">
    <testcase name="Chunk manager - no header - no signature - no encryption should decompose a large single write in small chunks" time="0.0020" classname="should decompose a large single write in small chunks">
    </testcase>
    <testcase name="Chunk manager - no header - no signature - no encryption should decompose many small writes in small chunks" time="0.0010" classname="should decompose many small writes in small chunks">
    </testcase>
  </testsuite>
  <testsuite name="Chunk Manager (chunk size 32 bytes, sequenceHeaderSize: 8 bytes)
" timestamp="2021-02-09T06:56:26" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-chunkmanager\test\test_chunk_manager.js" time="0.0020" failures="0">
    <testcase name="Chunk Manager (chunk size 32 bytes, sequenceHeaderSize: 8 bytes)
 should transform a 32 bytes message into a chunk of 32 bytes and 16 bytes" time="0.0010" classname="should transform a 32 bytes message into a chunk of 32 bytes and 16 bytes">
    </testcase>
    <testcase name="Chunk Manager (chunk size 32 bytes, sequenceHeaderSize: 8 bytes)
 should transform a 33 bytes message into a chunk of 32 bytes and 17 bytes" time="0.0010" classname="should transform a 33 bytes message into a chunk of 32 bytes and 17 bytes">
    </testcase>
  </testsuite>
  <testsuite name="Chunk Manager (chunk size 32 bytes, sequenceHeaderSize: 8 bytes ,signatureLength: 4 )
" timestamp="2021-02-09T06:56:26" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-chunkmanager\test\test_chunk_manager.js" time="0.0010" failures="0">
    <testcase name="Chunk Manager (chunk size 32 bytes, sequenceHeaderSize: 8 bytes ,signatureLength: 4 )
 should transform a 32 bytes message into a chunk of 32 bytes and 24 bytes" time="0.0010" classname="should transform a 32 bytes message into a chunk of 32 bytes and 24 bytes">
    </testcase>
    <testcase name="Chunk Manager (chunk size 32 bytes, sequenceHeaderSize: 8 bytes ,signatureLength: 4 )
 should transform a 33 bytes message into a chunk of 32 bytes and 25 bytes" time="0.0000" classname="should transform a 33 bytes message into a chunk of 32 bytes and 25 bytes">
    </testcase>
  </testsuite>
  <testsuite name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 8 bytes ,cipherBlockSize 8 bytes )
" timestamp="2021-02-09T06:56:26" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-chunkmanager\test\test_chunk_manager.js" time="0.0050" failures="0">
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 8 bytes ,cipherBlockSize 8 bytes )
 should transform a  1 bytes message into a single 12 bytes chunk" time="0.0010" classname="should transform a  1 bytes message into a single 12 bytes chunk">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 8 bytes ,cipherBlockSize 8 bytes )
 should transform a  2 bytes message into a single 20 bytes chunk" time="0.0010" classname="should transform a  2 bytes message into a single 20 bytes chunk">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 8 bytes ,cipherBlockSize 8 bytes )
 should transform a 10 bytes message into a single 28 bytes chunk" time="0.0010" classname="should transform a 10 bytes message into a single 28 bytes chunk">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 8 bytes ,cipherBlockSize 8 bytes )
 should transform a 32 bytes message into two 28 bytes chunks" time="0.0010" classname="should transform a 32 bytes message into two 28 bytes chunks">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 8 bytes ,cipherBlockSize 8 bytes )
 should transform a 64 bytes message into four 28 bytes chunks " time="0.0000" classname="should transform a 64 bytes message into four 28 bytes chunks ">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 8 bytes ,cipherBlockSize 8 bytes )
 should transform a 16 bytes message into a single chunk " time="0.0000" classname="should transform a 16 bytes message into a single chunk ">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 8 bytes ,cipherBlockSize 8 bytes )
 should transform a 17 bytes message into a single chunk " time="0.0000" classname="should transform a 17 bytes message into a single chunk ">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 8 bytes ,cipherBlockSize 8 bytes )
 should transform a 35 bytes message into a  chunk of 32 bytes followed by a chunk of 8 bytes" time="0.0010" classname="should transform a 35 bytes message into a  chunk of 32 bytes followed by a chunk of 8 bytes">
    </testcase>
  </testsuite>
  <testsuite name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 6 bytes ,cipherBlockSize 8 bytes )
" timestamp="2021-02-09T06:56:26" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-chunkmanager\test\test_chunk_manager.js" time="0.0050" failures="0">
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 6 bytes ,cipherBlockSize 8 bytes )
 should transform a 1 byte message into a single chunk" time="0.0000" classname="should transform a 1 byte message into a single chunk">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 6 bytes ,cipherBlockSize 8 bytes )
 should transform a 2 byte message into a single chunk" time="0.0010" classname="should transform a 2 byte message into a single chunk">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 6 bytes ,cipherBlockSize 8 bytes )
 should transform a 3 byte message into a single chunk" time="0.0000" classname="should transform a 3 byte message into a single chunk">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 6 bytes ,cipherBlockSize 8 bytes )
 should transform a 4 byte message into a single chunk" time="0.0010" classname="should transform a 4 byte message into a single chunk">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 6 bytes ,cipherBlockSize 8 bytes )
 should transform a 5 byte message into a single chunk" time="0.0000" classname="should transform a 5 byte message into a single chunk">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 6 bytes ,cipherBlockSize 8 bytes )
 should transform a 6 byte message into a single chunk" time="0.0010" classname="should transform a 6 byte message into a single chunk">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 6 bytes ,cipherBlockSize 8 bytes )
 should transform a 29 byte message into a single chunk" time="0.0010" classname="should transform a 29 byte message into a single chunk">
    </testcase>
    <testcase name="Chunk Manager Padding (chunk size 32 bytes, plainBlockSize 6 bytes ,cipherBlockSize 8 bytes )
 should transform a 30 byte message into a single chunk" time="0.0010" classname="should transform a 30 byte message into a single chunk">
    </testcase>
  </testsuite>
  <testsuite name="NodeCrawlerBase" timestamp="2021-02-09T06:56:26" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-client-crawler\test\test_crawler_on_addresss_space.ts" time="2.6240" failures="0">
    <testcase name="NodeCrawlerBase should crawl on a PseudoSession" time="0.0310" classname="should crawl on a PseudoSession">
    </testcase>
    <testcase name="NodeCrawlerBase should crawl a very large number of nodes" time="0.0230" classname="should crawl a very large number of nodes">
    </testcase>
    <testcase name="NodeCrawlerBase issue #655: it should used provided MaxNodePerRead/MaxNodePerBrowse as a minimum value when set &lt;&gt; 0 and server provide limits" time="0.0100" classname="issue #655: it should used provided MaxNodePerRead/MaxNodePerBrowse as a minimum value when set &lt;&gt; 0 and server provide limits">
    </testcase>
    <testcase name="NodeCrawlerBase issue #655: it should used provided MaxNodePerRead/MaxNodePerBrowse as a minimum value when set &lt;&gt; 0 and server do not provide limits" time="0.0070" classname="issue #655: it should used provided MaxNodePerRead/MaxNodePerBrowse as a minimum value when set &lt;&gt; 0 and server do not provide limits">
    </testcase>
    <testcase name="NodeCrawlerBase #655 it should send a browse event for each elements visited " time="2.5110" classname="#655 it should send a browse event for each elements visited ">
    </testcase>
    <testcase name="NodeCrawlerBase #717 it should populate nodeClass for each elements visited " time="0.0420" classname="#717 it should populate nodeClass for each elements visited ">
    </testcase>
  </testsuite>
  <testsuite name="Testing client alarm" timestamp="2021-02-09T06:56:30" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-client\test\test_client_alarm.ts" time="0.0030" failures="0">
    <testcase name="Testing client alarm should update a client alarm list #CAL" time="0.0030" classname="should update a client alarm list #CAL">
    </testcase>
  </testsuite>
  <testsuite name="Testing the client publish engine" timestamp="2021-02-09T06:56:30" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-client\test\test_client_publish_engine.js" time="0.0830" failures="0">
    <testcase name="Testing the client publish engine a client should send a publish request to the server for every new subscription" time="0.0040" classname="a client should send a publish request to the server for every new subscription">
    </testcase>
    <testcase name="Testing the client publish engine a client should keep sending a new publish request to the server after receiving a notification, when a subscription is active" time="0.0400" classname="a client should keep sending a new publish request to the server after receiving a notification, when a subscription is active">
    </testcase>
    <testcase name="Testing the client publish engine a client should stop sending publish request to the server after receiving a notification, when there is no more registered subscription " time="0.0140" classname="a client should stop sending publish request to the server after receiving a notification, when there is no more registered subscription ">
    </testcase>
    <testcase name="Testing the client publish engine a client should acknowledge sequence numbers received in PublishResponse in next PublishRequest" time="0.0040" classname="a client should acknowledge sequence numbers received in PublishResponse in next PublishRequest">
    </testcase>
    <testcase name="Testing the client publish engine a client publish engine shall adapt the timeoutHint of a publish request to take into account the number of awaiting publish requests " time="0.0020" classname="a client publish engine shall adapt the timeoutHint of a publish request to take into account the number of awaiting publish requests ">
    </testcase>
    <testcase name="Testing the client publish engine #390 should not send publish request if channel is not properly opened" time="0.0190" classname="#390 should not send publish request if channel is not properly opened">
    </testcase>
  </testsuite>
  <testsuite name="extractConditionFields" timestamp="2021-02-09T06:56:30" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-client\test\test_extractConditionFields.ts" time="0.0090" failures="0">
    <testcase name="extractConditionFields extractConditionFields from type ConditionType" time="0.0040" classname="extractConditionFields from type ConditionType">
    </testcase>
    <testcase name="extractConditionFields extractConditionFields from type AcknowledgeableConditionType" time="0.0020" classname="extractConditionFields from type AcknowledgeableConditionType">
    </testcase>
    <testcase name="extractConditionFields extractConditionFields from instance" time="0.0030" classname="extractConditionFields from instance">
    </testcase>
  </testsuite>
  <testsuite name="issue 696" timestamp="2021-02-09T06:56:31" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2090" failures="0">
    <testcase name="issue 696 should not leak interval if connection failed" time="0.2090" classname="should not leak interval if connection failed">
    </testcase>
  </testsuite>
  <testsuite name="issue #931 investigation" timestamp="2021-02-09T06:56:31" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="18.2570" failures="0">
    <testcase name="issue #931 investigation 931-A should be able to disconnect when the client is trying to initially connect to a server - No Security - Localhost" time="4.0610" classname="931-A should be able to disconnect when the client is trying to initially connect to a server - No Security - Localhost">
    </testcase>
    <testcase name="issue #931 investigation 931-A should be able to disconnect when the client is trying to initially connect to a server - No Security - hostname" time="4.0560" classname="931-A should be able to disconnect when the client is trying to initially connect to a server - No Security - hostname">
    </testcase>
    <testcase name="issue #931 investigation 931-B should be able to disconnect when the client is trying to initially connect to a server - With Security - localhost" time="4.0600" classname="931-B should be able to disconnect when the client is trying to initially connect to a server - With Security - localhost">
    </testcase>
    <testcase name="issue #931 investigation 931-B should be able to disconnect when the client is trying to initially connect to a server - With Security - hostname" time="4.0700" classname="931-B should be able to disconnect when the client is trying to initially connect to a server - With Security - hostname">
    </testcase>
    <testcase name="issue #931 investigation 931-Z connect disconnect no wait " time="2.0100" classname="931-Z connect disconnect no wait ">
    </testcase>
  </testsuite>
  <testsuite name="OPCUA Client" timestamp="2021-02-09T06:56:50" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0050" failures="0">
    <testcase name="OPCUA Client it should create a client" time="0.0040" classname="it should create a client">
    </testcase>
    <testcase name="OPCUA Client should create a ClientSecureChannerLayer" time="0.0010" classname="should create a ClientSecureChannerLayer">
    </testcase>
  </testsuite>
  <testsuite name="Should verify certificate" timestamp="2021-02-09T06:56:50" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-client\test\test_verify.ts" time="0.4770" failures="0">
    <testcase name="Should verify certificate CERT1 - faulty_certificate" time="0.3800" classname="CERT1 - faulty_certificate">
    </testcase>
    <testcase name="Should verify certificate CERT2 - faulty_certificate_missing_subjectAltName.pem" time="0.0970" classname="CERT2 - faulty_certificate_missing_subjectAltName.pem">
    </testcase>
  </testsuite>
  <testsuite name="X509 - Wireshark Analysis" timestamp="2021-02-09T06:56:50" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-client\test\test_x509_signature.ts" time="0.0380" failures="0">
    <testcase name="X509 - Wireshark Analysis 1-should create a valid ActiveSessionRequest with X509 " time="0.0300" classname="1-should create a valid ActiveSessionRequest with X509 ">
    </testcase>
    <testcase name="X509 - Wireshark Analysis 2-should create a valid ActiveSessionRequest with X509 " time="0.0080" classname="2-should create a valid ActiveSessionRequest with X509 ">
    </testcase>
  </testsuite>
  <testsuite name="testing ServerStatusDataType" timestamp="2021-02-09T06:56:50" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-common\test\test_ServerStatusDataType.ts" time="0.0010" failures="0">
    <testcase name="testing ServerStatusDataType should create a ServerStatusDataType" time="0.0010" classname="should create a ServerStatusDataType">
    </testcase>
  </testsuite>
  <testsuite name="ComplexType read from XML NodeSET file shall be binary encode-able" timestamp="2021-02-09T06:56:50" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-convert-nodeset-to-javascript\test\test_datatype_management.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="commonCodeToUInt" timestamp="2021-02-09T06:56:50" tests="10" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-access\test\test_common_code_to_unit.js" time="0.0000" failures="0">
    <testcase name="commonCodeToUInt commonCodeToUInt - CEL = °C = degree Celsius" time="0.0000" classname="commonCodeToUInt - CEL = °C = degree Celsius">
    </testcase>
    <testcase name="commonCodeToUInt commonCodeToUInt - LTR = l =  liter" time="0.0000" classname="commonCodeToUInt - LTR = l =  liter">
    </testcase>
    <testcase name="commonCodeToUInt commonCodeToUInt - BQL = Bq =  Becquerel = 27,027 x 1E-12 Ci  " time="0.0000" classname="commonCodeToUInt - BQL = Bq =  Becquerel = 27,027 x 1E-12 Ci  ">
    </testcase>
    <testcase name="commonCodeToUInt commonCodeToUInt - CUR = Ci = Curie = 3,7 x 1E10 Bq " time="0.0000" classname="commonCodeToUInt - CUR = Ci = Curie = 3,7 x 1E10 Bq ">
    </testcase>
    <testcase name="commonCodeToUInt commonCodeToUInt - A53 = eV = ElectronVolt = 1,602 177 33 1E-19 J  " time="0.0000" classname="commonCodeToUInt - A53 = eV = ElectronVolt = 1,602 177 33 1E-19 J  ">
    </testcase>
    <testcase name="commonCodeToUInt commonCodeToUInt - B71 = MeV = megaelectronvolt = 1E6 eV  " time="0.0000" classname="commonCodeToUInt - B71 = MeV = megaelectronvolt = 1E6 eV  ">
    </testcase>
    <testcase name="commonCodeToUInt commonCodeToUInt - STL = l = standard liter" time="0.0000" classname="commonCodeToUInt - STL = l = standard liter">
    </testcase>
    <testcase name="commonCodeToUInt commonCodeToUInt - A97 = hPa = hecto pascal" time="0.0000" classname="commonCodeToUInt - A97 = hPa = hecto pascal">
    </testcase>
    <testcase name="commonCodeToUInt commonCodeToUint - kelvin" time="0.0000" classname="commonCodeToUint - kelvin">
    </testcase>
    <testcase name="commonCodeToUInt commonCodeToUint - kilogram_per_squared_centimeter" time="0.0000" classname="commonCodeToUint - kilogram_per_squared_centimeter">
    </testcase>
  </testsuite>
  <testsuite name="PercentDeadband with EURange" timestamp="2021-02-09T06:56:50" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-access\test\test_range.js" time="0.0010" failures="0">
    <testcase name="PercentDeadband with EURange detect a change when range is [0,100], deadband 10% " time="0.0000" classname="detect a change when range is [0,100], deadband 10% ">
    </testcase>
    <testcase name="PercentDeadband with EURange detect a change when range is [-100,100], deadband 10% " time="0.0010" classname="detect a change when range is [-100,100], deadband 10% ">
    </testcase>
    <testcase name="PercentDeadband with EURange detect a change when range is [-100,100], deadband 50% " time="0.0000" classname="detect a change when range is [-100,100], deadband 50% ">
    </testcase>
  </testsuite>
  <testsuite name="Testing AccessLevelFlag" timestamp="2021-02-09T06:56:50" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-model\test\test_access_level_flag.js" time="0.0010" failures="0">
    <testcase name="Testing AccessLevelFlag should create a access level flags from a string" time="0.0000" classname="should create a access level flags from a string">
    </testcase>
    <testcase name="Testing AccessLevelFlag should create a flag with no bit set" time="0.0000" classname="should create a flag with no bit set">
    </testcase>
    <testcase name="Testing AccessLevelFlag should create a flag with no bit set -&gt; 0" time="0.0000" classname="should create a flag with no bit set -&gt; 0">
    </testcase>
    <testcase name="Testing AccessLevelFlag should have a accessLevel Flag Basic Type" time="0.0010" classname="should have a accessLevel Flag Basic Type">
    </testcase>
    <testcase name="Testing AccessLevelFlag should provide a easy way to check if a flag is set or not" time="0.0000" classname="should provide a easy way to check if a flag is set or not">
    </testcase>
    <testcase name="Testing AccessLevelFlag convertAccessLevelFlagToByte" time="0.0000" classname="convertAccessLevelFlagToByte">
    </testcase>
    <testcase name="Testing AccessLevelFlag accessLevelFlagToString" time="0.0000" classname="accessLevelFlagToString">
    </testcase>
    <testcase name="Testing AccessLevelFlag randomAccessLevel" time="0.0000" classname="randomAccessLevel">
    </testcase>
    <testcase name="Testing AccessLevelFlag encode/decode" time="0.0000" classname="encode/decode">
    </testcase>
  </testsuite>
  <testsuite name="BrowseDirection" timestamp="2021-02-09T06:56:50" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-model\test\test_browse_direction.js" time="0.0010" failures="0">
    <testcase name="BrowseDirection encodeBrowseDirection" time="0.0010" classname="encodeBrowseDirection">
    </testcase>
    <testcase name="BrowseDirection encodeBrowseDirection - invalid" time="0.0000" classname="encodeBrowseDirection - invalid">
    </testcase>
  </testsuite>
  <testsuite name="DataEncoding" timestamp="2021-02-09T06:56:50" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-model\test\test_data_encoding.js" time="0.0000" failures="0">
    <testcase name="DataEncoding isDataEncoding" time="0.0000" classname="isDataEncoding">
    </testcase>
    <testcase name="DataEncoding isValidDataEncoding" time="0.0000" classname="isValidDataEncoding">
    </testcase>
  </testsuite>
  <testsuite name="DiagnosticInfo" timestamp="2021-02-09T06:56:50" tests="12" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-model\test\test_diagnostic_info.js" time="0.0100" failures="0">
    <testcase name="DiagnosticInfo should encode default DiagnosticInfo in a single byte" time="0.0030" classname="should encode default DiagnosticInfo in a single byte">
    </testcase>
    <testcase name="DiagnosticInfo should encode default DiagnosticInfo with only symbolicId in 5-bytes" time="0.0010" classname="should encode default DiagnosticInfo with only symbolicId in 5-bytes">
    </testcase>
    <testcase name="DiagnosticInfo should encode DiagnosticInfo with symbolicId and locale in 9-bytes" time="0.0000" classname="should encode DiagnosticInfo with symbolicId and locale in 9-bytes">
    </testcase>
    <testcase name="DiagnosticInfo should encode DiagnosticInfo with InnerStatusCode in 5-bytes" time="0.0010" classname="should encode DiagnosticInfo with InnerStatusCode in 5-bytes">
    </testcase>
    <testcase name="DiagnosticInfo should encode DiagnosticInfo with a default innerDiagnosticInfo in 2-bytes" time="0.0020" classname="should encode DiagnosticInfo with a default innerDiagnosticInfo in 2-bytes">
    </testcase>
    <testcase name="DiagnosticInfo should encode DiagnosticInfo with an innerDiagnosticInfo  containing a 5 car string in 11-bytes" time="0.0010" classname="should encode DiagnosticInfo with an innerDiagnosticInfo  containing a 5 car string in 11-bytes">
    </testcase>
    <testcase name="DiagnosticInfo should encode DiagnosticInfo with SymbolicId" time="0.0000" classname="should encode DiagnosticInfo with SymbolicId">
    </testcase>
    <testcase name="DiagnosticInfo should encode DiagnosticInfo with LocalizedText" time="0.0010" classname="should encode DiagnosticInfo with LocalizedText">
    </testcase>
    <testcase name="DiagnosticInfo should encode DiagnosticInfo with NamespaceURI" time="0.0000" classname="should encode DiagnosticInfo with NamespaceURI">
    </testcase>
    <testcase name="DiagnosticInfo should encode DiagnosticInfo with NamespaceURI and LocalizedText and SymbolicId" time="0.0010" classname="should encode DiagnosticInfo with NamespaceURI and LocalizedText and SymbolicId">
    </testcase>
    <testcase name="DiagnosticInfo encodeDiagnosticInfo/decodeDiagnosticInfo1" time="0.0000" classname="encodeDiagnosticInfo/decodeDiagnosticInfo1">
    </testcase>
    <testcase name="DiagnosticInfo encodeDiagnosticInfo/decodeDiagnosticInfo2" time="0.0000" classname="encodeDiagnosticInfo/decodeDiagnosticInfo2">
    </testcase>
  </testsuite>
  <testsuite name="LocalizedText" timestamp="2021-02-09T06:56:50" tests="16" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-model\test\test_localized_text.js" time="0.0030" failures="0">
    <testcase name="LocalizedText should create a LocalizeText" time="0.0000" classname="should create a LocalizeText">
    </testcase>
    <testcase name="LocalizedText should encode and decode a LocalizeText that have both text and locale" time="0.0010" classname="should encode and decode a LocalizeText that have both text and locale">
    </testcase>
    <testcase name="LocalizedText should encode and decode a LocalizeText that have text but no locale" time="0.0000" classname="should encode and decode a LocalizeText that have text but no locale">
    </testcase>
    <testcase name="LocalizedText should encode and decode a LocalizeText that have no text but a locale" time="0.0000" classname="should encode and decode a LocalizeText that have no text but a locale">
    </testcase>
    <testcase name="LocalizedText #coerceLocalizedText - null" time="0.0000" classname="#coerceLocalizedText - null">
    </testcase>
    <testcase name="LocalizedText #coerceLocalizedText - string" time="0.0010" classname="#coerceLocalizedText - string">
    </testcase>
    <testcase name="LocalizedText #coerceLocalizedText - LocalizedText" time="0.0000" classname="#coerceLocalizedText - LocalizedText">
    </testcase>
    <testcase name="LocalizedText #coerceLocalizedText " time="0.0000" classname="#coerceLocalizedText ">
    </testcase>
    <testcase name="LocalizedText LocalizedText#shema" time="0.0000" classname="LocalizedText#shema">
    </testcase>
    <testcase name="LocalizedText LocalizedText#coerce" time="0.0000" classname="LocalizedText#coerce">
    </testcase>
    <testcase name="LocalizedText LocalizedText#encode/decode" time="0.0000" classname="LocalizedText#encode/decode">
    </testcase>
    <testcase name="LocalizedText LocalizedText#encode/decode" time="0.0000" classname="LocalizedText#encode/decode">
    </testcase>
    <testcase name="LocalizedText encode/decode 1" time="0.0010" classname="encode/decode 1">
    </testcase>
    <testcase name="LocalizedText encode/decode 2" time="0.0000" classname="encode/decode 2">
    </testcase>
    <testcase name="LocalizedText encode/decode 3" time="0.0000" classname="encode/decode 3">
    </testcase>
    <testcase name="LocalizedText encode/decode 4" time="0.0000" classname="encode/decode 4">
    </testcase>
  </testsuite>
  <testsuite name="testing makeNodeClassMask" timestamp="2021-02-09T06:56:50" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-model\test\test_make_node_class_mask.js" time="0.0000" failures="0">
    <testcase name="testing makeNodeClassMask should provide a way to build a NodeClassMask easily" time="0.0000" classname="should provide a way to build a NodeClassMask easily">
    </testcase>
  </testsuite>
  <testsuite name="QualifiedName" timestamp="2021-02-09T06:56:50" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-model\test\test_qualified_name.js" time="0.0030" failures="0">
    <testcase name="QualifiedName should construct a qualified name" time="0.0000" classname="should construct a qualified name">
    </testcase>
    <testcase name="QualifiedName testing qualified name toString" time="0.0010" classname="testing qualified name toString">
    </testcase>
    <testcase name="QualifiedName testing qualified name toString" time="0.0000" classname="testing qualified name toString">
    </testcase>
    <testcase name="QualifiedName should coerce a string into a qualified name " time="0.0000" classname="should coerce a string into a qualified name ">
    </testcase>
    <testcase name="QualifiedName should coerce a qualified name  into a qualified name " time="0.0010" classname="should coerce a qualified name  into a qualified name ">
    </testcase>
    <testcase name="QualifiedName should coerce a null object  into a null qualified name " time="0.0000" classname="should coerce a null object  into a null qualified name ">
    </testcase>
    <testcase name="QualifiedName should coerce a QualifiedNamed" time="0.0000" classname="should coerce a QualifiedNamed">
    </testcase>
    <testcase name="QualifiedName QualifiedName#isEmpty" time="0.0000" classname="QualifiedName#isEmpty">
    </testcase>
    <testcase name="QualifiedName encodeDecode QualifiedName" time="0.0010" classname="encodeDecode QualifiedName">
    </testcase>
  </testsuite>
  <testsuite name="test qualified name pull request #406" timestamp="2021-02-09T06:56:50" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-model\test\test_qualified_name_pull_request_406.js" time="0.0000" failures="0">
    <testcase name="test qualified name pull request #406 should convert a string &quot;Hello&quot; into a qualified name " time="0.0000" classname="should convert a string &quot;Hello&quot; into a qualified name ">
    </testcase>
    <testcase name="test qualified name pull request #406 should convert a string &quot;1&quot; into a qualified name " time="0.0000" classname="should convert a string &quot;1&quot; into a qualified name ">
    </testcase>
    <testcase name="test qualified name pull request #406 should convert a string &quot;1:Hello&quot; name  into a qualified name " time="0.0000" classname="should convert a string &quot;1:Hello&quot; name  into a qualified name ">
    </testcase>
    <testcase name="test qualified name pull request #406 should convert a string &quot;Hel:lo&quot; into a qualified name " time="0.0000" classname="should convert a string &quot;Hel:lo&quot; into a qualified name ">
    </testcase>
    <testcase name="test qualified name pull request #406 should convert a string &quot;He:ll:o&quot; name  into a qualified name " time="0.0000" classname="should convert a string &quot;He:ll:o&quot; name  into a qualified name ">
    </testcase>
    <testcase name="test qualified name pull request #406 should convert a string &quot;1:He:ll:o&quot; name  into a qualified name " time="0.0000" classname="should convert a string &quot;1:He:ll:o&quot; name  into a qualified name ">
    </testcase>
    <testcase name="test qualified name pull request #406 should convert a string &quot;1.5:Hello&quot; name  into a qualified name " time="0.0000" classname="should convert a string &quot;1.5:Hello&quot; name  into a qualified name ">
    </testcase>
    <testcase name="test qualified name pull request #406 should convert a string &quot;1.5:Hel:lo&quot; name  into a qualified name " time="0.0000" classname="should convert a string &quot;1.5:Hel:lo&quot; name  into a qualified name ">
    </testcase>
    <testcase name="test qualified name pull request #406 should convert a string &quot;1.5:He:ll:o&quot; name  into a qualified name " time="0.0000" classname="should convert a string &quot;1.5:He:ll:o&quot; name  into a qualified name ">
    </testcase>
  </testsuite>
  <testsuite name="ResultMask" timestamp="2021-02-09T06:56:50" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-model\test\test_result_mask.js" time="0.0000" failures="0">
    <testcase name="ResultMask makeResultMask" time="0.0000" classname="makeResultMask">
    </testcase>
  </testsuite>
  <testsuite name="DataValue" timestamp="2021-02-09T06:56:50" tests="16" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-value\test\test_datavalue.js" time="0.0220" failures="0">
    <testcase name="DataValue should create a empty DataValue and encode it as a 1-Byte length block" time="0.0020" classname="should create a empty DataValue and encode it as a 1-Byte length block">
    </testcase>
    <testcase name="DataValue should create a DataValue with string variant and encode/decode it nicely " time="0.0010" classname="should create a DataValue with string variant and encode/decode it nicely ">
    </testcase>
    <testcase name="DataValue should create a DataValue with string variant and some date and encode/decode it nicely" time="0.0100" classname="should create a DataValue with string variant and some date and encode/decode it nicely">
    </testcase>
    <testcase name="DataValue should create a DataValue with string variant and all dates and encode/decode it nicely" time="0.0010" classname="should create a DataValue with string variant and all dates and encode/decode it nicely">
    </testcase>
    <testcase name="DataValue DataValue#toString" time="0.0010" classname="DataValue#toString">
    </testcase>
    <testcase name="DataValue DataValue - extractRange on a Float Array" time="0.0010" classname="DataValue - extractRange on a Float Array">
    </testcase>
    <testcase name="DataValue DataValue - extractRange on a String" time="0.0000" classname="DataValue - extractRange on a String">
    </testcase>
    <testcase name="DataValue DataValue - extractRange on a String with StatusCode != Good - issue #635" time="0.0000" classname="DataValue - extractRange on a String with StatusCode != Good - issue #635">
    </testcase>
    <testcase name="DataValue DataValue - extractRange on a String with StatusCode != Good and invalid range - issue #635" time="0.0000" classname="DataValue - extractRange on a String with StatusCode != Good and invalid range - issue #635">
    </testcase>
    <testcase name="DataValue DataValue - extractRange on a ByteString" time="0.0020" classname="DataValue - extractRange on a ByteString">
    </testcase>
    <testcase name="DataValue DataValue - extractRange on a ByteString (null value)" time="0.0000" classname="DataValue - extractRange on a ByteString (null value)">
    </testcase>
    <testcase name="DataValue DataValue - extractRange on a Array of ByteString" time="0.0010" classname="DataValue - extractRange on a Array of ByteString">
    </testcase>
    <testcase name="DataValue DataValue - extractRange on a Matrix of ByteString" time="0.0000" classname="DataValue - extractRange on a Matrix of ByteString">
    </testcase>
    <testcase name="DataValue DataValue - extractRange on invalid range - edge case" time="0.0010" classname="DataValue - extractRange on invalid range - edge case">
    </testcase>
    <testcase name="DataValue should convert a DataValue to a JSON Object" time="0.0020" classname="should convert a DataValue to a JSON Object">
    </testcase>
    <testcase name="DataValue should convert a DataValue with ExtensionObject to JSON" time="0.0000" classname="should convert a DataValue with ExtensionObject to JSON">
    </testcase>
  </testsuite>
  <testsuite name="Cloning a DataValue" timestamp="2021-02-09T06:56:50" tests="10" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-value\test\test_datavalue.js" time="0.0030" failures="0">
    <testcase name="DataValue Cloning a DataValue should copy construct a DataValue with a simple Variant" time="0.0010" classname="should copy construct a DataValue with a simple Variant">
    </testcase>
    <testcase name="DataValue Cloning a DataValue should copy construct a DataValue with a variant array" time="0.0000" classname="should copy construct a DataValue with a variant array">
    </testcase>
    <testcase name="DataValue Cloning a DataValue should copy construct a DataValue with a variant array of ByteString" time="0.0010" classname="should copy construct a DataValue with a variant array of ByteString">
    </testcase>
    <testcase name="DataValue Cloning a DataValue should copy construct a DataValue with a variant containing a extension object" time="0.0000" classname="should copy construct a DataValue with a variant containing a extension object">
    </testcase>
    <testcase name="DataValue Cloning a DataValue should copy construct a DataValue with a variant containing a extension object array" time="0.0000" classname="should copy construct a DataValue with a variant containing a extension object array">
    </testcase>
    <testcase name="DataValue Cloning a DataValue should clone a DataValue with a simple Variant" time="0.0010" classname="should clone a DataValue with a simple Variant">
    </testcase>
    <testcase name="DataValue Cloning a DataValue should clone a DataValue with a variant array" time="0.0000" classname="should clone a DataValue with a variant array">
    </testcase>
    <testcase name="DataValue Cloning a DataValue should clone a DataValue with a variant array of ByteString" time="0.0000" classname="should clone a DataValue with a variant array of ByteString">
    </testcase>
    <testcase name="DataValue Cloning a DataValue should clone a DataValue with a variant containing a extension object" time="0.0000" classname="should clone a DataValue with a variant containing a extension object">
    </testcase>
    <testcase name="DataValue Cloning a DataValue should clone a DataValue with a variant containing a extension object array" time="0.0000" classname="should clone a DataValue with a variant containing a extension object array">
    </testcase>
  </testsuite>
  <testsuite name="DataValue with Limit bits" timestamp="2021-02-09T06:56:50" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-value\test\test_issue_527.js" time="0.0050" failures="0">
    <testcase name="DataValue with Limit bits should handle a DataValue with Overflow | InfoTypeDataValue " time="0.0010" classname="should handle a DataValue with Overflow | InfoTypeDataValue ">
    </testcase>
    <testcase name="DataValue with Limit bits should handle a DataValue with statusCode Good + LimitLow " time="0.0010" classname="should handle a DataValue with statusCode Good + LimitLow ">
    </testcase>
    <testcase name="DataValue with Limit bits should handle a DataValue with statusCode Good + LimitHigh " time="0.0020" classname="should handle a DataValue with statusCode Good + LimitHigh ">
    </testcase>
    <testcase name="DataValue with Limit bits should handle a DataValue with statusCode Good + LimitConstant " time="0.0000" classname="should handle a DataValue with statusCode Good + LimitConstant ">
    </testcase>
    <testcase name="DataValue with Limit bits should handle a DataValue with statusCode Good + extra bits = 1024 " time="0.0010" classname="should handle a DataValue with statusCode Good + extra bits = 1024 ">
    </testcase>
    <testcase name="DataValue with Limit bits should handle a DataValue that has a undefined statusCode" time="0.0000" classname="should handle a DataValue that has a undefined statusCode">
    </testcase>
  </testsuite>
  <testsuite name="TimestampsToReturn" timestamp="2021-02-09T06:56:50" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-data-value\test\test_timestamps_to_return.js" time="0.0000" failures="0">
    <testcase name="TimestampsToReturn should create an invalid timestampsToReturn" time="0.0000" classname="should create an invalid timestampsToReturn">
    </testcase>
  </testsuite>
  <testsuite name="Benchmarking javascript clock" timestamp="2021-02-09T06:56:50" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-date-time\test\test_clock_performance.js" time="7.2950" failures="0">
    <testcase name="Benchmarking javascript clock should check which of  new Date() or process high is faster" time="5.4960" classname="should check which of  new Date() or process high is faster">
    </testcase>
    <testcase name="Benchmarking javascript clock Math.floor alternative" time="1.7990" classname="Math.floor alternative">
    </testcase>
  </testsuite>
  <testsuite name="testing clock getCurrentClock" timestamp="2021-02-09T06:56:58" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-date-time\test\test_clock_performance.js" time="0.0520" failures="0">
    <testcase name="testing clock getCurrentClock should be strictly increasing" time="0.0390" classname="should be strictly increasing">
    </testcase>
    <testcase name="testing clock getCurrentClock should return a timestamp Date inline with new Date() " time="0.0130" classname="should return a timestamp Date inline with new Date() ">
    </testcase>
  </testsuite>
  <testsuite name="check OPCUA Date conversion version 0" timestamp="2021-02-09T06:56:58" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-date-time\test\test_date_to_64bits_conversion.js" time="0.0010" failures="0">
    <testcase name="check OPCUA Date conversion version 0 should convert date in 2014 " time="0.0010" classname="should convert date in 2014 ">
    </testcase>
    <testcase name="check OPCUA Date conversion version 0 dateToHundredNanoSecondFrom1601 should return 0 for 1st of January 1601" time="0.0000" classname="dateToHundredNanoSecondFrom1601 should return 0 for 1st of January 1601">
    </testcase>
    <testcase name="check OPCUA Date conversion version 0 dateToHundredNanoSecondFrom1601 should return xx nanos for 2st of January 1601" time="0.0000" classname="dateToHundredNanoSecondFrom1601 should return xx nanos for 2st of January 1601">
    </testcase>
    <testcase name="check OPCUA Date conversion version 0 hundredNanoSecondFrom1601ToDate and dateToHundredNanoSecondFrom1601 " time="0.0000" classname="hundredNanoSecondFrom1601ToDate and dateToHundredNanoSecondFrom1601 ">
    </testcase>
  </testsuite>
  <testsuite name="check OPCUA Date conversion version 2" timestamp="2021-02-09T06:56:58" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-date-time\test\test_date_to_64bits_conversion.js" time="0.0010" failures="0">
    <testcase name="check OPCUA Date conversion version 2 should verify that Date.getTime returns the number of millisecond since January, 1st 1970 UTC" time="0.0010" classname="should verify that Date.getTime returns the number of millisecond since January, 1st 1970 UTC">
    </testcase>
    <testcase name="check OPCUA Date conversion version 2 bn_dateToHundredNanoSecondFrom1601 should return n=(number of nanosecond in a single day) for January, 2nd 1601 00:00:00 UTC" time="0.0000" classname="bn_dateToHundredNanoSecondFrom1601 should return n=(number of nanosecond in a single day) for January, 2nd 1601 00:00:00 UTC">
    </testcase>
    <testcase name="check OPCUA Date conversion version 2 should decode 0xd353c292 0x01cef70c DateTime as 2013-12-12T07:36:09.747Z" time="0.0000" classname="should decode 0xd353c292 0x01cef70c DateTime as 2013-12-12T07:36:09.747Z">
    </testcase>
    <testcase name="check OPCUA Date conversion version 2 should handle 100 nanoseconds" time="0.0000" classname="should handle 100 nanoseconds">
    </testcase>
  </testsuite>
  <testsuite name="Benchmarking Date conversion routines" timestamp="2021-02-09T06:56:58" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-date-time\test\test_date_to_64bits_conversion.js" time="4.2040" failures="0">
    <testcase name="Benchmarking Date conversion routines should check that slow and fast method produce same result" time="0.0090" classname="should check that slow and fast method produce same result">
    </testcase>
    <testcase name="Benchmarking Date conversion routines should ensure that fast method (bn_dateToHundredNanoSecondFrom1601) is faster than slow method" time="1.8650" classname="should ensure that fast method (bn_dateToHundredNanoSecondFrom1601) is faster than slow method">
    </testcase>
    <testcase name="Benchmarking Date conversion routines should ensure that fast method (bn_hundredNanoSecondFrom1601ToDate) is faster than slow method" time="2.3110" classname="should ensure that fast method (bn_hundredNanoSecondFrom1601ToDate) is faster than slow method">
    </testcase>
    <testcase name="Benchmarking Date conversion routines should convert any random date" time="0.0190" classname="should convert any random date">
    </testcase>
    <testcase name="Benchmarking Date conversion routines bn_dateToHundredNanoSecondFrom1601 should return 0 for January, 1st 1601 00:00:00 UTC" time="0.0000" classname="bn_dateToHundredNanoSecondFrom1601 should return 0 for January, 1st 1601 00:00:00 UTC">
    </testcase>
    <testcase name="Benchmarking Date conversion routines bn_dateToHundredNanoSecondFrom1601 should return 0x019DB1DE-D53E8000 = 116444736000000000 for January, 1st 1970 00:00:00 UTC" time="0.0000" classname="bn_dateToHundredNanoSecondFrom1601 should return 0x019DB1DE-D53E8000 = 116444736000000000 for January, 1st 1970 00:00:00 UTC">
    </testcase>
  </testsuite>
  <testsuite name="understanding Javascript date" timestamp="2021-02-09T06:57:02" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-date-time\test\test_date_to_64bits_conversion.js" time="0.5030" failures="0">
    <testcase name="understanding Javascript date should check that javascript doesn&apos;t deal with leap seconds." time="0.0000" classname="should check that javascript doesn&apos;t deal with leap seconds.">
    </testcase>
    <testcase name="understanding Javascript date should have a expected number of millisecond in a year span (without leap seconds)" time="0.0010" classname="should have a expected number of millisecond in a year span (without leap seconds)">
    </testcase>
    <testcase name="understanding Javascript date should convert a time with picoseconds into 64bit work" time="0.0020" classname="should convert a time with picoseconds into 64bit work">
    </testcase>
    <testcase name="understanding Javascript date ZZ should convert a time with picoseconds into 64bit work" time="0.0000" classname="ZZ should convert a time with picoseconds into 64bit work">
    </testcase>
    <testcase name="understanding Javascript date ZZ1 should convert a time with picoseconds" time="0.0000" classname="ZZ1 should convert a time with picoseconds">
    </testcase>
    <testcase name="understanding Javascript date ZZ2 should convert a time with picoseconds" time="0.0000" classname="ZZ2 should convert a time with picoseconds">
    </testcase>
    <testcase name="understanding Javascript date ZZ3 should convert a time with picoseconds" time="0.0000" classname="ZZ3 should convert a time with picoseconds">
    </testcase>
    <testcase name="understanding Javascript date ZZ12" time="0.0000" classname="ZZ12">
    </testcase>
    <testcase name="understanding Javascript date should convert a time to 100nano and back" time="0.5000" classname="should convert a time to 100nano and back">
    </testcase>
  </testsuite>
  <testsuite name="encode/decode DateTime" timestamp="2021-02-09T06:57:02" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-date-time\test\test_encode_decode.js" time="0.0010" failures="0">
    <testcase name="encode/decode DateTime should encode and decode min date" time="0.0010" classname="should encode and decode min date">
    </testcase>
    <testcase name="encode/decode DateTime should encode and decode null date" time="0.0000" classname="should encode and decode null date">
    </testcase>
    <testcase name="encode/decode DateTime (coerceDateTime(null))" time="0.0000" classname="(coerceDateTime(null))">
    </testcase>
    <testcase name="encode/decode DateTime (coerceDateTime(new Date()))" time="0.0000" classname="(coerceDateTime(new Date()))">
    </testcase>
    <testcase name="encode/decode DateTime (coerceDateTime(" time="0.0000" classname="(coerceDateTime(">
    </testcase>
  </testsuite>
  <testsuite name="getCurrentClockWithJavascriptDate" timestamp="2021-02-09T06:57:02" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-date-time\test\test_get_current_clock.js" time="0.1050" failures="0">
    <testcase name="getCurrentClockWithJavascriptDate should provide a different picoseconds is time is similar" time="0.0000" classname="should provide a different picoseconds is time is similar">
    </testcase>
    <testcase name="getCurrentClockWithJavascriptDate with sinon spy()" time="0.1030" classname="with sinon spy()">
    </testcase>
    <testcase name="getCurrentClockWithJavascriptDate with sinon spy()" time="0.0010" classname="with sinon spy()">
    </testcase>
    <testcase name="getCurrentClockWithJavascriptDate coerceClock" time="0.0010" classname="coerceClock">
    </testcase>
    <testcase name="getCurrentClockWithJavascriptDate isMinDate" time="0.0000" classname="isMinDate">
    </testcase>
  </testsuite>
  <testsuite name="Int64 Arithmetic" timestamp="2021-02-09T06:57:02" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-date-time\test\test_int64_arithmetics.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="installPeriodicClockAdjustment" timestamp="2021-02-09T06:57:02" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-date-time\test\test_periodic_clock_adjustment.js" time="0.2160" failures="0">
    <testcase name="installPeriodicClockAdjustment should install and uninstall" time="0.0000" classname="should install and uninstall">
    </testcase>
    <testcase name="installPeriodicClockAdjustment should install and uninstall multiple time" time="0.0010" classname="should install and uninstall multiple time">
    </testcase>
    <testcase name="installPeriodicClockAdjustment should adjust clock" time="0.2150" classname="should adjust clock">
    </testcase>
  </testsuite>
  <testsuite name="dumpIf" timestamp="2021-02-09T06:57:03" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-debug\test\test_dump_if.js" time="0.0040" failures="0">
    <testcase name="dumpIf dumpIf" time="0.0040" classname="dumpIf">
    </testcase>
  </testsuite>
  <testsuite name="testing redirectToFile" timestamp="2021-02-09T06:57:03" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-debug\test\test_redirect_to_file.js" time="0.0070" failures="0">
    <testcase name="testing redirectToFile should redirectToFile with a sync function" time="0.0020" classname="should redirectToFile with a sync function">
    </testcase>
    <testcase name="testing redirectToFile should redirectToFile with a  callback" time="0.0030" classname="should redirectToFile with a  callback">
    </testcase>
    <testcase name="testing redirectToFile should redirectToFile with a sync function" time="0.0000" classname="should redirectToFile with a sync function">
    </testcase>
    <testcase name="testing redirectToFile should redirectToFile with a asynchronous function" time="0.0020" classname="should redirectToFile with a asynchronous function">
    </testcase>
  </testsuite>
  <testsuite name="testing DiscoveryServer - Umbrella " timestamp="2021-02-09T06:57:03" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="DS5- testing OPCUA-Service Discovery Endpoint" timestamp="2021-02-09T06:57:03" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2720" failures="0">
    <testcase name="testing DiscoveryServer - Umbrella  DS5- testing OPCUA-Service Discovery Endpoint should answer a FindServers Request - without filters" time="0.0880" classname="should answer a FindServers Request - without filters">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  DS5- testing OPCUA-Service Discovery Endpoint should answer a FindServers Request - with filters" time="0.0580" classname="should answer a FindServers Request - with filters">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  DS5- testing OPCUA-Service Discovery Endpoint should answer FindServers Request and apply serverUris filter" time="0.0630" classname="should answer FindServers Request and apply serverUris filter">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  DS5- testing OPCUA-Service Discovery Endpoint should answer FindServers Request and apply endpointUri filter" time="0.0630" classname="should answer FindServers Request and apply endpointUri filter">
    </testcase>
  </testsuite>
  <testsuite name="NodeRed -  testing frequent server restart within same process" timestamp="2021-02-09T06:57:04" tests="14" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="47.9280" failures="0">
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T0a- should perform start/stop cycle efficiently " time="1.5070" classname="T0a- should perform start/stop cycle efficiently ">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T0b- should perform start/stop cycle efficiently " time="0.6130" classname="T0b- should perform start/stop cycle efficiently ">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T0c- should cancel a client that is attempting a connection on an existing server" time="0.8160" classname="T0c- should cancel a client that is attempting a connection on an existing server">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T0d- should cancel a client that cannot connect - on standard LocalDiscoveryServer" time="0.6260" classname="T0d- should cancel a client that cannot connect - on standard LocalDiscoveryServer">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T0f- should cancel a client that cannot connect - on specific LocalDiscoveryServer" time="0.6350" classname="T0f- should cancel a client that cannot connect - on specific LocalDiscoveryServer">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T0g- registration manager as a standalone object 2/2" time="0.0060" classname="T0g- registration manager as a standalone object 2/2">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T0h- registration manager as a standalone object 2/2" time="0.0050" classname="T0h- registration manager as a standalone object 2/2">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T1- should perform start/stop cycle efficiently " time="7.2440" classname="T1- should perform start/stop cycle efficiently ">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T2- should perform start/stop cycle efficiently even with many connected clients and server close before clients" time="10.7760" classname="T2- should perform start/stop cycle efficiently even with many connected clients and server close before clients">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T3- should perform start/stop cycle efficiently even with many connected clients and clients close before server" time="7.2490" classname="T3- should perform start/stop cycle efficiently even with many connected clients and clients close before server">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T4- should perform start/stop long cycle efficiently even with many connected clients and clients close before server" time="14.2280" classname="T4- should perform start/stop long cycle efficiently even with many connected clients and clients close before server">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T5- NR2 should not crash when a server that failed to start is shot down" time="1.4950" classname="T5- NR2 should not crash when a server that failed to start is shot down">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T6- should not crash when we start two servers and stop the second server first" time="1.3080" classname="T6- should not crash when we start two servers and stop the second server first">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  NodeRed -  testing frequent server restart within same process T7- should not crash when we start two servers and stop using the same order as we started them" time="1.4200" classname="T7- should not crash when we start two servers and stop using the same order as we started them">
    </testcase>
  </testsuite>
  <testsuite name="DS6- Discovery server" timestamp="2021-02-09T06:57:52" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="17.6790" failures="0">
    <testcase name="testing DiscoveryServer - Umbrella  DS6- Discovery server DS6-1 a server shall register itself to the LDS when the LDS comes online" time="3.0230" classname="DS6-1 a server shall register itself to the LDS when the LDS comes online">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  DS6- Discovery server DS6-2 a server shall register itself on a regular basic to the LDS" time="1.1600" classname="DS6-2 a server shall register itself on a regular basic to the LDS">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  DS6- Discovery server DS6-3 a server shall try to register itself even if discovery server is not available" time="11.2560" classname="DS6-3 a server shall try to register itself even if discovery server is not available">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  DS6- Discovery server DS6-4 a server shall be able not to register itself to the LDS if needed to be hidden" time="0.6150" classname="DS6-4 a server shall be able not to register itself to the LDS if needed to be hidden">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  DS6- Discovery server DS6-5 a server (that want to register itself to the LDS) shall be able to start promptly even if the LDS is no available" time="1.6250" classname="DS6-5 a server (that want to register itself to the LDS) shall be able to start promptly even if the LDS is no available">
    </testcase>
  </testsuite>
  <testsuite name="DS7- Discovery Server 2" timestamp="2021-02-09T06:58:11" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.7090" failures="0">
    <testcase name="testing DiscoveryServer - Umbrella  DS7- Discovery Server 2 DS7-1 server shall not struggle to start if discovery server is not available" time="0.7090" classname="DS7-1 server shall not struggle to start if discovery server is not available">
    </testcase>
  </testsuite>
  <testsuite name="DS1 - DiscoveryServer1" timestamp="2021-02-09T06:58:11" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2420" failures="0">
    <testcase name="testing DiscoveryServer - Umbrella  DS1 - DiscoveryServer1 should fail to register server if discovery url is not specified (Bad_DiscoveryUrlMissing)" time="0.0980" classname="should fail to register server if discovery url is not specified (Bad_DiscoveryUrlMissing)">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  DS1 - DiscoveryServer1 should fail to register server to the discover server if server type is Client (BadInvalidArgument)" time="0.0840" classname="should fail to register server to the discover server if server type is Client (BadInvalidArgument)">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  DS1 - DiscoveryServer1 should fail to register server to the discover server if server name array is empty (BadServerNameMissing)" time="0.0600" classname="should fail to register server to the discover server if server name array is empty (BadServerNameMissing)">
    </testcase>
  </testsuite>
  <testsuite name="DS2 - DiscoveryServer2" timestamp="2021-02-09T06:58:12" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.9440" failures="0">
    <testcase name="testing DiscoveryServer - Umbrella  DS2 - DiscoveryServer2 DS2-A should register server to the discover server 2" time="0.9440" classname="DS2-A should register server to the discover server 2">
    </testcase>
  </testsuite>
  <testsuite name="DS3 - DiscoveryServer3 - many server" timestamp="2021-02-09T06:58:13" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="5.1260" failures="0">
    <testcase name="testing DiscoveryServer - Umbrella  DS3 - DiscoveryServer3 - many server DS3-0 checking certificates" time="0.0060" classname="DS3-0 checking certificates">
    </testcase>
    <testcase name="testing DiscoveryServer - Umbrella  DS3 - DiscoveryServer3 - many server DS3-1 a discovery server shall be able to expose many registered servers" time="5.1200" classname="DS3-1 a discovery server shall be able to expose many registered servers">
    </testcase>
  </testsuite>
  <testsuite name="DS4 - Many discovery servers sharing ServerOnNetworks list" timestamp="2021-02-09T06:58:19" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="5.0520" failures="0">
    <testcase name="testing DiscoveryServer - Umbrella  DS4 - Many discovery servers sharing ServerOnNetworks list should register server to the discover server 1" time="5.0520" classname="should register server to the discover server 1">
    </testcase>
  </testsuite>
  <testsuite name="ADI - Testing a server that exposes Analyser Devices" timestamp="2021-02-09T06:58:24" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.3730" failures="0">
    <testcase name="ADI - Testing a server that exposes Analyser Devices should have a DeviceType in DI namespace" time="0.0000" classname="should have a DeviceType in DI namespace">
    </testcase>
    <testcase name="ADI - Testing a server that exposes Analyser Devices should instantiate a DeviceType" time="0.0020" classname="should instantiate a DeviceType">
    </testcase>
    <testcase name="ADI - Testing a server that exposes Analyser Devices should instantiate a AnalyserChannelType" time="0.0130" classname="should instantiate a AnalyserChannelType">
    </testcase>
    <testcase name="ADI - Testing a server that exposes Analyser Devices should have an AnalyserDeviceType" time="0.0000" classname="should have an AnalyserDeviceType">
    </testcase>
    <testcase name="ADI - Testing a server that exposes Analyser Devices should have an AnalyserDeviceType v2" time="0.0000" classname="should have an AnalyserDeviceType v2">
    </testcase>
    <testcase name="ADI - Testing a server that exposes Analyser Devices should create a analyser device" time="0.0060" classname="should create a analyser device">
    </testcase>
    <testcase name="ADI - Testing a server that exposes Analyser Devices should have an AnalyserDeviceStateMachineType" time="0.3110" classname="should have an AnalyserDeviceStateMachineType">
    </testcase>
    <testcase name="ADI - Testing a server that exposes Analyser Devices ZZ1 should retrieve the AnalyserChannel_OperatingModeSubStateMachineType" time="0.0300" classname="ZZ1 should retrieve the AnalyserChannel_OperatingModeSubStateMachineType">
    </testcase>
    <testcase name="ADI - Testing a server that exposes Analyser Devices ZZ2 should retrieve the AnalyserChannel_OperatingModeExecuteSubStateMachineType" time="0.0110" classname="ZZ2 should retrieve the AnalyserChannel_OperatingModeExecuteSubStateMachineType">
    </testcase>
  </testsuite>
  <testsuite name="Server with companion specs" timestamp="2021-02-09T06:58:26" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.9310" failures="0">
    <testcase name="Server with companion specs commercialKitchenEquipment" time="0.9310" classname="commercialKitchenEquipment">
    </testcase>
  </testsuite>
  <testsuite name="testing monitoring Executable flags on methods" timestamp="2021-02-09T06:58:26" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.4910" failures="0">
    <testcase name="testing monitoring Executable flags on methods #187 ...... " time="1.4910" classname="#187 ...... ">
    </testcase>
  </testsuite>
  <testsuite name="building server with an AlternateName" timestamp="2021-02-09T06:58:29" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1230" failures="0">
    <testcase name="building server with an AlternateName should not confuse endpoints" time="0.1230" classname="should not confuse endpoints">
    </testcase>
  </testsuite>
  <testsuite name="#904 - Client should connect to server that do not provide ServerNonce" timestamp="2021-02-09T06:58:29" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2950" failures="0">
    <testcase name="#904 - Client should connect to server that do not provide ServerNonce #904-1 Client should allow unsecure connection with anonymous user when serverNonce is specified " time="0.0760" classname="#904-1 Client should allow unsecure connection with anonymous user when serverNonce is specified ">
    </testcase>
    <testcase name="#904 - Client should connect to server that do not provide ServerNonce #904-1 Client should allow unsecure connection with anonymous user when  serverNonce==null " time="0.0710" classname="#904-1 Client should allow unsecure connection with anonymous user when  serverNonce==null ">
    </testcase>
    <testcase name="#904 - Client should connect to server that do not provide ServerNonce #904-2 Client should allow unsecure connection with anonymous user when serverNonce is a null Buffer" time="0.0590" classname="#904-2 Client should allow unsecure connection with anonymous user when serverNonce is a null Buffer">
    </testcase>
    <testcase name="#904 - Client should connect to server that do not provide ServerNonce #904-3 Client should NOT allow unsecure connection when userName Identity is when serverNonce = null (because password would be sent un-encrypted)" time="0.0140" classname="#904-3 Client should NOT allow unsecure connection when userName Identity is when serverNonce = null (because password would be sent un-encrypted)">
    </testcase>
    <testcase name="#904 - Client should connect to server that do not provide ServerNonce #904-4 Client should NOT allow unsecure connection when userName Identity is when serverNonce = emptyBuffer (because password would be sent un-encrypted)" time="0.0110" classname="#904-4 Client should NOT allow unsecure connection when userName Identity is when serverNonce = emptyBuffer (because password would be sent un-encrypted)">
    </testcase>
    <testcase name="#904 - Client should connect to server that do not provide ServerNonce #904-5 Client should allow unsecure connection with userName Identity  when serverNonce is specified " time="0.0640" classname="#904-5 Client should allow unsecure connection with userName Identity  when serverNonce is specified ">
    </testcase>
  </testsuite>
  <testsuite name="testing AnalogItem on client side" timestamp="2021-02-09T06:58:30" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0270" failures="0">
    <testcase name="testing AnalogItem on client side readUAAnalogItem should extract all properties of a UAAnalogItem " time="0.0140" classname="readUAAnalogItem should extract all properties of a UAAnalogItem ">
    </testcase>
    <testcase name="testing AnalogItem on client side readUAAnalogItem should return an error if not doesn&apos;t exist" time="0.0040" classname="readUAAnalogItem should return an error if not doesn&apos;t exist">
    </testcase>
    <testcase name="testing AnalogItem on client side should read the EURange property of an analog item" time="0.0090" classname="should read the EURange property of an analog item">
    </testcase>
  </testsuite>
  <testsuite name="testing the server ability to deny client session request (server with maxAllowedSessionNumber = 1)" timestamp="2021-02-09T06:58:31" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.3340" failures="0">
    <testcase name="testing the server ability to deny client session request (server with maxAllowedSessionNumber = 1) should accept only one session at a time" time="0.3340" classname="should accept only one session at a time">
    </testcase>
  </testsuite>
  <testsuite name="list status codes for input arguments" timestamp="2021-02-09T06:58:32" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0090" failures="0">
    <testcase name="list status codes for input arguments should return no error" time="0.0040" classname="should return no error">
    </testcase>
    <testcase name="list status codes for input arguments should return lib generated error" time="0.0010" classname="should return lib generated error">
    </testcase>
    <testcase name="list status codes for input arguments should return custom error" time="0.0010" classname="should return custom error">
    </testcase>
    <testcase name="list status codes for input arguments should return default status code good if no custom status code is provided for input argument result" time="0.0020" classname="should return default status code good if no custom status code is provided for input argument result">
    </testcase>
    <testcase name="list status codes for input arguments should return custom diagnostic infos" time="0.0010" classname="should return custom diagnostic infos">
    </testcase>
  </testsuite>
  <testsuite name="testing browse &amp; browseNext" timestamp="2021-02-09T06:58:33" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0150" failures="0">
    <testcase name="testing browse &amp; browseNext should browse all references of a node using browse and browseNext" time="0.0070" classname="should browse all references of a node using browse and browseNext">
    </testcase>
    <testcase name="testing browse &amp; browseNext should browse all references using browseAll  " time="0.0080" classname="should browse all references using browseAll  ">
    </testcase>
  </testsuite>
  <testsuite name="NodeCrawlerBase after write" timestamp="2021-02-09T06:58:34" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="5.6030" failures="0">
    <testcase name="NodeCrawlerBase after write should crawl, write to node, and crawl again" time="5.6030" classname="should crawl, write to node, and crawl again">
    </testcase>
  </testsuite>
  <testsuite name="testing Client-Server - Event" timestamp="2021-02-09T06:58:40" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="4.8540" failures="0">
    <testcase name="testing Client-Server - Event TSC-1 should raise a close event once on normal disconnection" time="0.2430" classname="TSC-1 should raise a close event once on normal disconnection">
    </testcase>
    <testcase name="testing Client-Server - Event TSC-2 client (not reconnecting) should raise a close event with an error when server initiates disconnection" time="0.3290" classname="TSC-2 client (not reconnecting) should raise a close event with an error when server initiates disconnection">
    </testcase>
    <testcase name="testing Client-Server - Event TSC-3 client (reconnecting)  should raise a close event with an error when server initiates disconnection (after reconnecting has failed)" time="4.2820" classname="TSC-3 client (reconnecting)  should raise a close event with an error when server initiates disconnection (after reconnecting has failed)">
    </testcase>
  </testsuite>
  <testsuite name="KJH1 testing basic Client-Server communication" timestamp="2021-02-09T06:58:45" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.5130" failures="0">
    <testcase name="KJH1 testing basic Client-Server communication T1 - a client should connect to a server and disconnect " time="0.0490" classname="T1 - a client should connect to a server and disconnect ">
    </testcase>
    <testcase name="KJH1 testing basic Client-Server communication T2 - a server should not accept a connection when the protocol version is incompatible" time="1.0580" classname="T2 - a server should not accept a connection when the protocol version is incompatible">
    </testcase>
    <testcase name="KJH1 testing basic Client-Server communication T3 - a client shall be able to create a session with a anonymous token" time="0.1210" classname="T3 - a client shall be able to create a session with a anonymous token">
    </testcase>
    <testcase name="KJH1 testing basic Client-Server communication T4 - a client shall be able to reconnect if the first connection has failed" time="0.0680" classname="T4 - a client shall be able to reconnect if the first connection has failed">
    </testcase>
    <testcase name="KJH1 testing basic Client-Server communication T5 - a client shall be able to connect &amp; disconnect many times" time="0.1290" classname="T5 - a client shall be able to connect &amp; disconnect many times">
    </testcase>
    <testcase name="KJH1 testing basic Client-Server communication T6 - a client shall raise an error when trying to create a session on an invalid endpoint" time="0.0450" classname="T6 - a client shall raise an error when trying to create a session on an invalid endpoint">
    </testcase>
    <testcase name="KJH1 testing basic Client-Server communication T7 - calling connect on the client twice shall return a error the second time" time="0.0430" classname="T7 - calling connect on the client twice shall return a error the second time">
    </testcase>
  </testsuite>
  <testsuite name="KJH2 testing ability for client to reconnect when server close connection" timestamp="2021-02-09T06:58:47" tests="15" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="123.5070" failures="0">
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR1 - should be possible to reconnect client after the server closed the connection" time="3.0910" classname="TR1 - should be possible to reconnect client after the server closed the connection">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR2 - a client should be able to reconnect automatically to the server when the server restarts after a server failure" time="6.4420" classname="TR2 - a client should be able to reconnect automatically to the server when the server restarts after a server failure">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR2a - a client should be able to reconnect automatically to the server when the server restarts after a server failure" time="12.3270" classname="TR2a - a client should be able to reconnect automatically to the server when the server restarts after a server failure">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR3 - it should be possible to disconnect a client which is in the middle a reconnection sequence" time="4.9280" classname="TR3 - it should be possible to disconnect a client which is in the middle a reconnection sequence">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR4 - it should be possible to disconnect a client which is attempting to establish it&apos;s first connection to a unavailable server" time="4.2760" classname="TR4 - it should be possible to disconnect a client which is attempting to establish it&apos;s first connection to a unavailable server">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR4 - verify that server can suspend socket connection - useful for testing purposes" time="5.0030" classname="TR4 - verify that server can suspend socket connection - useful for testing purposes">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR5 -a client with some active monitoring items should be able to seamlessly reconnect after a connection break - and retrieve missed notification without lost ( Republish)" time="8.2840" classname="TR5 -a client with some active monitoring items should be able to seamlessly reconnect after a connection break - and retrieve missed notification without lost ( Republish)">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR6 -  a client with some active monitoring items should be able to seamlessly reconnect after a very long connection break exceeding subscription lifetime" time="13.3230" classname="TR6 -  a client with some active monitoring items should be able to seamlessly reconnect after a very long connection break exceeding subscription lifetime">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR8 -  disconnecting during connect" time="0.9850" classname="TR8 -  disconnecting during connect">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR9 -  disconnecting during reconnect" time="11.6100" classname="TR9 -  disconnecting during reconnect">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR10 -  a client should notify that the reconnection attempt is taking place with an event" time="6.6090" classname="TR10 -  a client should notify that the reconnection attempt is taking place with an event">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR11-a -  a client with active monitoring should be able to reconnect after a EPIPE connection break cause local socket end has been shut down - no security " time="15.1400" classname="TR11-a -  a client with active monitoring should be able to reconnect after a EPIPE connection break cause local socket end has been shut down - no security ">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR11-b -  a client with active monitoring should be able to reconnect after a EPIPE connection break cause local socket end has been shut down - with secure channel (#390)" time="15.2900" classname="TR11-b -  a client with active monitoring should be able to reconnect after a EPIPE connection break cause local socket end has been shut down - with secure channel (#390)">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR12 -  a client with active monitored item should be able to reconnect and transfer subscriptions when session timeout" time="10.9640" classname="TR12 -  a client with active monitored item should be able to reconnect and transfer subscriptions when session timeout">
    </testcase>
    <testcase name="KJH2 testing ability for client to reconnect when server close connection TR13 - a connected client shall be able to detect when a server has shut down and shall reconnect when server restarts" time="5.2350" classname="TR13 - a connected client shall be able to detect when a server has shut down and shall reconnect when server restarts">
    </testcase>
  </testsuite>
  <testsuite name="Testing client reconnection with crashing server" timestamp="2021-02-09T07:00:51" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="35.8660" failures="0">
    <testcase name="Testing client reconnection with crashing server should reconnection and restore subscriptions when server becomes available again" time="13.3840" classname="should reconnection and restore subscriptions when server becomes available again">
    </testcase>
    <testcase name="Testing client reconnection with crashing server testing reconnection with failFastReconnection strategy #606" time="22.4820" classname="testing reconnection with failFastReconnection strategy #606">
    </testcase>
  </testsuite>
  <testsuite name="GHGL1 - Testing client reconnection with a crashing server that closes the session too early (such as KepwareServerEx6)" timestamp="2021-02-09T07:01:27" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="48.6050" failures="0">
    <testcase name="GHGL1 - Testing client reconnection with a crashing server that closes the session too early (such as KepwareServerEx6) GZZE1 should reconnection and restore subscriptions when server becomes available again" time="12.0810" classname="GZZE1 should reconnection and restore subscriptions when server becomes available again">
    </testcase>
    <testcase name="GHGL1 - Testing client reconnection with a crashing server that closes the session too early (such as KepwareServerEx6) GZZE2 testing reconnection with failFastReconnection strategy #606" time="17.2830" classname="GZZE2 testing reconnection with failFastReconnection strategy #606">
    </testcase>
    <testcase name="GHGL1 - Testing client reconnection with a crashing server that closes the session too early (such as KepwareServerEx6) GZZE3 should reconnect when network is broken" time="19.2410" classname="GZZE3 should reconnect when network is broken">
    </testcase>
  </testsuite>
  <testsuite name="Testing client reconnection with a crashing server that does not implement transferSubscription server (such old Siemens S7)" timestamp="2021-02-09T07:02:16" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="68.4810" failures="0">
    <testcase name="Testing client reconnection with a crashing server that does not implement transferSubscription server (such old Siemens S7) simple_server_that_fails_to_republish.jsHZZE2 - should reconnection and restore subscriptions when server becomes available again" time="13.2560" classname="simple_server_that_fails_to_republish.jsHZZE2 - should reconnection and restore subscriptions when server becomes available again">
    </testcase>
    <testcase name="Testing client reconnection with a crashing server that does not implement transferSubscription server (such old Siemens S7) simple_server_that_fails_to_republish.jsHZZE3 - testing reconnection with failFastReconnection strategy #606" time="21.2210" classname="simple_server_that_fails_to_republish.jsHZZE3 - testing reconnection with failFastReconnection strategy #606">
    </testcase>
    <testcase name="Testing client reconnection with a crashing server that does not implement transferSubscription server (such old Siemens S7) simple_server_with_no_transferSubscription.jsHZZE2 - should reconnection and restore subscriptions when server becomes available again" time="12.0580" classname="simple_server_with_no_transferSubscription.jsHZZE2 - should reconnection and restore subscriptions when server becomes available again">
    </testcase>
    <testcase name="Testing client reconnection with a crashing server that does not implement transferSubscription server (such old Siemens S7) simple_server_with_no_transferSubscription.jsHZZE3 - testing reconnection with failFastReconnection strategy #606" time="21.9460" classname="simple_server_with_no_transferSubscription.jsHZZE3 - testing reconnection with failFastReconnection strategy #606">
    </testcase>
  </testsuite>
  <testsuite name="Testing Server and Client diagnostic facilities" timestamp="2021-02-09T07:03:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2320" failures="0">
    <testcase name="Testing Server and Client diagnostic facilities MM01- Server should keep track of transaction statistics" time="0.2320" classname="MM01- Server should keep track of transaction statistics">
    </testcase>
  </testsuite>
  <testsuite name="testing extension object with client residing on a different process than the server process" timestamp="2021-02-09T07:03:26" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2350" failures="0">
    <testcase name="testing extension object with client residing on a different process than the server process should read the MyStructureDataType definition" time="0.2350" classname="should read the MyStructureDataType definition">
    </testcase>
  </testsuite>
  <testsuite name="testing Client-Server with UserName/Password identity token" timestamp="2021-02-09T07:03:29" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2030" failures="0">
    <testcase name="testing Client-Server with UserName/Password identity token Anonymous user should not be able to read or to write V1 node value" time="0.2030" classname="Anonymous user should not be able to read or to write V1 node value">
    </testcase>
  </testsuite>
  <testsuite name="testing Client-Server with UserName/Password identity token" timestamp="2021-02-09T07:03:31" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2340" failures="0">
    <testcase name="testing Client-Server with UserName/Password identity token Operator user should be able to read but not to write V1 node value" time="0.2340" classname="Operator user should be able to read but not to write V1 node value">
    </testcase>
  </testsuite>
  <testsuite name="Issue #896: Check Authorization for UAMethods" timestamp="2021-02-09T07:03:31" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1760" failures="0">
    <testcase name="Issue #896: Check Authorization for UAMethods should allow Gandalf to execute the method" time="0.1020" classname="should allow Gandalf to execute the method">
    </testcase>
    <testcase name="Issue #896: Check Authorization for UAMethods should deny Frodo to execute the method" time="0.0740" classname="should deny Frodo to execute the method">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #574" timestamp="2021-02-09T07:03:32" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1160" failures="0">
    <testcase name="Testing bug #574 should create a session with user/password on unsecured connection" time="0.1160" classname="should create a session with user/password on unsecured connection">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #635" timestamp="2021-02-09T07:03:33" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="5.2360" failures="0">
    <testcase name="Testing bug #635 should handle statusCode according to specification when monitoring a String Variable" time="5.2360" classname="should handle statusCode according to specification when monitoring a String Variable">
    </testcase>
  </testsuite>
  <testsuite name="testing server with low maxNodesPerRead and maxNodesPerBrowse" timestamp="2021-02-09T07:03:39" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="4.4070" failures="0">
    <testcase name="testing server with low maxNodesPerRead and maxNodesPerBrowse should be possible to customize serverCapabilities.operationLimits at construction time" time="0.0000" classname="should be possible to customize serverCapabilities.operationLimits at construction time">
    </testcase>
    <testcase name="testing server with low maxNodesPerRead and maxNodesPerBrowse server should provide OperationLimits_MaxNodesPerRead node " time="0.1180" classname="server should provide OperationLimits_MaxNodesPerRead node ">
    </testcase>
    <testcase name="testing server with low maxNodesPerRead and maxNodesPerBrowse server should return BadTooManyOperations when nodesToRead exceed MaxNodesPerRead in read operation " time="0.0650" classname="server should return BadTooManyOperations when nodesToRead exceed MaxNodesPerRead in read operation ">
    </testcase>
    <testcase name="testing server with low maxNodesPerRead and maxNodesPerBrowse server should return BadTooManyOperations when browseRequest exceed MaxNodesPerBrowse in browse operation " time="0.0910" classname="server should return BadTooManyOperations when browseRequest exceed MaxNodesPerBrowse in browse operation ">
    </testcase>
    <testcase name="testing server with low maxNodesPerRead and maxNodesPerBrowse server should return BadTooManyOperations when translate exceed maxNodesPerTranslateBrowsePathsToNodeIds in translate operation " time="0.0700" classname="server should return BadTooManyOperations when translate exceed maxNodesPerTranslateBrowsePathsToNodeIds in translate operation ">
    </testcase>
    <testcase name="testing server with low maxNodesPerRead and maxNodesPerBrowse crawler shall work even if server has a low limit the number of node in Read and Browse request" time="4.0630" classname="crawler shall work even if server has a low limit the number of node in Read and Browse request">
    </testcase>
  </testsuite>
  <testsuite name="AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device" timestamp="2021-02-09T07:03:44" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.3550" failures="0">
    <testcase name="AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device MIEO-1 - a client should not receive opaque structure when monitoring extension objects" time="0.6800" classname="MIEO-1 - a client should not receive opaque structure when monitoring extension objects">
    </testcase>
    <testcase name="AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device MIEO-2 - a client should not receive opaque structure when monitoring extension objects" time="0.6750" classname="MIEO-2 - a client should not receive opaque structure when monitoring extension objects">
    </testcase>
  </testsuite>
  <testsuite name="testing client Proxy" timestamp="2021-02-09T07:03:46" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="8.1180" failures="0">
    <testcase name="testing client Proxy client should expose a nice little handy javascript object that proxies the HVAC UAObject" time="0.1590" classname="client should expose a nice little handy javascript object that proxies the HVAC UAObject">
    </testcase>
    <testcase name="testing client Proxy client should expose a nice little handy javascript object that proxies the server UAObject" time="3.4590" classname="client should expose a nice little handy javascript object that proxies the server UAObject">
    </testcase>
    <testcase name="testing client Proxy AA one can subscribe to proxy object property change" time="4.1970" classname="AA one can subscribe to proxy object property change">
    </testcase>
    <testcase name="testing client Proxy ZZ1 should expose a SubscriptionDiagnostics in Server.ServerDiagnostics.SubscriptionDiagnosticsArray" time="0.3030" classname="ZZ1 should expose a SubscriptionDiagnostics in Server.ServerDiagnostics.SubscriptionDiagnosticsArray">
    </testcase>
  </testsuite>
  <testsuite name="testing client Proxy State Machine" timestamp="2021-02-09T07:03:55" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1380" failures="0">
    <testcase name="testing client Proxy State Machine Z1a should read a state machine" time="0.0560" classname="Z1a should read a state machine">
    </testcase>
    <testcase name="testing client Proxy State Machine Z1b should read a state machine" time="0.0820" classname="Z1b should read a state machine">
    </testcase>
  </testsuite>
  <testsuite name="testing server dropping session after timeout if no activity has been recorded" timestamp="2021-02-09T07:03:56" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.6050" failures="0">
    <testcase name="testing server dropping session after timeout if no activity has been recorded should not be able to read a node if no session has been opened " time="0.0490" classname="should not be able to read a node if no session has been opened ">
    </testcase>
    <testcase name="testing server dropping session after timeout if no activity has been recorded should denied service call with BadSessionClosed on a timed out session" time="1.5560" classname="should denied service call with BadSessionClosed on a timed out session">
    </testcase>
  </testsuite>
  <testsuite name="Testing Session with user certificate" timestamp="2021-02-09T07:03:57" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0590" failures="0">
    <testcase name="Testing Session with user certificate should create a session with a trusted client certificate" time="0.0120" classname="should create a session with a trusted client certificate">
    </testcase>
    <testcase name="Testing Session with user certificate should fail to create a session with a valid client certificate which is untrusted" time="0.0140" classname="should fail to create a session with a valid client certificate which is untrusted">
    </testcase>
    <testcase name="Testing Session with user certificate should fail to create a session with a invalid client certificate (outofdate)" time="0.0100" classname="should fail to create a session with a invalid client certificate (outofdate)">
    </testcase>
    <testcase name="Testing Session with user certificate should fail to create a session with a invalid client certificate (not_active_yet)" time="0.0110" classname="should fail to create a session with a invalid client certificate (not_active_yet)">
    </testcase>
    <testcase name="Testing Session with user certificate should fail to create a session with a  client certificate and wrong privateKey" time="0.0120" classname="should fail to create a session with a  client certificate and wrong privateKey">
    </testcase>
  </testsuite>
  <testsuite name="Testing a simple server from Server side" timestamp="2021-02-09T07:03:58" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.5790" failures="0">
    <testcase name="Testing a simple server from Server side should have at least one endpoint" time="0.1560" classname="should have at least one endpoint">
    </testcase>
    <testcase name="Testing a simple server from Server side OPCUAServer#getChannels" time="0.2240" classname="OPCUAServer#getChannels">
    </testcase>
    <testcase name="Testing a simple server from Server side should start and shutdown" time="0.1990" classname="should start and shutdown">
    </testcase>
  </testsuite>
  <testsuite name="test readAggregateValue" timestamp="2021-02-09T07:03:58" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.7080" failures="0">
    <testcase name="test readAggregateValue RHA should calculate average" time="0.1710" classname="RHA should calculate average">
    </testcase>
    <testcase name="test readAggregateValue RHA should calculate aggregate(multi) of multiple nodeId" time="0.1820" classname="RHA should calculate aggregate(multi) of multiple nodeId">
    </testcase>
    <testcase name="test readAggregateValue RHV readHistoryValue - form 1" time="0.2080" classname="RHV readHistoryValue - form 1">
    </testcase>
    <testcase name="test readAggregateValue RHV readHistoryValue - form 2" time="0.1470" classname="RHV readHistoryValue - form 2">
    </testcase>
  </testsuite>
  <testsuite name="Test server monitored Item hooks" timestamp="2021-02-09T07:04:00" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.3450" failures="0">
    <testcase name="Test server monitored Item hooks HK1- should call onCreateMonitoredItemHook/onDeleteMonitoredItemHook - terminating subscription" time="0.5020" classname="HK1- should call onCreateMonitoredItemHook/onDeleteMonitoredItemHook - terminating subscription">
    </testcase>
    <testcase name="Test server monitored Item hooks HK2- should call onCreateMonitoredItemHook/onDeleteMonitoredItemHook - not terminating subscription" time="0.3190" classname="HK2- should call onCreateMonitoredItemHook/onDeleteMonitoredItemHook - not terminating subscription">
    </testcase>
    <testcase name="Test server monitored Item hooks HK3- should call onCreateMonitoredItemHook/onDeleteMonitoredItemHook" time="0.2910" classname="HK3- should call onCreateMonitoredItemHook/onDeleteMonitoredItemHook">
    </testcase>
    <testcase name="Test server monitored Item hooks HK4- should call onCreateMonitoredItemHook/onDeleteMonitoredItemHook  when terminating individual monitoredItem" time="0.2330" classname="HK4- should call onCreateMonitoredItemHook/onDeleteMonitoredItemHook  when terminating individual monitoredItem">
    </testcase>
  </testsuite>
  <testsuite name="Testing server shutdown" timestamp="2021-02-09T07:04:02" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="3.6540" failures="0">
    <testcase name="Testing server shutdown should change state and update secondTillShutdown" time="3.6540" classname="should change state and update secondTillShutdown">
    </testcase>
  </testsuite>
  <testsuite name="testing Client - Umbrella-A " timestamp="2021-02-09T07:04:06" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Testing Client Connection " timestamp="2021-02-09T07:04:08" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.5370" failures="0">
    <testcase name="testing Client - Umbrella-A  Testing Client Connection  it should raise an error if connect is called with an empty endpoint" time="0.0080" classname="it should raise an error if connect is called with an empty endpoint">
    </testcase>
    <testcase name="testing Client - Umbrella-A  Testing Client Connection  it should raise an error if connect is called with an invalid endpoint" time="0.0050" classname="it should raise an error if connect is called with an invalid endpoint">
    </testcase>
    <testcase name="testing Client - Umbrella-A  Testing Client Connection  it should raise an error when connect is called while client is already connected" time="0.1470" classname="it should raise an error when connect is called while client is already connected">
    </testcase>
    <testcase name="testing Client - Umbrella-A  Testing Client Connection  it should raise an error when connect is called while client is currently connecting" time="0.0490" classname="it should raise an error when connect is called while client is currently connecting">
    </testcase>
    <testcase name="testing Client - Umbrella-A  Testing Client Connection  it should not raise an error if disconnect is called when client is not connected" time="0.0010" classname="it should not raise an error if disconnect is called when client is not connected">
    </testcase>
    <testcase name="testing Client - Umbrella-A  Testing Client Connection  it should not raise an error if disconnect is called twice " time="0.0450" classname="it should not raise an error if disconnect is called twice ">
    </testcase>
    <testcase name="testing Client - Umbrella-A  Testing Client Connection  it should  raise an warning if sessionTimeout are not compatible with subscription parameters" time="0.2820" classname="it should  raise an warning if sessionTimeout are not compatible with subscription parameters">
    </testcase>
  </testsuite>
  <testsuite name="testing CALL SERVICE on a fake server exposing the temperature device" timestamp="2021-02-09T07:04:08" tests="16" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="2.1980" failures="0">
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q1 should retrieve the inputArgument of a method using a OPCUA transaction getArgumentDefinition" time="0.1290" classname="Q1 should retrieve the inputArgument of a method using a OPCUA transaction getArgumentDefinition">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q2 should return BadNothingToDo when CallRequest has no method to call" time="0.1830" classname="Q2 should return BadNothingToDo when CallRequest has no method to call">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q3-0 should reports inputArgumentResults GOOD when CallRequest input is good" time="0.1120" classname="Q3-0 should reports inputArgumentResults GOOD when CallRequest input is good">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q3-2b should reports inputArgumentResults GOOD when CallRequest input is good" time="0.1220" classname="Q3-2b should reports inputArgumentResults GOOD when CallRequest input is good">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q3-1 should return BadInvalidArgument /  BadTypeMismatch when CallRequest input argument has the wrong DataType" time="0.0970" classname="Q3-1 should return BadInvalidArgument /  BadTypeMismatch when CallRequest input argument has the wrong DataType">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q3-2 should return BadInvalidArgument /  BadTypeMismatch when CallRequest input argument has the wrong ArrayType" time="0.1010" classname="Q3-2 should return BadInvalidArgument /  BadTypeMismatch when CallRequest input argument has the wrong ArrayType">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q3-4 should handle multiple calls" time="0.0980" classname="Q3-4 should handle multiple calls">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q3-5 should return BadTooManyOperations when CallRequest has too many methods to call" time="0.4720" classname="Q3-5 should return BadTooManyOperations when CallRequest has too many methods to call">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q4 should succeed and return BadNodeIdInvalid when CallRequest try to address an node that is not an UAObject" time="0.0980" classname="Q4 should succeed and return BadNodeIdInvalid when CallRequest try to address an node that is not an UAObject">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q5 should succeed and return BadNodeIdUnknown when CallRequest try to address an unknown object" time="0.0980" classname="Q5 should succeed and return BadNodeIdUnknown when CallRequest try to address an unknown object">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q6 should succeed and return BadMethodInvalid when CallRequest try to address an unknwon method on a valid object" time="0.1360" classname="Q6 should succeed and return BadMethodInvalid when CallRequest try to address an unknwon method on a valid object">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q7 should succeed and return BadInvalidArgument when CallRequest has invalid arguments" time="0.1470" classname="Q7 should succeed and return BadInvalidArgument when CallRequest has invalid arguments">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q8 should succeed and return BadTypeMismatch when CallRequest is GetMonitoredItem and has the argument with a wrong dataType " time="0.1100" classname="Q8 should succeed and return BadTypeMismatch when CallRequest is GetMonitoredItem and has the argument with a wrong dataType ">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device Q9 should succeed and return BadSubscriptionId when CallRequest is GetMonitoredItem and has valid arguments but invalid subscriptionId " time="0.0950" classname="Q9 should succeed and return BadSubscriptionId when CallRequest is GetMonitoredItem and has valid arguments but invalid subscriptionId ">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device QA should succeed and return BadArgumentsMissing when CallRequest as a missing argument" time="0.0920" classname="QA should succeed and return BadArgumentsMissing when CallRequest as a missing argument">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device should find the OutputArguments and InputArguments Properties with a translate browse path request (like UAExpert)" time="0.1080" classname="should find the OutputArguments and InputArguments Properties with a translate browse path request (like UAExpert)">
    </testcase>
  </testsuite>
  <testsuite name="GetMonitoredItems" timestamp="2021-02-09T07:04:10" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.5950" failures="0">
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device GetMonitoredItems T1 A client should be able to call the GetMonitoredItems standard OPCUA command, and return BadSubscriptionId if input args subscriptionId is invalid " time="0.0850" classname="T1 A client should be able to call the GetMonitoredItems standard OPCUA command, and return BadSubscriptionId if input args subscriptionId is invalid ">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device GetMonitoredItems T2 A client should be able to call the GetMonitoredItems standard OPCUA command, with a valid subscriptionId and no monitored Item" time="0.1160" classname="T2 A client should be able to call the GetMonitoredItems standard OPCUA command, with a valid subscriptionId and no monitored Item">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device GetMonitoredItems T3 A client should be able to call the GetMonitoredItems standard OPCUA command, with a valid subscriptionId and one monitored Item" time="0.2470" classname="T3 A client should be able to call the GetMonitoredItems standard OPCUA command, with a valid subscriptionId and one monitored Item">
    </testcase>
    <testcase name="testing Client - Umbrella-A  testing CALL SERVICE on a fake server exposing the temperature device GetMonitoredItems T4 GetMonitoredItem must have the Executable attribute set" time="0.1470" classname="T4 GetMonitoredItem must have the Executable attribute set">
    </testcase>
  </testsuite>
  <testsuite name="ClientSession#readVariableValue" timestamp="2021-02-09T07:04:11" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2570" failures="0">
    <testcase name="testing Client - Umbrella-A  ClientSession#readVariableValue ClientSession#readVariableValue - case 1 - a single nodeId" time="0.0900" classname="ClientSession#readVariableValue - case 1 - a single nodeId">
    </testcase>
    <testcase name="testing Client - Umbrella-A  ClientSession#readVariableValue ClientSession#readVariableValue - case 2 - an array of nodeIds" time="0.0830" classname="ClientSession#readVariableValue - case 2 - an array of nodeIds">
    </testcase>
    <testcase name="testing Client - Umbrella-A  ClientSession#readVariableValue ClientSession#readVariableValue - case 3 - a single ReadValueId" time="0.0840" classname="ClientSession#readVariableValue - case 3 - a single ReadValueId">
    </testcase>
  </testsuite>
  <testsuite name="NodeCrawler" timestamp="2021-02-09T07:04:11" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="12.7640" failures="0">
    <testcase name="testing Client - Umbrella-A  NodeCrawler CRAWL1- should crawl for a complete tree" time="0.0950" classname="CRAWL1- should crawl for a complete tree">
    </testcase>
    <testcase name="testing Client - Umbrella-A  NodeCrawler CRAWL2- should crawl for a complete tree with limited node per browse and read request" time="5.7960" classname="CRAWL2- should crawl for a complete tree with limited node per browse and read request">
    </testcase>
    <testcase name="testing Client - Umbrella-A  NodeCrawler CRAWL3- should crawl one at a time" time="2.4770" classname="CRAWL3- should crawl one at a time">
    </testcase>
    <testcase name="testing Client - Umbrella-A  NodeCrawler CRAWL4- should crawl faster the second time" time="2.2090" classname="CRAWL4- should crawl faster the second time">
    </testcase>
    <testcase name="testing Client - Umbrella-A  NodeCrawler CRAWL5- should display a tree" time="2.1870" classname="CRAWL5- should display a tree">
    </testcase>
  </testsuite>
  <testsuite name="testing Client - Umbrella-B " timestamp="2021-02-09T07:04:24" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Testing bug #610 - TimeoutHint overflow" timestamp="2021-02-09T07:04:26" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.3600" failures="0">
    <testcase name="testing Client - Umbrella-B  Testing bug #610 - TimeoutHint overflow using a  large value for requestedPublishingInterval should not cause node-opcua to crash" time="0.3600" classname="using a  large value for requestedPublishingInterval should not cause node-opcua to crash">
    </testcase>
  </testsuite>
  <testsuite name="SDS1 Testing SessionDiagnostics 1/2" timestamp="2021-02-09T07:04:26" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesB.js" time="2.9310" failures="0">
    <testcase name="testing Client - Umbrella-B  SDS1 Testing SessionDiagnostics 1/2 SDS1-A server should expose a ServerDiagnostic object" time="0.1740" classname="SDS1-A server should expose a ServerDiagnostic object">
    </testcase>
    <testcase name="testing Client - Umbrella-B  SDS1 Testing SessionDiagnostics 1/2 SDS1-B server should expose a SessionDiagnostics per Session" time="2.1660" classname="SDS1-B server should expose a SessionDiagnostics per Session">
    </testcase>
    <testcase name="testing Client - Umbrella-B  SDS1 Testing SessionDiagnostics 1/2 SDS1-C server should expose a SessionDiagnostics in SessionDiagnosticsSummary.SessionDiagnosticsArray" time="0.1240" classname="SDS1-C server should expose a SessionDiagnostics in SessionDiagnosticsSummary.SessionDiagnosticsArray">
    </testcase>
    <testcase name="testing Client - Umbrella-B  SDS1 Testing SessionDiagnostics 1/2 SDS1-D server should remove SessionDiagnostic when session is closed" time="0.4670" classname="SDS1-D server should remove SessionDiagnostic when session is closed">
    </testcase>
  </testsuite>
  <testsuite name="SDS3 Testing SessionDiagnostics 2/2" timestamp="2021-02-09T07:04:29" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesB.js" time="0.2410" failures="0">
    <testcase name="testing Client - Umbrella-B  SDS3 Testing SessionDiagnostics 2/2 SDS3-A - should increase securityRejectedSessionCount and rejectedSessionCount if session is created with invalid credential" time="0.0630" classname="SDS3-A - should increase securityRejectedSessionCount and rejectedSessionCount if session is created with invalid credential">
    </testcase>
    <testcase name="testing Client - Umbrella-B  SDS3 Testing SessionDiagnostics 2/2 SDS3-B - should not increase securityRejectedSessionCount but increase rejectedSessionCount if session is created with invalid session ID" time="0.1780" classname="SDS3-B - should not increase securityRejectedSessionCount but increase rejectedSessionCount if session is created with invalid session ID">
    </testcase>
  </testsuite>
  <testsuite name="SDS2 Testing SessionSecurityDiagnostics" timestamp="2021-02-09T07:04:30" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesB.js" time="1.0600" failures="0">
    <testcase name="testing Client - Umbrella-B  SDS2 Testing SessionSecurityDiagnostics SDS2-A server should expose a ServerSecurityDiagnostic object" time="0.1850" classname="SDS2-A server should expose a ServerSecurityDiagnostic object">
    </testcase>
    <testcase name="testing Client - Umbrella-B  SDS2 Testing SessionSecurityDiagnostics SDS2-B server should expose a SessionSecurityDiagnostics per Session" time="0.1370" classname="SDS2-B server should expose a SessionSecurityDiagnostics per Session">
    </testcase>
    <testcase name="testing Client - Umbrella-B  SDS2 Testing SessionSecurityDiagnostics SDS2-C server should expose a SessionSecurityDiagnostics in SessionDiagnosticsSummary.SessionSecurityDiagnosticsArray" time="0.1300" classname="SDS2-C server should expose a SessionSecurityDiagnostics in SessionDiagnosticsSummary.SessionSecurityDiagnosticsArray">
    </testcase>
    <testcase name="testing Client - Umbrella-B  SDS2 Testing SessionSecurityDiagnostics SDS2-D server should remove SessionSecurityDiagnostic when session is closed" time="0.3720" classname="SDS2-D server should remove SessionSecurityDiagnostic when session is closed">
    </testcase>
    <testcase name="testing Client - Umbrella-B  SDS2 Testing SessionSecurityDiagnostics SDS2-E it should not be possible to read sessionSecurityDiagnostics with a unsecure connection" time="0.1210" classname="SDS2-E it should not be possible to read sessionSecurityDiagnostics with a unsecure connection">
    </testcase>
    <testcase name="testing Client - Umbrella-B  SDS2 Testing SessionSecurityDiagnostics SDS2-F it should not be possible to read sessionSecurityDiagnostics with a secure connection and non admin user" time="0.1150" classname="SDS2-F it should not be possible to read sessionSecurityDiagnostics with a secure connection and non admin user">
    </testcase>
  </testsuite>
  <testsuite name="Client and expired session activation" timestamp="2021-02-09T07:04:31" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="6.2770" failures="0">
    <testcase name="testing Client - Umbrella-B  Client and expired session activation XKL1 should be possible to re activate a active session not closed by a previous connection" time="0.1320" classname="XKL1 should be possible to re activate a active session not closed by a previous connection">
    </testcase>
    <testcase name="testing Client - Umbrella-B  Client and expired session activation XKL2 should NOT be possible to re activate a  session not closed by a previous connection that has expired" time="6.1450" classname="XKL2 should NOT be possible to re activate a  session not closed by a previous connection that has expired">
    </testcase>
  </testsuite>
  <testsuite name="GGH1 Server should check channelId correctness" timestamp="2021-02-09T07:04:37" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesB.js" time="1.0680" failures="0">
    <testcase name="testing Client - Umbrella-B  GGH1 Server should check channelId correctness server should abruptly stops the connection if client uses wrong channel Id" time="1.0680" classname="server should abruptly stops the connection if client uses wrong channel Id">
    </testcase>
  </testsuite>
  <testsuite name="SNAC Testing client accessing service before session is activated " timestamp="2021-02-09T07:04:38" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1490" failures="0">
    <testcase name="testing Client - Umbrella-B  SNAC Testing client accessing service before session is activated  SNAC1- should return BadSessionNotActivated when service is called before session is activated" time="0.1490" classname="SNAC1- should return BadSessionNotActivated when service is called before session is activated">
    </testcase>
  </testsuite>
  <testsuite name="A&amp;C monitoring conditions" timestamp="2021-02-09T07:04:38" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="14.8090" failures="0">
    <testcase name="testing Client - Umbrella-B  A&amp;C monitoring conditions GGG1 -  Limit Alarm should trigger Event when ever the input node goes out of limit" time="0.3720" classname="GGG1 -  Limit Alarm should trigger Event when ever the input node goes out of limit">
    </testcase>
    <testcase name="testing Client - Umbrella-B  A&amp;C monitoring conditions GGG2 - ConditionRefresh" time="0.7340" classname="GGG2 - ConditionRefresh">
    </testcase>
    <testcase name="testing Client - Umbrella-B  A&amp;C monitoring conditions should raise an (OPCUA) event when commenting a Condition " time="1.6040" classname="should raise an (OPCUA) event when commenting a Condition ">
    </testcase>
    <testcase name="testing Client - Umbrella-B  A&amp;C monitoring conditions should raise an (INTERNAL) event when client is commenting" time="0.5570" classname="should raise an (INTERNAL) event when client is commenting">
    </testcase>
    <testcase name="testing Client - Umbrella-B  A&amp;C monitoring conditions A&amp;C1 Example of a Condition that maintains previous states via branches - with exclusive condition" time="5.8260" classname="A&amp;C1 Example of a Condition that maintains previous states via branches - with exclusive condition">
    </testcase>
    <testcase name="testing Client - Umbrella-B  A&amp;C monitoring conditions A&amp;C2 Example of a Condition that maintains previous states via branches - with non exclusive condition" time="5.7160" classname="A&amp;C2 Example of a Condition that maintains previous states via branches - with non exclusive condition">
    </testcase>
  </testsuite>
  <testsuite name="test on Disabled conditions" timestamp="2021-02-09T07:04:53" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.7860" failures="0">
    <testcase name="testing Client - Umbrella-B  A&amp;C monitoring conditions test on Disabled conditions KKL should raise an event when a Condition get disabled" time="0.7860" classname="KKL should raise an event when a Condition get disabled">
    </testcase>
  </testsuite>
  <testsuite name="A&amp;C3 client side alarm monitoring" timestamp="2021-02-09T07:04:54" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="12.2210" failures="0">
    <testcase name="testing Client - Umbrella-B  A&amp;C3 client side alarm monitoring should monitor all alarms" time="12.2210" classname="should monitor all alarms">
    </testcase>
  </testsuite>
  <testsuite name="Testing ClientMonitoredItem#on(&apos;terminated&apos;) event" timestamp="2021-02-09T07:05:06" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="4.6590" failures="0">
    <testcase name="testing Client - Umbrella-B  Testing ClientMonitoredItem#on(&apos;terminated&apos;) event ClientMonitoredItem should receive an terminated event if terminated implicitly" time="1.1610" classname="ClientMonitoredItem should receive an terminated event if terminated implicitly">
    </testcase>
    <testcase name="testing Client - Umbrella-B  Testing ClientMonitoredItem#on(&apos;terminated&apos;) event ClientMonitoredItem should receive an terminated event if terminated explicitly" time="1.1640" classname="ClientMonitoredItem should receive an terminated event if terminated explicitly">
    </testcase>
    <testcase name="testing Client - Umbrella-B  Testing ClientMonitoredItem#on(&apos;terminated&apos;) event ClientMonitoredItemGroup should receive an terminated event if terminated explicitly" time="1.1790" classname="ClientMonitoredItemGroup should receive an terminated event if terminated explicitly">
    </testcase>
    <testcase name="testing Client - Umbrella-B  Testing ClientMonitoredItem#on(&apos;terminated&apos;) event ClientMonitoredItemGroup should receive an terminated event if terminated explicitly" time="1.1550" classname="ClientMonitoredItemGroup should receive an terminated event if terminated explicitly">
    </testcase>
  </testsuite>
  <testsuite name="Testing case sensitivity" timestamp="2021-02-09T07:05:11" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1590" failures="0">
    <testcase name="testing Client - Umbrella-B  Testing case sensitivity CASE-I should be possible to connect to server with endpoint in UpperCase" time="0.1590" classname="CASE-I should be possible to connect to server with endpoint in UpperCase">
    </testcase>
  </testsuite>
  <testsuite name="Testing client keepalive options" timestamp="2021-02-09T07:05:11" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.2000" failures="0">
    <testcase name="testing Client - Umbrella-B  Testing client keepalive options KA-1 it should terminate keepalive when session is closed" time="1.2000" classname="KA-1 it should terminate keepalive when session is closed">
    </testcase>
  </testsuite>
  <testsuite name="PP1 CreateSessionResponse endpoints" timestamp="2021-02-09T07:05:12" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1250" failures="0">
    <testcase name="testing Client - Umbrella-B  PP1 CreateSessionResponse endpoints should receive server endpoint in CreateSessionResponse when endpointUrl user by the client matches a valid endpoint" time="0.0670" classname="should receive server endpoint in CreateSessionResponse when endpointUrl user by the client matches a valid endpoint">
    </testcase>
    <testcase name="testing Client - Umbrella-B  PP1 CreateSessionResponse endpoints should receive server endpoint in CreateSessionResponse when endpointUrl used by the client doesn&apos;t match a valid endpoint" time="0.0580" classname="should receive server endpoint in CreateSessionResponse when endpointUrl used by the client doesn&apos;t match a valid endpoint">
    </testcase>
  </testsuite>
  <testsuite name="DBF0" timestamp="2021-02-09T07:05:12" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="4.5090" failures="0">
    <testcase name="testing Client - Umbrella-B  DBF0 DBF1: DeadBandFilter filter: none, trigger: Status - it should not received notification when trigger is status and value change" time="0.8450" classname="DBF1: DeadBandFilter filter: none, trigger: Status - it should not received notification when trigger is status and value change">
    </testcase>
    <testcase name="testing Client - Umbrella-B  DBF0 DBF2: DeadBandFilter filter: none, trigger: StatusValue, (Double) it should not received notification when trigger is status and value change" time="0.9710" classname="DBF2: DeadBandFilter filter: none, trigger: StatusValue, (Double) it should not received notification when trigger is status and value change">
    </testcase>
    <testcase name="testing Client - Umbrella-B  DBF0 DBF3: DeadBandFilter filter: none, trigger: StatusValue, (Bool) it should not received notification when trigger is status and value change" time="1.2890" classname="DBF3: DeadBandFilter filter: none, trigger: StatusValue, (Bool) it should not received notification when trigger is status and value change">
    </testcase>
    <testcase name="testing Client - Umbrella-B  DBF0 DBF4- Testing DeadBandFilter associated with monitoring queue - check dead band filter 1" time="1.4040" classname="DBF4- Testing DeadBandFilter associated with monitoring queue - check dead band filter 1">
    </testcase>
  </testsuite>
  <testsuite name="testing Client - Umbrella-C" timestamp="2021-02-09T07:05:17" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="2.6750" failures="0">
    <testcase name="testing Client - Umbrella-C QQQQ a server shall close any unactivated sessions before reaching the maximum number of session" time="2.6750" classname="QQQQ a server shall close any unactivated sessions before reaching the maximum number of session">
    </testcase>
  </testsuite>
  <testsuite name="AAAY Testing 50 sessions on the same  connection " timestamp="2021-02-09T07:05:22" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesC.js" time="2.7030" failures="0">
    <testcase name="testing Client - Umbrella-C AAAY Testing 50 sessions on the same  connection  QZQ should be possible to open  many sessions on a single connection" time="2.7030" classname="QZQ should be possible to open  many sessions on a single connection">
    </testcase>
  </testsuite>
  <testsuite name="SubscriptionDiagnostics" timestamp="2021-02-09T07:05:25" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesC.js" time="7.3930" failures="0">
    <testcase name="testing Client - Umbrella-C SubscriptionDiagnostics SubscriptionDiagnostics-1 : server should expose SubscriptionDiagnosticsArray" time="0.1300" classname="SubscriptionDiagnostics-1 : server should expose SubscriptionDiagnosticsArray">
    </testcase>
    <testcase name="testing Client - Umbrella-C SubscriptionDiagnostics SubscriptionDiagnostics-2 : server should remove SubscriptionDiagnostics from SubscriptionDiagnosticsArray when subscription is terminated" time="0.1220" classname="SubscriptionDiagnostics-2 : server should remove SubscriptionDiagnostics from SubscriptionDiagnosticsArray when subscription is terminated">
    </testcase>
    <testcase name="testing Client - Umbrella-C SubscriptionDiagnostics SubscriptionDiagnostics-3 : server should remove SubscriptionDiagnostics from SubscriptionDiagnosticsArray when subscription has timedout" time="7.1410" classname="SubscriptionDiagnostics-3 : server should remove SubscriptionDiagnostics from SubscriptionDiagnosticsArray when subscription has timedout">
    </testcase>
  </testsuite>
  <testsuite name="QSD Test Browse Request" timestamp="2021-02-09T07:05:32" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0030" failures="0">
    <testcase name="testing Client - Umbrella-C QSD Test Browse Request T6 - #BrowseNext response " time="0.0030" classname="T6 - #BrowseNext response ">
    </testcase>
  </testsuite>
  <testsuite name="ZZZA Testing timeout on session " timestamp="2021-02-09T07:05:32" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="12.3900" failures="0">
    <testcase name="testing Client - Umbrella-C ZZZA Testing timeout on session  An opened session will eventually time out on server side if the client doesn&apos;t make transactions" time="4.0990" classname="An opened session will eventually time out on server side if the client doesn&apos;t make transactions">
    </testcase>
    <testcase name="testing Client - Umbrella-C ZZZA Testing timeout on session  An opened session will not time out on server side if the client has keepSessionAlive = true 1/2" time="2.1570" classname="An opened session will not time out on server side if the client has keepSessionAlive = true 1/2">
    </testcase>
    <testcase name="testing Client - Umbrella-C ZZZA Testing timeout on session  An opened session will not time-out on server side if the client has keepSessionAlive = true 2/2" time="6.1340" classname="An opened session will not time-out on server side if the client has keepSessionAlive = true 2/2">
    </testcase>
  </testsuite>
  <testsuite name="ZZZB Testing AuditSessionEventType" timestamp="2021-02-09T07:05:45" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesC.js" time="5.4380" failures="0">
    <testcase name="testing Client - Umbrella-C ZZZB Testing AuditSessionEventType EdgeCase Session Timeout: server should raise a Session/CreateSession, Session/ActivateSession , Session/Timeout" time="2.3120" classname="EdgeCase Session Timeout: server should raise a Session/CreateSession, Session/ActivateSession , Session/Timeout">
    </testcase>
    <testcase name="testing Client - Umbrella-C ZZZB Testing AuditSessionEventType NominalCase: server should raise a Session/CreateSession, Session/ActivateSession , Session/CloseSession" time="3.1260" classname="NominalCase: server should raise a Session/CreateSession, Session/ActivateSession , Session/CloseSession">
    </testcase>
  </testsuite>
  <testsuite name="Closing an unactivated session " timestamp="2021-02-09T07:05:50" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0730" failures="0">
    <testcase name="testing Client - Umbrella-C Closing an unactivated session  AKQ server shall return BadSessionNotActivated if client attempts to close an unactivated session" time="0.0730" classname="AKQ server shall return BadSessionNotActivated if client attempts to close an unactivated session">
    </testcase>
  </testsuite>
  <testsuite name="Testing issue  #223 -  Demonstrating how to use call service from client" timestamp="2021-02-09T07:05:50" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1050" failures="0">
    <testcase name="testing Client - Umbrella-C Testing issue  #223 -  Demonstrating how to use call service from client #223 - calling a method with one input argument" time="0.1050" classname="#223 - calling a method with one input argument">
    </testcase>
  </testsuite>
  <testsuite name="#TSS TransferSessionService" timestamp="2021-02-09T07:05:50" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesC.js" time="3.6630" failures="0">
    <testcase name="testing Client - Umbrella-C #TSS TransferSessionService TSS-1 should transfer a subscription" time="0.2350" classname="TSS-1 should transfer a subscription">
    </testcase>
    <testcase name="testing Client - Umbrella-C #TSS TransferSessionService TSS-2 should transfer a subscription from a live session to an other" time="0.1970" classname="TSS-2 should transfer a subscription from a live session to an other">
    </testcase>
    <testcase name="testing Client - Umbrella-C #TSS TransferSessionService TSS-3 should send a StatusChangeNotification to the old session with GoodSubscriptionTransferred" time="1.9700" classname="TSS-3 should send a StatusChangeNotification to the old session with GoodSubscriptionTransferred">
    </testcase>
    <testcase name="testing Client - Umbrella-C #TSS TransferSessionService TSS-4 should resend initialValue on monitored Item" time="1.2610" classname="TSS-4 should resend initialValue on monitored Item">
    </testcase>
  </testsuite>
  <testsuite name="Testing issue  #231 -  Server should accept client with protocolVersion greater than the protocolVersion it supports" timestamp="2021-02-09T07:05:54" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesC.js" time="1.0880" failures="0">
    <testcase name="testing Client - Umbrella-C Testing issue  #231 -  Server should accept client with protocolVersion greater than the protocolVersion it supports #231-A " time="0.0410" classname="#231-A ">
    </testcase>
    <testcase name="testing Client - Umbrella-C Testing issue  #231 -  Server should accept client with protocolVersion greater than the protocolVersion it supports #231-B BadProtocolVersionUnsupported" time="1.0470" classname="#231-B BadProtocolVersionUnsupported">
    </testcase>
  </testsuite>
  <testsuite name="Testing SemanticChanged Bit on statusCode monitoredItemData" timestamp="2021-02-09T07:05:55" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="3.1690" failures="0">
    <testcase name="testing Client - Umbrella-C Testing SemanticChanged Bit on statusCode monitoredItemData YY3 should set SemanticChanged - with sampling monitored item - 1000 ms" time="2.2050" classname="YY3 should set SemanticChanged - with sampling monitored item - 1000 ms">
    </testcase>
    <testcase name="testing Client - Umbrella-C Testing SemanticChanged Bit on statusCode monitoredItemData YY1 should set SemanticChanged - with sampling monitored item - 100 ms" time="0.4960" classname="YY1 should set SemanticChanged - with sampling monitored item - 100 ms">
    </testcase>
    <testcase name="testing Client - Umbrella-C Testing SemanticChanged Bit on statusCode monitoredItemData YY2 should set SemanticChanged - with event based monitored item" time="0.4680" classname="YY2 should set SemanticChanged - with event based monitored item">
    </testcase>
  </testsuite>
  <testsuite name="Testing issue#253 " timestamp="2021-02-09T07:05:58" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.5610" failures="0">
    <testcase name="testing Client - Umbrella-C Testing issue#253  KK1 a subscription should report monitored item notification for ServerStatus" time="0.5610" classname="KK1 a subscription should report monitored item notification for ServerStatus">
    </testcase>
  </testsuite>
  <testsuite name="Testing issue#273 " timestamp="2021-02-09T07:05:59" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.6190" failures="0">
    <testcase name="testing Client - Umbrella-C Testing issue#273  GDT1- should be possible to find the DataType of node - Double " time="0.1150" classname="GDT1- should be possible to find the DataType of node - Double ">
    </testcase>
    <testcase name="testing Client - Umbrella-C Testing issue#273  GDT2- should be possible to find the DataType of  node - ImageGIF" time="0.1110" classname="GDT2- should be possible to find the DataType of  node - ImageGIF">
    </testcase>
    <testcase name="testing Client - Umbrella-C Testing issue#273  GDT3- should be possible to find the DataType of simple node - Int64" time="0.0950" classname="GDT3- should be possible to find the DataType of simple node - Int64">
    </testcase>
    <testcase name="testing Client - Umbrella-C Testing issue#273  GDT4- should be possible to find the DataType of simple - QualifiedName" time="0.1060" classname="GDT4- should be possible to find the DataType of simple - QualifiedName">
    </testcase>
    <testcase name="testing Client - Umbrella-C Testing issue#273  GDT5- should fail  to find the DataType on a Object ( Server Object for instance)" time="0.0940" classname="GDT5- should fail  to find the DataType on a Object ( Server Object for instance)">
    </testcase>
    <testcase name="testing Client - Umbrella-C Testing issue#273  Should be possible to call getBuiltInDataType with Promise#643" time="0.0980" classname="Should be possible to call getBuiltInDataType with Promise#643">
    </testcase>
  </testsuite>
  <testsuite name="Testing issue#313 " timestamp="2021-02-09T07:05:59" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1720" failures="0">
    <testcase name="testing Client - Umbrella-C Testing issue#313  Should not crash when monitoring the same invalid nodeId for the second time " time="0.1720" classname="Should not crash when monitoring the same invalid nodeId for the second time ">
    </testcase>
  </testsuite>
  <testsuite name="Testing server when client sessionName  is not defined   #355" timestamp="2021-02-09T07:06:00" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.6830" failures="0">
    <testcase name="testing Client - Umbrella-C Testing server when client sessionName  is not defined   #355 #355 Client MonitoredItem event handler should be protected against exception raised in user code" time="0.6830" classname="#355 Client MonitoredItem event handler should be protected against exception raised in user code">
    </testcase>
  </testsuite>
  <testsuite name="Testing a server that exposes a node whose string nodeId looks like a guid" timestamp="2021-02-09T07:06:00" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1670" failures="0">
    <testcase name="testing Client - Umbrella-C Testing a server that exposes a node whose string nodeId looks like a guid #377 a client should get confused with string nodeid that looks like a guid" time="0.1670" classname="#377 a client should get confused with string nodeid that looks like a guid">
    </testcase>
  </testsuite>
  <testsuite name="Testing OPCUAClientBase#getEndpoints" timestamp="2021-02-09T07:06:00" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1680" failures="0">
    <testcase name="testing Client - Umbrella-C Testing OPCUAClientBase#getEndpoints #417 OPCUAClient#getEndpoints shall return valid endpointUrl" time="0.1680" classname="#417 OPCUAClient#getEndpoints shall return valid endpointUrl">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #433 - Server should accept ActivateSessionRequest with userIdentityToken set to null " timestamp="2021-02-09T07:06:01" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesC.js" time="0.0970" failures="0">
    <testcase name="testing Client - Umbrella-C Testing bug #433 - Server should accept ActivateSessionRequest with userIdentityToken set to null  test" time="0.0970" classname="test">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #455 - OPCUASession#readVariableValue" timestamp="2021-02-09T07:06:01" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1630" failures="0">
    <testcase name="testing Client - Umbrella-C Testing bug #455 - OPCUASession#readVariableValue should detect badly formed nodeId on the client level and raise an exception" time="0.1630" classname="should detect badly formed nodeId on the client level and raise an exception">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #596 - ClientSession#getNamespaceIndex" timestamp="2021-02-09T07:06:01" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1470" failures="0">
    <testcase name="testing Client - Umbrella-C Testing bug #596 - ClientSession#getNamespaceIndex should be possible to retrieve the namespace Index from a url (on client clientside)" time="0.1470" classname="should be possible to retrieve the namespace Index from a url (on client clientside)">
    </testcase>
  </testsuite>
  <testsuite name="testing Client - Umbrella-D " timestamp="2021-02-09T07:06:01" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Testing client with many monitored items" timestamp="2021-02-09T07:06:03" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="3.9950" failures="0">
    <testcase name="testing Client - Umbrella-D  Testing client with many monitored items should monitor a large number of node (see #69)" time="3.1950" classname="should monitor a large number of node (see #69)">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Testing client with many monitored items should monitor a very large number of nodes (5000) " time="0.8000" classname="should monitor a very large number of nodes (5000) ">
    </testcase>
  </testsuite>
  <testsuite name="Testing ClientMonitoredItemGroup" timestamp="2021-02-09T07:06:07" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="14.2500" failures="0">
    <testcase name="testing Client - Umbrella-D  Testing ClientMonitoredItemGroup AA11 should create a ClientMonitoredItem and get notified" time="9.3190" classname="AA11 should create a ClientMonitoredItem and get notified">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Testing ClientMonitoredItemGroup AA12 should create a ClientMonitoredItemGroup " time="0.1690" classname="AA12 should create a ClientMonitoredItemGroup ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Testing ClientMonitoredItemGroup AA13 should create a ClientMonitoredItemGroup and get notified when one monitored item out of many is changing" time="4.3130" classname="AA13 should create a ClientMonitoredItemGroup and get notified when one monitored item out of many is changing">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Testing ClientMonitoredItemGroup AA14 should create a ClientMonitoredItemGroup " time="0.1700" classname="AA14 should create a ClientMonitoredItemGroup ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Testing ClientMonitoredItemGroup AA15 should call toString function of ClientMonitoredItemGroup " time="0.1590" classname="AA15 should call toString function of ClientMonitoredItemGroup ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Testing ClientMonitoredItemGroup AA16 should create a clientMonitoredItemGroup with invalid node #534" time="0.1200" classname="AA16 should create a clientMonitoredItemGroup with invalid node #534">
    </testcase>
  </testsuite>
  <testsuite name="end-to-end testing of a write operation between a client and a server (session#write)" timestamp="2021-02-09T07:06:22" tests="11" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesD.js" time="1.7520" failures="0">
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) should return BadNodeIdUnknown if nodeId is unknown " time="0.1030" classname="should return BadNodeIdUnknown if nodeId is unknown ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) should return Good if nodeId is known but not writeable " time="0.1000" classname="should return Good if nodeId is known but not writeable ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) should return Good if nodeId is known and writable " time="0.0990" classname="should return Good if nodeId is known and writable ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) should return an error if value to write has a wrong dataType" time="0.0980" classname="should return an error if value to write has a wrong dataType">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) should return an error if value to write has a wrong dataType ( Double  instead of Float)" time="0.0970" classname="should return an error if value to write has a wrong dataType ( Double  instead of Float)">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) server should return Good_CompletesAsynchronously if the  variable write operation happens asynchronously" time="0.1000" classname="server should return Good_CompletesAsynchronously if the  variable write operation happens asynchronously">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) should return BadNothingToDo if writeRequest is empty" time="0.1060" classname="should return BadNothingToDo if writeRequest is empty">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) should return BadNothingToDo if writeRequest is null" time="0.1090" classname="should return BadNothingToDo if writeRequest is null">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) MMM should return BadTooManyOperation if nodesToWrite has too many elements" time="0.0890" classname="MMM should return BadTooManyOperation if nodesToWrite has too many elements">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) VQT should write Value Quality Timestamp - on basic variable" time="0.0980" classname="VQT should write Value Quality Timestamp - on basic variable">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing of a write operation between a client and a server (session#write) VQT should write Value Quality Timestamp - on async variable that support full blown dataValue write" time="0.7530" classname="VQT should write Value Quality Timestamp - on async variable that support full blown dataValue write">
    </testcase>
  </testsuite>
  <testsuite name="testing session  transfer to different channel" timestamp="2021-02-09T07:06:23" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="2.1860" failures="0">
    <testcase name="testing Client - Umbrella-D  testing session  transfer to different channel RQC1 - It should be possible to close a session that has not be activated yet" time="0.0700" classname="RQC1 - It should be possible to close a session that has not be activated yet">
    </testcase>
    <testcase name="testing Client - Umbrella-D  testing session  transfer to different channel RQB1 - calling CreateSession and CloseSession &amp;  CloseSession again should return BadSessionIdInvalid" time="0.0570" classname="RQB1 - calling CreateSession and CloseSession &amp;  CloseSession again should return BadSessionIdInvalid">
    </testcase>
    <testcase name="testing Client - Umbrella-D  testing session  transfer to different channel RQB2 - calling CloseSession without calling CreateSession first" time="0.0480" classname="RQB2 - calling CloseSession without calling CreateSession first">
    </testcase>
    <testcase name="testing Client - Umbrella-D  testing session  transfer to different channel RQB3 - calling CreateSession,  CloseSession  and CloseSession again" time="0.0910" classname="RQB3 - calling CreateSession,  CloseSession  and CloseSession again">
    </testcase>
    <testcase name="testing Client - Umbrella-D  testing session  transfer to different channel RQ0 - call ActiveSession on a session that has been transferred to a different channel" time="0.1520" classname="RQ0 - call ActiveSession on a session that has been transferred to a different channel">
    </testcase>
    <testcase name="testing Client - Umbrella-D  testing session  transfer to different channel RQ1 - should reject if the channel used to activate the session for the first time is not the same as the channel used to create the session" time="0.1610" classname="RQ1 - should reject if the channel used to activate the session for the first time is not the same as the channel used to create the session">
    </testcase>
    <testcase name="testing Client - Umbrella-D  testing session  transfer to different channel RQ2 -server should raise an error if a existing session is reactivated from a channel that have different certificate than the original channel" time="0.2190" classname="RQ2 -server should raise an error if a existing session is reactivated from a channel that have different certificate than the original channel">
    </testcase>
    <testcase name="testing Client - Umbrella-D  testing session  transfer to different channel RQ3 - server should raise an error if a session is reactivated with different user identity tokens" time="0.1640" classname="RQ3 - server should raise an error if a session is reactivated with different user identity tokens">
    </testcase>
    <testcase name="testing Client - Umbrella-D  testing session  transfer to different channel RQ5 - server should reject pending requests send to old channel when session has been transferred to new channel" time="1.2240" classname="RQ5 - server should reject pending requests send to old channel when session has been transferred to new channel">
    </testcase>
  </testsuite>
  <testsuite name="end-to-end testing registerNodes" timestamp="2021-02-09T07:06:26" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesD.js" time="0.5480" failures="0">
    <testcase name="testing Client - Umbrella-D  end-to-end testing registerNodes should register nodes - BadNothingToDo" time="0.1080" classname="should register nodes - BadNothingToDo">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing registerNodes should register nodes - Good" time="0.0920" classname="should register nodes - Good">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing registerNodes should unregister nodes - BadNothingToDo" time="0.0930" classname="should unregister nodes - BadNothingToDo">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing registerNodes should unregister nodes - Good" time="0.1170" classname="should unregister nodes - Good">
    </testcase>
    <testcase name="testing Client - Umbrella-D  end-to-end testing registerNodes should register nodes and provide a alias that can be used on all operations" time="0.1380" classname="should register nodes and provide a alias that can be used on all operations">
    </testcase>
  </testsuite>
  <testsuite name="Testing ctt 010  - Modify the samplingInterval of multiple nodes, where the first half are set to 1000 msec and the latter half 3000 msec" timestamp="2021-02-09T07:06:26" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="8.8240" failures="0">
    <testcase name="testing Client - Umbrella-D  Testing ctt 010  - Modify the samplingInterval of multiple nodes, where the first half are set to 1000 msec and the latter half 3000 msec should create a large number of monitored item and alter samplingInterval for half of them" time="8.8240" classname="should create a large number of monitored item and alter samplingInterval for half of them">
    </testcase>
  </testsuite>
  <testsuite name="Testing MonitoredItem with TimestampToReturn.Source #804" timestamp="2021-02-09T07:06:35" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="3.1800" failures="0">
    <testcase name="testing Client - Umbrella-D  Testing MonitoredItem with TimestampToReturn.Source #804 should monitor with SourceTimestamp (see #804)" time="3.1800" classname="should monitor with SourceTimestamp (see #804)">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #445 - server.serverDiagnosticsSummary.currentSessionCount" timestamp="2021-02-09T07:06:38" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesD.js" time="0.7160" failures="0">
    <testcase name="testing Client - Umbrella-D  Testing bug #445 - server.serverDiagnosticsSummary.currentSessionCount test that current SessionCount increments and decrements appropriately" time="0.7160" classname="test that current SessionCount increments and decrements appropriately">
    </testcase>
  </testsuite>
  <testsuite name="Browse-Read-Write Services" timestamp="2021-02-09T07:06:39" tests="18" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0480" failures="0">
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-1 - should browse RootFolder" time="0.0040" classname="T8-1 - should browse RootFolder">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-2 - browse should return BadReferenceTypeIdInvalid if referenceTypeId is invalid" time="0.0020" classname="T8-2 - browse should return BadReferenceTypeIdInvalid if referenceTypeId is invalid">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-3 - should read a Variable" time="0.0030" classname="T8-3 - should read a Variable">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-11 - #ReadRequest : server should return BadNothingToDo when nodesToRead is empty" time="0.0020" classname="T8-11 - #ReadRequest : server should return BadNothingToDo when nodesToRead is empty">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-12 - #ReadRequest : server should return BadTimestampsToReturnInvalid when timestampsToReturn is Invalid" time="0.0030" classname="T8-12 - #ReadRequest : server should return BadTimestampsToReturnInvalid when timestampsToReturn is Invalid">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-13 - should readAllAttributes - 1 element" time="0.0020" classname="T8-13 - should readAllAttributes - 1 element">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-13b - should readAllAttributes - 2 elements" time="0.0030" classname="T8-13b - should readAllAttributes - 2 elements">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-14a - #readVariableValue should return a appropriate status code if nodeid to read doesn&apos;t exists" time="0.0010" classname="T8-14a - #readVariableValue should return a appropriate status code if nodeid to read doesn&apos;t exists">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-14b - #readVariableValue should return a appropriate status code if nodeid to read doesn&apos;t exists" time="0.0030" classname="T8-14b - #readVariableValue should return a appropriate status code if nodeid to read doesn&apos;t exists">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-15 - #read should return BadNothingToDo when reading an empty nodeToRead array" time="0.0020" classname="T8-15 - #read should return BadNothingToDo when reading an empty nodeToRead array">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-15b - #read :should return BadNothingToDo if nodesToRead is empty" time="0.0030" classname="T8-15b - #read :should return BadNothingToDo if nodesToRead is empty">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-15c - #read :should return BadNothingToDo if nodesToRead is null" time="0.0010" classname="T8-15c - #read :should return BadNothingToDo if nodesToRead is null">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-16 - #read should return BadMaxAgeInvalid when Negative MaxAge parameter is specified" time="0.0020" classname="T8-16 - #read should return BadMaxAgeInvalid when Negative MaxAge parameter is specified">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-17 - #readVariableValue - should read the TemperatureTarget value" time="0.0030" classname="T8-17 - #readVariableValue - should read the TemperatureTarget value">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T8-20 - #writeSingleNode -  should write the TemperatureTarget value" time="0.0060" classname="T8-20 - #writeSingleNode -  should write the TemperatureTarget value">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T9-1 - Server should expose a &apos;Server&apos; object in the &apos;Objects&apos; folder" time="0.0010" classname="T9-1 - Server should expose a &apos;Server&apos; object in the &apos;Objects&apos; folder">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T9-2 - Server should expose &apos;Server_NamespaceArray&apos; variable " time="0.0030" classname="T9-2 - Server should expose &apos;Server_NamespaceArray&apos; variable ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Browse-Read-Write Services T9-3 - ServerStatus object shall be accessible as a ExtensionObject" time="0.0040" classname="T9-3 - ServerStatus object shall be accessible as a ExtensionObject">
    </testcase>
  </testsuite>
  <testsuite name="Testing ctt  - write a ByteString value to a node of type Byte[]" timestamp="2021-02-09T07:06:40" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2000" failures="0">
    <testcase name="testing Client - Umbrella-D  Testing ctt  - write a ByteString value to a node of type Byte[] should write a ByteString value into a node  of type Byte[]" time="0.2000" classname="should write a ByteString value into a node  of type Byte[]">
    </testcase>
  </testsuite>
  <testsuite name="Testing ctt  " timestamp="2021-02-09T07:06:40" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.1450" failures="0">
    <testcase name="testing Client - Umbrella-D  Testing ctt   verifying that RepublishRequest service is working as expected" time="1.1450" classname="verifying that RepublishRequest service is working as expected">
    </testcase>
  </testsuite>
  <testsuite name="Testing ctt  - Test 5.10.2 Test case 7  - SubscriptionBasic - 029.js" timestamp="2021-02-09T07:06:42" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.3660" failures="0">
    <testcase name="testing Client - Umbrella-D  Testing ctt  - Test 5.10.2 Test case 7  - SubscriptionBasic - 029.js 1. Server should revise PublishingInterval the value to a value it support when RequestedPublishingInterval is NaN " time="0.1480" classname="1. Server should revise PublishingInterval the value to a value it support when RequestedPublishingInterval is NaN ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Testing ctt  - Test 5.10.2 Test case 7  - SubscriptionBasic - 029.js 2. Server should revise PublishingInterval the value to a value it support when RequestedPublishingInterval is Infinity " time="0.1090" classname="2. Server should revise PublishingInterval the value to a value it support when RequestedPublishingInterval is Infinity ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Testing ctt  - Test 5.10.2 Test case 7  - SubscriptionBasic - 029.js 3. Server should revise PublishingInterval the value to a value it support when RequestedPublishingInterval is MaxFloat " time="0.1090" classname="3. Server should revise PublishingInterval the value to a value it support when RequestedPublishingInterval is MaxFloat ">
    </testcase>
  </testsuite>
  <testsuite name="Test Browse Request" timestamp="2021-02-09T07:06:42" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0130" failures="0">
    <testcase name="testing Client - Umbrella-D  Test Browse Request T1 - #Browse should return BadNothingToDo if nodesToBrowse is empty " time="0.0010" classname="T1 - #Browse should return BadNothingToDo if nodesToBrowse is empty ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Test Browse Request T2 - #Browse should return BadViewIdInvalid if viewId is invalid" time="0.0010" classname="T2 - #Browse should return BadViewIdInvalid if viewId is invalid">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Test Browse Request T3 - #Browse should return BadViewUnknown if object referenced by viewId is not a view" time="0.0010" classname="T3 - #Browse should return BadViewUnknown if object referenced by viewId is not a view">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Test Browse Request T4 - #Browse server should respect Browse maxReferencesPerNode " time="0.0020" classname="T4 - #Browse server should respect Browse maxReferencesPerNode ">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Test Browse Request T5 - #BrowseNext response should have serviceResult=BadNothingToDo if request have no continuationPoints" time="0.0020" classname="T5 - #BrowseNext response should have serviceResult=BadNothingToDo if request have no continuationPoints">
    </testcase>
    <testcase name="testing Client - Umbrella-D  Test Browse Request T6 - #BrowseNext response " time="0.0060" classname="T6 - #BrowseNext response ">
    </testcase>
  </testsuite>
  <testsuite name="testing basic Client-Server communication" timestamp="2021-02-09T07:06:43" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesD.js" time="0.0680" failures="0">
    <testcase name="testing Client - Umbrella-D  testing basic Client-Server communication C1 - testing with username === null " time="0.0680" classname="C1 - testing with username === null ">
    </testcase>
  </testsuite>
  <testsuite name="testing Client - Umbrella-E " timestamp="2021-02-09T07:06:43" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device" timestamp="2021-02-09T07:06:45" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="6.1250" failures="0">
    <testcase name="testing Client - Umbrella-E  AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device AZA1-A should create a ClientSubscription to manage a subscription" time="0.7130" classname="AZA1-A should create a ClientSubscription to manage a subscription">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device AZA1-B should dump statistics " time="0.3880" classname="AZA1-B should dump statistics ">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device AZA1-C a ClientSubscription should receive keep-alive events from the server" time="1.1790" classname="AZA1-C a ClientSubscription should receive keep-alive events from the server">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device AZA1-E should be possible to monitor an nodeId value with a ClientSubscription" time="0.1390" classname="AZA1-E should be possible to monitor an nodeId value with a ClientSubscription">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device AZA1-F should be possible to monitor several nodeId value with a single client subscription" time="2.1480" classname="AZA1-F should be possible to monitor several nodeId value with a single client subscription">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device AZA1-G should terminate any pending subscription when the client is disconnected" time="0.3110" classname="AZA1-G should terminate any pending subscription when the client is disconnected">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA1- testing Client-Server subscription use case, on a fake server exposing the temperature device AZA1-H should terminate any pending subscription when the client is disconnected twice" time="1.2470" classname="AZA1-H should terminate any pending subscription when the client is disconnected twice">
    </testcase>
  </testsuite>
  <testsuite name="AZA2- testing server and subscription" timestamp="2021-02-09T07:06:51" tests="23" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="8.8050" failures="0">
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-A should return BadTooManySubscriptions if too many subscriptions are opened" time="0.2240" classname="AZA2-A should return BadTooManySubscriptions if too many subscriptions are opened">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-B a server should accept several Publish Requests from the client without sending notification immediately, and should still be able to reply to other requests" time="0.2190" classname="AZA2-B a server should accept several Publish Requests from the client without sending notification immediately, and should still be able to reply to other requests">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-C A Subscription can be added and then deleted" time="0.1310" classname="AZA2-C A Subscription can be added and then deleted">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-D #deleteSubscriptions -  should return serviceResult=BadNothingToDo if subscriptionIds is empty" time="0.1410" classname="AZA2-D #deleteSubscriptions -  should return serviceResult=BadNothingToDo if subscriptionIds is empty">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-E A MonitoredItem can be added to a subscription and then deleted" time="0.1190" classname="AZA2-E A MonitoredItem can be added to a subscription and then deleted">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-F should return BadNodeIdUnknown  if the client tries to monitored an non-existent node" time="0.1190" classname="AZA2-F should return BadNodeIdUnknown  if the client tries to monitored an non-existent node">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-G should return BadAttributeIdInvalid if the client tries to monitored an invalid attribute" time="0.1170" classname="AZA2-G should return BadAttributeIdInvalid if the client tries to monitored an invalid attribute">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-H should return BadIndexRangeInvalid if the client tries to monitored with an invalid index range" time="0.1520" classname="AZA2-H should return BadIndexRangeInvalid if the client tries to monitored with an invalid index range">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-I should return BadIndexRangeNoData on first notification if the client tries to monitored with 2D index range when a 1D index range is required" time="0.6460" classname="AZA2-I should return BadIndexRangeNoData on first notification if the client tries to monitored with 2D index range when a 1D index range is required">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-J should not report notification if a monitored value array changes outside the monitored indexRange - 1" time="1.3690" classname="AZA2-J should not report notification if a monitored value array changes outside the monitored indexRange - 1">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-K should not report notification if a monitored value array changes outside the monitored indexRange" time="1.3620" classname="AZA2-K should not report notification if a monitored value array changes outside the monitored indexRange">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-K1 should not report notification if a monitored value &amp; status are written but did not change" time="2.0250" classname="AZA2-K1 should not report notification if a monitored value &amp; status are written but did not change">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-L disabled monitored item" time="0.1550" classname="AZA2-L disabled monitored item">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-M #CreateMonitoredItemRequest should return BadNothingToDo if CreateMonitoredItemRequest has no nodes to monitored" time="0.1930" classname="AZA2-M #CreateMonitoredItemRequest should return BadNothingToDo if CreateMonitoredItemRequest has no nodes to monitored">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-N #CreateMonitoredItemRequest should return BadIndexRangeInvalid if a invalid range is passed on CreateMonitoredItemRequest " time="0.1600" classname="AZA2-N #CreateMonitoredItemRequest should return BadIndexRangeInvalid if a invalid range is passed on CreateMonitoredItemRequest ">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-O should return BadNothingToDo if ModifyMonitoredItemRequest has no nodes to monitored" time="0.1750" classname="AZA2-O should return BadNothingToDo if ModifyMonitoredItemRequest has no nodes to monitored">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-P should return BadNothingToDo if DeleteMonitoredItemsResponse has no nodes to delete" time="0.1280" classname="AZA2-P should return BadNothingToDo if DeleteMonitoredItemsResponse has no nodes to delete">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-Q A MonitoredItem should received changed event" time="0.2600" classname="AZA2-Q A MonitoredItem should received changed event">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-R A Server should reject a CreateMonitoredItemRequest if timestamp is invalid ( catching error on monitored item )" time="0.1560" classname="AZA2-R A Server should reject a CreateMonitoredItemRequest if timestamp is invalid ( catching error on monitored item )">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-SA A Server should reject a CreateMonitoredItemRequest if timestamp is invalid ( catching error on callback)" time="0.1660" classname="AZA2-SA A Server should reject a CreateMonitoredItemRequest if timestamp is invalid ( catching error on callback)">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-SB A Server should reject a CreateMonitoredItemRequest if timestamp is invalid ( catching error on callback)" time="0.1420" classname="AZA2-SB A Server should reject a CreateMonitoredItemRequest if timestamp is invalid ( catching error on callback)">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-T A Server should be able to revise publish interval to avoid trashing if client specify a very small or zero requestedPublishingInterval" time="0.1520" classname="AZA2-T A Server should be able to revise publish interval to avoid trashing if client specify a very small or zero requestedPublishingInterval">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA2- testing server and subscription AZA2-U should handle PublishRequest to confirm closed subscriptions" time="0.4940" classname="AZA2-U should handle PublishRequest to confirm closed subscriptions">
    </testcase>
  </testsuite>
  <testsuite name="AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device" timestamp="2021-02-09T07:07:00" tests="36" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="63.9890" failures="0">
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-A A server should send a StatusChangeNotification (BadTimeout) if the client doesn&apos;t send PublishRequest within the expected interval" time="8.1730" classname="AZA3-A A server should send a StatusChangeNotification (BadTimeout) if the client doesn&apos;t send PublishRequest within the expected interval">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-B A subscription without a monitored item should not dropped too early ( see #59)" time="1.1160" classname="AZA3-B A subscription without a monitored item should not dropped too early ( see #59)">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-C #bytesRead #transactionsCount #bytesWritten" time="0.1160" classname="AZA3-C #bytesRead #transactionsCount #bytesWritten">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-D #CreateMonitoredItemsRequest : A server should return statusCode === BadSubscriptionIdInvalid when appropriate  " time="0.1140" classname="AZA3-D #CreateMonitoredItemsRequest : A server should return statusCode === BadSubscriptionIdInvalid when appropriate  ">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-E #SetPublishingModeRequest: A server should set status codes to BadSubscriptionIdInvalid when appropriate  " time="0.1060" classname="AZA3-E #SetPublishingModeRequest: A server should set status codes to BadSubscriptionIdInvalid when appropriate  ">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-F A server should suspend/resume publishing when client send a setPublishingMode Request " time="7.7710" classname="AZA3-F A server should suspend/resume publishing when client send a setPublishingMode Request ">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-G A client should be able to create a subscription that have  publishingEnable=false" time="0.5170" classname="AZA3-G A client should be able to create a subscription that have  publishingEnable=false">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-H #ModifyMonitoredItemRequest : server should send BadSubscriptionIdInvalid if client send a wrong subscription id" time="0.1200" classname="AZA3-H #ModifyMonitoredItemRequest : server should send BadSubscriptionIdInvalid if client send a wrong subscription id">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-I #ModifyMonitoredItemRequest : server should send BadSubscriptionIdInvalid if client send a wrong subscription id" time="0.1330" classname="AZA3-I #ModifyMonitoredItemRequest : server should send BadSubscriptionIdInvalid if client send a wrong subscription id">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-J #ModifyMonitoredItemRequest : server should send BadMonitoredItemIdInvalid  if client send a wrong monitored item id" time="0.1450" classname="AZA3-J #ModifyMonitoredItemRequest : server should send BadMonitoredItemIdInvalid  if client send a wrong monitored item id">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-K #ModifyMonitoredItemRequest : server should handle samplingInterval === -1" time="5.0230" classname="AZA3-K #ModifyMonitoredItemRequest : server should handle samplingInterval === -1">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-L #ModifyMonitoredItemRequest : server should handle samplingInterval === 0" time="5.0170" classname="AZA3-L #ModifyMonitoredItemRequest : server should handle samplingInterval === 0">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-M #ModifyMonitoredItemsRequest : a client should be able to modify a monitored item" time="5.0020" classname="AZA3-M #ModifyMonitoredItemsRequest : a client should be able to modify a monitored item">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-N #ModifyMonitoredItemRequest on a non-Value attribute: server should handle samplingInterval === 0" time="3.1380" classname="AZA3-N #ModifyMonitoredItemRequest on a non-Value attribute: server should handle samplingInterval === 0">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-O #ModifyMonitoredItemRequest on a non-Value attribute: server should handle samplingInterval &gt; 0" time="3.1670" classname="AZA3-O #ModifyMonitoredItemRequest on a non-Value attribute: server should handle samplingInterval &gt; 0">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-P #ModifyMonitoredItemRequest on a non-Value attribute: server should handle samplingInterval === -1" time="3.1600" classname="AZA3-P #ModifyMonitoredItemRequest on a non-Value attribute: server should handle samplingInterval === -1">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-Q a monitored item with the nodeId set to that of a non-Variable node an  and the attributeId set to a non-Value attribute should send a DataChangeNotification" time="2.1170" classname="AZA3-Q a monitored item with the nodeId set to that of a non-Variable node an  and the attributeId set to a non-Value attribute should send a DataChangeNotification">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-R Server should revise publishingInterval to be at least server minimum publishing interval" time="0.1090" classname="AZA3-R Server should revise publishingInterval to be at least server minimum publishing interval">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-S when createMonitored Item samplingInterval is Zero server shall return the fastest possible sampling rate" time="0.0990" classname="AZA3-S when createMonitored Item samplingInterval is Zero server shall return the fastest possible sampling rate">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-T when createMonitored Item samplingInterval is -1 (minus one) server shall return the sampling rate of the subscription 1/2" time="0.0990" classname="AZA3-T when createMonitored Item samplingInterval is -1 (minus one) server shall return the sampling rate of the subscription 1/2">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-U when createMonitored Item samplingInterval is -1 (minus one) server shall return the sampling rate of the subscription 2/2" time="0.1000" classname="AZA3-U when createMonitored Item samplingInterval is -1 (minus one) server shall return the sampling rate of the subscription 2/2">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device AZA3-V when createMonitored Item samplingInterval is too small, server shall return the sampling rate of the subscription" time="0.1030" classname="AZA3-V when createMonitored Item samplingInterval is too small, server shall return the sampling rate of the subscription">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #CTT1 - should make sure that only the latest value is returned when queue size is one and discard oldest is false" time="1.6910" classname="#CTT1 - should make sure that only the latest value is returned when queue size is one and discard oldest is false">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #CTT2 - should make sure that only the latest value is returned when queue size is one and discard oldest is true" time="1.6920" classname="#CTT2 - should make sure that only the latest value is returned when queue size is one and discard oldest is true">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #CTT3 - should make sure that only the last 2 values are returned when queue size is two and discard oldest is TRUE" time="2.7150" classname="#CTT3 - should make sure that only the last 2 values are returned when queue size is two and discard oldest is TRUE">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #CTT4 - should make sure that only the last 2 values are returned when queue size is two and discard oldest is false" time="2.6980" classname="#CTT4 - should make sure that only the last 2 values are returned when queue size is two and discard oldest is false">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #CTT5 Monitoring a non-Variable node with delayed PublishRequest:" time="0.1420" classname="#CTT5 Monitoring a non-Variable node with delayed PublishRequest:">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #CTT6 Late Publish should have data" time="6.6190" classname="#CTT6 Late Publish should have data">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #ModifySubscriptionRequest: should return BadSubscriptionIdInvalid if client specifies a invalid subscriptionId" time="0.0910" classname="#ModifySubscriptionRequest: should return BadSubscriptionIdInvalid if client specifies a invalid subscriptionId">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #ModifySubscriptionRequest: should return StatusGood" time="0.1450" classname="#ModifySubscriptionRequest: should return StatusGood">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #SetMonitoringMode, should return BadSubscriptionIdInvalid when subscriptionId is invalid" time="0.1320" classname="#SetMonitoringMode, should return BadSubscriptionIdInvalid when subscriptionId is invalid">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #SetMonitoringMode, should return BadNothingToDo if monitoredItemId is empty" time="0.1040" classname="#SetMonitoringMode, should return BadNothingToDo if monitoredItemId is empty">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #SetMonitoringMode, should return BadMonitoredItemIdInvalid is monitoringMode is invalid" time="0.1030" classname="#SetMonitoringMode, should return BadMonitoredItemIdInvalid is monitoringMode is invalid">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #SetMonitoringMode, should return BadMonitoredItemIdInvalid when monitoredItem is invalid" time="0.1110" classname="#SetMonitoringMode, should return BadMonitoredItemIdInvalid when monitoredItem is invalid">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #SetMonitoringMode, should return Good when request is valid" time="0.1240" classname="#SetMonitoringMode, should return Good when request is valid">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #subscription operations should extend subscription lifetime" time="2.1770" classname="#subscription operations should extend subscription lifetime">
    </testcase>
  </testsuite>
  <testsuite name="#CTT - Monitored Value Change" timestamp="2021-02-09T07:08:04" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.8700" failures="0">
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #CTT - Monitored Value Change should monitor a substring " time="0.2430" classname="should monitor a substring ">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #CTT - Monitored Value Change ZZE it should return a publish Response with Bad_IndexRangeNoData , when the size of the monitored item change" time="0.6270" classname="ZZE it should return a publish Response with Bad_IndexRangeNoData , when the size of the monitored item change">
    </testcase>
  </testsuite>
  <testsuite name="#Republish" timestamp="2021-02-09T07:08:04" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.5830" failures="0">
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #Republish server should handle Republish request (BadMessageNotAvailable) " time="0.2150" classname="server should handle Republish request (BadMessageNotAvailable) ">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #Republish server should handle Republish request (BadSubscriptionIdInvalid) " time="0.1890" classname="server should handle Republish request (BadSubscriptionIdInvalid) ">
    </testcase>
    <testcase name="testing Client - Umbrella-E  AZA3- testing Client-Server subscription use case 2/2, on a fake server exposing the temperature device #Republish server should handle Republish request (Good) " time="0.1790" classname="server should handle Republish request (Good) ">
    </testcase>
  </testsuite>
  <testsuite name="testing Client - Umbrella-F" timestamp="2021-02-09T07:08:05" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Client Subscription with Event monitoring" timestamp="2021-02-09T07:08:07" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesF.js" time="0.7550" failures="0">
    <testcase name="testing Client - Umbrella-F Client Subscription with Event monitoring ZZ1 CreateMonitoredItemsRequest: server should not accept en Event filter if node attribute to monitor is not EventNotifier" time="0.1710" classname="ZZ1 CreateMonitoredItemsRequest: server should not accept en Event filter if node attribute to monitor is not EventNotifier">
    </testcase>
    <testcase name="testing Client - Umbrella-F Client Subscription with Event monitoring ZY2 should create a monitoredItem on a event without an Event Filter " time="0.1080" classname="ZY2 should create a monitoredItem on a event without an Event Filter ">
    </testcase>
    <testcase name="testing Client - Umbrella-F Client Subscription with Event monitoring ZZ2 should create a monitoredItem on a event with an Event Filter " time="0.1150" classname="ZZ2 should create a monitoredItem on a event with an Event Filter ">
    </testcase>
    <testcase name="testing Client - Umbrella-F Client Subscription with Event monitoring ZZ2B should modify parameters of a monitoredItem on a event (Modify Event)" time="0.1070" classname="ZZ2B should modify parameters of a monitoredItem on a event (Modify Event)">
    </testcase>
    <testcase name="testing Client - Umbrella-F Client Subscription with Event monitoring ZZ3 Client: should raise a error if a filter is specified when monitoring some attributes which are not Value or EventNotifier" time="0.1110" classname="ZZ3 Client: should raise a error if a filter is specified when monitoring some attributes which are not Value or EventNotifier">
    </testcase>
    <testcase name="testing Client - Umbrella-F Client Subscription with Event monitoring ZZ4 Client: should raise a error if filter is not of type EventFilter when monitoring an event" time="0.1430" classname="ZZ4 Client: should raise a error if filter is not of type EventFilter when monitoring an event">
    </testcase>
  </testsuite>
  <testsuite name="ZZA- Testing Server generating Event and client receiving Event Notification" timestamp="2021-02-09T07:08:08" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesF.js" time="1.1650" failures="0">
    <testcase name="testing Client - Umbrella-F Client Subscription with Event monitoring ZZA- Testing Server generating Event and client receiving Event Notification TE1 - should monitored Server Event" time="1.1650" classname="TE1 - should monitored Server Event">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #144 - Server with Client &amp; active subscription, connection broken , reconnection =&gt; No data Lost" timestamp="2021-02-09T07:08:09" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesF.js" time="10.1570" failures="0">
    <testcase name="testing Client - Umbrella-F Testing bug #144 - Server with Client &amp; active subscription, connection broken , reconnection =&gt; No data Lost #144-A should 1" time="10.1570" classname="#144-A should 1">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #156 - monitoring a variable with a sampling rate which is faster that the time taken to acquire the variable value" timestamp="2021-02-09T07:08:19" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="3.1100" failures="0">
    <testcase name="testing Client - Umbrella-F Testing bug #156 - monitoring a variable with a sampling rate which is faster that the time taken to acquire the variable value test" time="3.1100" classname="test">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #123 - monitoring multiple variables on same subscription" timestamp="2021-02-09T07:08:22" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.1430" failures="0">
    <testcase name="testing Client - Umbrella-F Testing bug #123 - monitoring multiple variables on same subscription test" time="1.1430" classname="test">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #163 " timestamp="2021-02-09T07:08:23" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="3.1500" failures="0">
    <testcase name="testing Client - Umbrella-F Testing bug #163  test" time="3.1500" classname="test">
    </testcase>
  </testsuite>
  <testsuite name="Testing #135 - a server should expose currentMonitoredItemsCount" timestamp="2021-02-09T07:08:26" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1210" failures="0">
    <testcase name="testing Client - Umbrella-F Testing #135 - a server should expose currentMonitoredItemsCount should expose currentMonitoredItemsCount" time="0.1210" classname="should expose currentMonitoredItemsCount">
    </testcase>
  </testsuite>
  <testsuite name="Testing enhancement request #192 " timestamp="2021-02-09T07:08:27" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0430" failures="0">
    <testcase name="testing Client - Umbrella-F Testing enhancement request #192  #191 Server should receive an &apos;newChannel&apos; event when a new channel is established and a &apos;closeChannel&apos; when it close" time="0.0430" classname="#191 Server should receive an &apos;newChannel&apos; event when a new channel is established and a &apos;closeChannel&apos; when it close">
    </testcase>
  </testsuite>
  <testsuite name="Testing #195" timestamp="2021-02-09T07:08:27" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesF.js" time="0.8580" failures="0">
    <testcase name="testing Client - Umbrella-F Testing #195 #195-A the node-opcua client shall automatically detect the maximum number of pending publish request supported by the server and avoid overflowing the server with too many" time="0.1910" classname="#195-A the node-opcua client shall automatically detect the maximum number of pending publish request supported by the server and avoid overflowing the server with too many">
    </testcase>
    <testcase name="testing Client - Umbrella-F Testing #195 NXX1 #195-B a client shall detect when the server has closed a session due to timeout and  inactive subscriptions" time="0.6670" classname="NXX1 #195-B a client shall detect when the server has closed a session due to timeout and  inactive subscriptions">
    </testcase>
  </testsuite>
  <testsuite name="Testing server when client sessionName  is not defined   #198" timestamp="2021-02-09T07:08:27" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1230" failures="0">
    <testcase name="testing Client - Umbrella-F Testing server when client sessionName  is not defined   #198 #198 Server should handle client createSession without complaining if client&apos;s provided sessionName is null or undefined" time="0.1230" classname="#198 Server should handle client createSession without complaining if client&apos;s provided sessionName is null or undefined">
    </testcase>
  </testsuite>
  <testsuite name="Testing enhancement request  #205 -  set client name to get meaningful session name" timestamp="2021-02-09T07:08:28" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.3620" failures="0">
    <testcase name="testing Client - Umbrella-F Testing enhancement request  #205 -  set client name to get meaningful session name Default client sessionName " time="0.2050" classname="Default client sessionName ">
    </testcase>
    <testcase name="testing Client - Umbrella-F Testing enhancement request  #205 -  set client name to get meaningful session name should be possible to set the clientName to get more expressive  sessionName " time="0.1570" classname="should be possible to set the clientName to get more expressive  sessionName ">
    </testcase>
  </testsuite>
  <testsuite name="NXX1 Testing issue  #214 -  DataChangeTrigger.StatusValueTimestamp" timestamp="2021-02-09T07:08:28" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="2.1260" failures="0">
    <testcase name="testing Client - Umbrella-F NXX1 Testing issue  #214 -  DataChangeTrigger.StatusValueTimestamp #214 -  DataChangeTrigger.StatusValueTimestamp" time="2.1260" classname="#214 -  DataChangeTrigger.StatusValueTimestamp">
    </testcase>
  </testsuite>
  <testsuite name="testing session#translateBrowsePath" timestamp="2021-02-09T07:08:30" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2000" failures="0">
    <testcase name="testing Client - Umbrella-F testing session#translateBrowsePath TBP1 should translate browse path" time="0.0930" classname="TBP1 should translate browse path">
    </testcase>
    <testcase name="testing Client - Umbrella-F testing session#translateBrowsePath TBP2 server should return BadNothingToDo when the translateBrowsePath browse path relativePath is empty" time="0.1070" classname="TBP2 server should return BadNothingToDo when the translateBrowsePath browse path relativePath is empty">
    </testcase>
  </testsuite>
  <testsuite name="AZAZ Testing 50 clients" timestamp="2021-02-09T07:08:30" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesF.js" time="5.3980" failures="0">
    <testcase name="testing Client - Umbrella-F AZAZ Testing 50 clients AZAZ-A should accept many clients" time="5.3980" classname="AZAZ-A should accept many clients">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #73 -  Server resets sequence number after secure channel renewal " timestamp="2021-02-09T07:08:36" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="3.1430" failures="0">
    <testcase name="testing Client - Umbrella-F Testing bug #73 -  Server resets sequence number after secure channel renewal  should not reset sequence number after secure channel renewal " time="3.1430" classname="should not reset sequence number after secure channel renewal ">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #119 - Verify that monitored item only reports expected value change notifications :" timestamp="2021-02-09T07:08:39" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="7.5410" failures="0">
    <testcase name="testing Client - Umbrella-F Testing bug #119 - Verify that monitored item only reports expected value change notifications : monitoring variables shall only reports real value changes : fixing bug #119" time="5.3810" classname="monitoring variables shall only reports real value changes : fixing bug #119">
    </testcase>
    <testcase name="testing Client - Umbrella-F Testing bug #119 - Verify that monitored item only reports expected value change notifications : a server that have a fast sampling rate shall not report &apos;value changes&apos; on monitored item faster than the sampling rate imposed by the client" time="2.1600" classname="a server that have a fast sampling rate shall not report &apos;value changes&apos; on monitored item faster than the sampling rate imposed by the client">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #141 -  Client should have a appropriated timeoutHint on PublishRequest " timestamp="2021-02-09T07:08:46" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="35.3350" failures="0">
    <testcase name="testing Client - Umbrella-F Testing bug #141 -  Client should have a appropriated timeoutHint on PublishRequest  #141-A Client#Subscription : PublishRequest.requestHeader.timeoutHint shall not be lesser that time between 2 keepalive responses" time="25.1970" classname="#141-A Client#Subscription : PublishRequest.requestHeader.timeoutHint shall not be lesser that time between 2 keepalive responses">
    </testcase>
    <testcase name="testing Client - Umbrella-F Testing bug #141 -  Client should have a appropriated timeoutHint on PublishRequest  #141-B client should raise an event to observer when a request has timed out ( timeoutHint exhausted without response)" time="10.1380" classname="#141-B client should raise an event to observer when a request has timed out ( timeoutHint exhausted without response)">
    </testcase>
  </testsuite>
  <testsuite name="Testing bug #146 - reopenning Anonymous Session with Username password" timestamp="2021-02-09T07:09:22" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesF.js" time="0.1640" failures="0">
    <testcase name="testing Client - Umbrella-F Testing bug #146 - reopenning Anonymous Session with Username password should reopen a Anonymous Session with UserName password " time="0.1640" classname="should reopen a Anonymous Session with UserName password ">
    </testcase>
  </testsuite>
  <testsuite name="JHJ1 end-to-end testing of read and write operation on a Variable" timestamp="2021-02-09T07:09:22" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesF.js" time="0.3960" failures="0">
    <testcase name="testing Client - Umbrella-F JHJ1 end-to-end testing of read and write operation on a Variable writing dataValue case 1 - both serverTimestamp and sourceTimestamp are specified " time="0.1070" classname="writing dataValue case 1 - both serverTimestamp and sourceTimestamp are specified ">
    </testcase>
    <testcase name="testing Client - Umbrella-F JHJ1 end-to-end testing of read and write operation on a Variable writing dataValue case 2 - serverTimestamp is null &amp; sourceTimestamp is specified" time="0.0950" classname="writing dataValue case 2 - serverTimestamp is null &amp; sourceTimestamp is specified">
    </testcase>
    <testcase name="testing Client - Umbrella-F JHJ1 end-to-end testing of read and write operation on a Variable writing dataValue case 3 - serverTimestamp is null &amp; sourceTimestamp is null " time="0.0980" classname="writing dataValue case 3 - serverTimestamp is null &amp; sourceTimestamp is null ">
    </testcase>
    <testcase name="testing Client - Umbrella-F JHJ1 end-to-end testing of read and write operation on a Variable ZZZ reading ns=2;s=Scalar_Static_Int16 " time="0.0960" classname="ZZZ reading ns=2;s=Scalar_Static_Int16 ">
    </testcase>
  </testsuite>
  <testsuite name="Performance of reading large array" timestamp="2021-02-09T07:09:22" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-end2end-test\test\end_to_end\test_umbrella_e2e_seriesF.js" time="0.3250" failures="0">
    <testcase name="testing Client - Umbrella-F JHJ1 end-to-end testing of read and write operation on a Variable Performance of reading large array PERF - READ testing performance of large array" time="0.0980" classname="PERF - READ testing performance of large array">
    </testcase>
    <testcase name="testing Client - Umbrella-F JHJ1 end-to-end testing of read and write operation on a Variable Performance of reading large array PERF - WRITE testing performance of large array" time="0.2270" classname="PERF - WRITE testing performance of large array">
    </testcase>
  </testsuite>
  <testsuite name="testing Client-Server with UserName/Password identity token" timestamp="2021-02-09T07:09:23" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.8980" failures="0">
    <testcase name="testing Client-Server with UserName/Password identity token should not anonymously connect to a server that forbids anonymous connection : anonymous connection" time="0.0650" classname="should not anonymously connect to a server that forbids anonymous connection : anonymous connection">
    </testcase>
    <testcase name="testing Client-Server with UserName/Password identity token should not connect to a server using username/password authentication and invalid credentials " time="0.0560" classname="should not connect to a server using username/password authentication and invalid credentials ">
    </testcase>
    <testcase name="testing Client-Server with UserName/Password identity token should connect to a server using username/password authentication and valid credentials - anonymous connection " time="0.1670" classname="should connect to a server using username/password authentication and valid credentials - anonymous connection ">
    </testcase>
    <testcase name="testing Client-Server with UserName/Password identity token should fail connect to a server using username/password authentication and invalid credentials - secure connection  - 128 bits" time="0.0890" classname="should fail connect to a server using username/password authentication and invalid credentials - secure connection  - 128 bits">
    </testcase>
    <testcase name="testing Client-Server with UserName/Password identity token should connect to a server using username/password authentication and valid credentials - secure connection  - 128 bits" time="0.1340" classname="should connect to a server using username/password authentication and valid credentials - secure connection  - 128 bits">
    </testcase>
    <testcase name="testing Client-Server with UserName/Password identity token should connect to a server using username/password authentication and valid credentials - secure connection - 256 bits " time="0.1330" classname="should connect to a server using username/password authentication and valid credentials - secure connection - 256 bits ">
    </testcase>
    <testcase name="testing Client-Server with UserName/Password identity token #158 should connect to a server using LOCALHOST url &amp; username/password authentication and valid credentials - secure connection  - 128 bits" time="0.1280" classname="#158 should connect to a server using LOCALHOST url &amp; username/password authentication and valid credentials - secure connection  - 128 bits">
    </testcase>
    <testcase name="testing Client-Server with UserName/Password identity token should connect to a server using asynchronous username/password authentication and valid credentials - secure connection - 256 bits " time="0.1260" classname="should connect to a server using asynchronous username/password authentication and valid credentials - secure connection - 256 bits ">
    </testcase>
  </testsuite>
  <testsuite name="ZZA- testing Secure Client-Server communication" timestamp="2021-02-09T07:09:24" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="2.1540" failures="0">
    <testcase name="ZZA- testing Secure Client-Server communication QQQ1 a client shall be able to establish a SIGNED connection with a server" time="0.1200" classname="QQQ1 a client shall be able to establish a SIGNED connection with a server">
    </testcase>
    <testcase name="ZZA- testing Secure Client-Server communication QQQ2 a client shall be able to establish a SIGN&amp;ENCRYPT connection with a server and a 1024 bit client certificate" time="0.1690" classname="QQQ2 a client shall be able to establish a SIGN&amp;ENCRYPT connection with a server and a 1024 bit client certificate">
    </testcase>
    <testcase name="ZZA- testing Secure Client-Server communication QQQ3 a client shall be able to establish a SIGN&amp;ENCRYPT connection with a server and a 2048 bit client certificate" time="0.1190" classname="QQQ3 a client shall be able to establish a SIGN&amp;ENCRYPT connection with a server and a 2048 bit client certificate">
    </testcase>
    <testcase name="ZZA- testing Secure Client-Server communication QQQ3b a client shall be able to establish a SIGN&amp;ENCRYPT connection with a server and a 2048 bit client certificate" time="0.1110" classname="QQQ3b a client shall be able to establish a SIGN&amp;ENCRYPT connection with a server and a 2048 bit client certificate">
    </testcase>
    <testcase name="ZZA- testing Secure Client-Server communication QQQ4 server shall reject secure connection when client provides a nonce with the wrong length" time="0.4420" classname="QQQ4 server shall reject secure connection when client provides a nonce with the wrong length">
    </testcase>
    <testcase name="ZZA- testing Secure Client-Server communication QQQ5 a token shall be updated on a regular basis" time="1.1930" classname="QQQ5 a token shall be updated on a regular basis">
    </testcase>
  </testsuite>
  <testsuite name="ZZB- testing server behavior on secure connection " timestamp="2021-02-09T07:09:27" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="5.1360" failures="0">
    <testcase name="ZZB- testing server behavior on secure connection  ZZB-1 server shall shutdown the connection if client doesn&apos;t renew security token on time" time="5.1360" classname="ZZB-1 server shall shutdown the connection if client doesn&apos;t renew security token on time">
    </testcase>
  </testsuite>
  <testsuite name="ZZC- testing Security Policy with a valid 1024 bit certificate on server" timestamp="2021-02-09T07:09:33" tests="37" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="16.2860" failures="0">
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(3072 bits certificate on client)" time="0.5920" classname="should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(3072 bits certificate on client)" time="0.5390" classname="should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(3072 bits certificate on client)" time="0.5550" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256       with Sign            (1024 bits certificate on server)(3072 bits certificate on client)" time="0.5560" classname="should succeed with Basic256       with Sign            (1024 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (1024 bits certificate on server)(3072 bits certificate on client)" time="0.5730" classname="should succeed with Basic256       with SignAndEncrypt  (1024 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should fail    with Basic256Rsa15  with Sign            (1024 bits certificate on server)(3072 bits certificate on client)" time="0.0530" classname="should fail    with Basic256Rsa15  with Sign            (1024 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(3072 bits certificate on client)" time="0.0450" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256Sha256 with Sign            (1024 bits certificate on server)(3072 bits certificate on client)" time="0.5520" classname="should succeed with Basic256Sha256 with Sign            (1024 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (1024 bits certificate on server)(3072 bits certificate on client)" time="0.5350" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (1024 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(4096 bits certificate on client)" time="0.5690" classname="should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(4096 bits certificate on client)" time="0.5730" classname="should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(4096 bits certificate on client)" time="0.5700" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256       with Sign            (1024 bits certificate on server)(4096 bits certificate on client)" time="0.5830" classname="should succeed with Basic256       with Sign            (1024 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (1024 bits certificate on server)(4096 bits certificate on client)" time="0.5830" classname="should succeed with Basic256       with SignAndEncrypt  (1024 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should fail    with Basic256Rsa15  with Sign            (1024 bits certificate on server)(4096 bits certificate on client)" time="0.0470" classname="should fail    with Basic256Rsa15  with Sign            (1024 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(4096 bits certificate on client)" time="0.0500" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256Sha256 with Sign            (1024 bits certificate on server)(4096 bits certificate on client)" time="0.6120" classname="should succeed with Basic256Sha256 with Sign            (1024 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (1024 bits certificate on server)(4096 bits certificate on client)" time="0.5700" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (1024 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(2048 bits certificate on client)" time="0.5310" classname="should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(2048 bits certificate on client)" time="0.5310" classname="should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(2048 bits certificate on client)" time="0.5890" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256       with Sign            (1024 bits certificate on server)(2048 bits certificate on client)" time="0.6280" classname="should succeed with Basic256       with Sign            (1024 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (1024 bits certificate on server)(2048 bits certificate on client)" time="0.5510" classname="should succeed with Basic256       with SignAndEncrypt  (1024 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should fail    with Basic256Rsa15  with Sign            (1024 bits certificate on server)(2048 bits certificate on client)" time="0.0590" classname="should fail    with Basic256Rsa15  with Sign            (1024 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(2048 bits certificate on client)" time="0.0610" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256Sha256 with Sign            (1024 bits certificate on server)(2048 bits certificate on client)" time="0.5490" classname="should succeed with Basic256Sha256 with Sign            (1024 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (1024 bits certificate on server)(2048 bits certificate on client)" time="0.5490" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (1024 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(1024 bits certificate on client)" time="0.5310" classname="should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(1024 bits certificate on client)" time="0.5350" classname="should succeed with Basic128Rsa15  with Sign            (1024 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(1024 bits certificate on client)" time="0.5490" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256       with Sign            (1024 bits certificate on server)(1024 bits certificate on client)" time="0.5420" classname="should succeed with Basic256       with Sign            (1024 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (1024 bits certificate on server)(1024 bits certificate on client)" time="0.5670" classname="should succeed with Basic256       with SignAndEncrypt  (1024 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should fail    with Basic256Rsa15  with Sign            (1024 bits certificate on server)(1024 bits certificate on client)" time="0.0640" classname="should fail    with Basic256Rsa15  with Sign            (1024 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(1024 bits certificate on client)" time="0.0600" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (1024 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256Sha256 with Sign            (1024 bits certificate on server)(1024 bits certificate on client)" time="0.5880" classname="should succeed with Basic256Sha256 with Sign            (1024 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (1024 bits certificate on server)(1024 bits certificate on client)" time="0.5650" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (1024 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZC- testing Security Policy with a valid 1024 bit certificate on server connection should fail if security mode requested by client is not supported by server" time="0.0800" classname="connection should fail if security mode requested by client is not supported by server">
    </testcase>
  </testsuite>
  <testsuite name="ZZD- testing Security Policy with a valid 2048 bit certificate on server" timestamp="2021-02-09T07:09:50" tests="37" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="17.8030" failures="0">
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(3072 bits certificate on client)" time="0.6390" classname="should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(3072 bits certificate on client)" time="0.6360" classname="should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(3072 bits certificate on client)" time="0.5850" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256       with Sign            (2048 bits certificate on server)(3072 bits certificate on client)" time="0.6620" classname="should succeed with Basic256       with Sign            (2048 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (2048 bits certificate on server)(3072 bits certificate on client)" time="0.6440" classname="should succeed with Basic256       with SignAndEncrypt  (2048 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should fail    with Basic256Rsa15  with Sign            (2048 bits certificate on server)(3072 bits certificate on client)" time="0.0810" classname="should fail    with Basic256Rsa15  with Sign            (2048 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(3072 bits certificate on client)" time="0.0640" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256Sha256 with Sign            (2048 bits certificate on server)(3072 bits certificate on client)" time="0.6040" classname="should succeed with Basic256Sha256 with Sign            (2048 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (2048 bits certificate on server)(3072 bits certificate on client)" time="0.6040" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (2048 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(4096 bits certificate on client)" time="0.6400" classname="should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(4096 bits certificate on client)" time="0.6470" classname="should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(4096 bits certificate on client)" time="0.6990" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256       with Sign            (2048 bits certificate on server)(4096 bits certificate on client)" time="0.6190" classname="should succeed with Basic256       with Sign            (2048 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (2048 bits certificate on server)(4096 bits certificate on client)" time="0.5940" classname="should succeed with Basic256       with SignAndEncrypt  (2048 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should fail    with Basic256Rsa15  with Sign            (2048 bits certificate on server)(4096 bits certificate on client)" time="0.0530" classname="should fail    with Basic256Rsa15  with Sign            (2048 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(4096 bits certificate on client)" time="0.0510" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256Sha256 with Sign            (2048 bits certificate on server)(4096 bits certificate on client)" time="0.6260" classname="should succeed with Basic256Sha256 with Sign            (2048 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (2048 bits certificate on server)(4096 bits certificate on client)" time="0.6950" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (2048 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(2048 bits certificate on client)" time="0.5710" classname="should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(2048 bits certificate on client)" time="0.5710" classname="should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(2048 bits certificate on client)" time="0.5650" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256       with Sign            (2048 bits certificate on server)(2048 bits certificate on client)" time="0.6100" classname="should succeed with Basic256       with Sign            (2048 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (2048 bits certificate on server)(2048 bits certificate on client)" time="0.6820" classname="should succeed with Basic256       with SignAndEncrypt  (2048 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should fail    with Basic256Rsa15  with Sign            (2048 bits certificate on server)(2048 bits certificate on client)" time="0.0880" classname="should fail    with Basic256Rsa15  with Sign            (2048 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(2048 bits certificate on client)" time="0.0690" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256Sha256 with Sign            (2048 bits certificate on server)(2048 bits certificate on client)" time="0.6100" classname="should succeed with Basic256Sha256 with Sign            (2048 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (2048 bits certificate on server)(2048 bits certificate on client)" time="0.6110" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (2048 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(1024 bits certificate on client)" time="0.5580" classname="should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(1024 bits certificate on client)" time="0.5730" classname="should succeed with Basic128Rsa15  with Sign            (2048 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(1024 bits certificate on client)" time="0.5980" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256       with Sign            (2048 bits certificate on server)(1024 bits certificate on client)" time="0.5710" classname="should succeed with Basic256       with Sign            (2048 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (2048 bits certificate on server)(1024 bits certificate on client)" time="0.5810" classname="should succeed with Basic256       with SignAndEncrypt  (2048 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should fail    with Basic256Rsa15  with Sign            (2048 bits certificate on server)(1024 bits certificate on client)" time="0.0910" classname="should fail    with Basic256Rsa15  with Sign            (2048 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(1024 bits certificate on client)" time="0.0800" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (2048 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256Sha256 with Sign            (2048 bits certificate on server)(1024 bits certificate on client)" time="0.5770" classname="should succeed with Basic256Sha256 with Sign            (2048 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (2048 bits certificate on server)(1024 bits certificate on client)" time="0.5530" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (2048 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD- testing Security Policy with a valid 2048 bit certificate on server connection should fail if security mode requested by client is not supported by server" time="0.1010" classname="connection should fail if security mode requested by client is not supported by server">
    </testcase>
  </testsuite>
  <testsuite name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server" timestamp="2021-02-09T07:10:09" tests="37" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="18.1080" failures="0">
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(3072 bits certificate on client)" time="0.5930" classname="should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(3072 bits certificate on client)" time="0.6470" classname="should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(3072 bits certificate on client)" time="0.6420" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256       with Sign            (4096 bits certificate on server)(3072 bits certificate on client)" time="0.6390" classname="should succeed with Basic256       with Sign            (4096 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (4096 bits certificate on server)(3072 bits certificate on client)" time="0.6320" classname="should succeed with Basic256       with SignAndEncrypt  (4096 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should fail    with Basic256Rsa15  with Sign            (4096 bits certificate on server)(3072 bits certificate on client)" time="0.0550" classname="should fail    with Basic256Rsa15  with Sign            (4096 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(3072 bits certificate on client)" time="0.0540" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256Sha256 with Sign            (4096 bits certificate on server)(3072 bits certificate on client)" time="0.6400" classname="should succeed with Basic256Sha256 with Sign            (4096 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (4096 bits certificate on server)(3072 bits certificate on client)" time="0.6450" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (4096 bits certificate on server)(3072 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(4096 bits certificate on client)" time="0.6610" classname="should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(4096 bits certificate on client)" time="0.6490" classname="should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(4096 bits certificate on client)" time="0.6860" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256       with Sign            (4096 bits certificate on server)(4096 bits certificate on client)" time="0.6760" classname="should succeed with Basic256       with Sign            (4096 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (4096 bits certificate on server)(4096 bits certificate on client)" time="0.6380" classname="should succeed with Basic256       with SignAndEncrypt  (4096 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should fail    with Basic256Rsa15  with Sign            (4096 bits certificate on server)(4096 bits certificate on client)" time="0.0480" classname="should fail    with Basic256Rsa15  with Sign            (4096 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(4096 bits certificate on client)" time="0.0600" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256Sha256 with Sign            (4096 bits certificate on server)(4096 bits certificate on client)" time="0.6380" classname="should succeed with Basic256Sha256 with Sign            (4096 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (4096 bits certificate on server)(4096 bits certificate on client)" time="0.7660" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (4096 bits certificate on server)(4096 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(2048 bits certificate on client)" time="0.5750" classname="should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(2048 bits certificate on client)" time="0.5800" classname="should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(2048 bits certificate on client)" time="0.5670" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256       with Sign            (4096 bits certificate on server)(2048 bits certificate on client)" time="0.5840" classname="should succeed with Basic256       with Sign            (4096 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (4096 bits certificate on server)(2048 bits certificate on client)" time="0.6340" classname="should succeed with Basic256       with SignAndEncrypt  (4096 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should fail    with Basic256Rsa15  with Sign            (4096 bits certificate on server)(2048 bits certificate on client)" time="0.0450" classname="should fail    with Basic256Rsa15  with Sign            (4096 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(2048 bits certificate on client)" time="0.0500" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256Sha256 with Sign            (4096 bits certificate on server)(2048 bits certificate on client)" time="0.5870" classname="should succeed with Basic256Sha256 with Sign            (4096 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (4096 bits certificate on server)(2048 bits certificate on client)" time="0.6210" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (4096 bits certificate on server)(2048 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(1024 bits certificate on client)" time="0.6230" classname="should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(1024 bits certificate on client)" time="0.5970" classname="should succeed with Basic128Rsa15  with Sign            (4096 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic128Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(1024 bits certificate on client)" time="0.6230" classname="should succeed with Basic128Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256       with Sign            (4096 bits certificate on server)(1024 bits certificate on client)" time="0.6360" classname="should succeed with Basic256       with Sign            (4096 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256       with SignAndEncrypt  (4096 bits certificate on server)(1024 bits certificate on client)" time="0.6210" classname="should succeed with Basic256       with SignAndEncrypt  (4096 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should fail    with Basic256Rsa15  with Sign            (4096 bits certificate on server)(1024 bits certificate on client)" time="0.0560" classname="should fail    with Basic256Rsa15  with Sign            (4096 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should fail    with Basic256Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(1024 bits certificate on client)" time="0.0430" classname="should fail    with Basic256Rsa15  with SignAndEncrypt  (4096 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256Sha256 with Sign            (4096 bits certificate on server)(1024 bits certificate on client)" time="0.5930" classname="should succeed with Basic256Sha256 with Sign            (4096 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server should succeed with Basic256Sha256 with SignAndEncrypt  (4096 bits certificate on server)(1024 bits certificate on client)" time="0.6270" classname="should succeed with Basic256Sha256 with SignAndEncrypt  (4096 bits certificate on server)(1024 bits certificate on client)">
    </testcase>
    <testcase name="ZZD2- testing Security Policy with a valid 4096 bit certificate on server connection should fail if security mode requested by client is not supported by server" time="0.0770" classname="connection should fail if security mode requested by client is not supported by server">
    </testcase>
  </testsuite>
  <testsuite name="ZZE- testing with various client certificates" timestamp="2021-02-09T07:10:28" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.6010" failures="0">
    <testcase name="ZZE- testing with various client certificates Server should allow a client with a valid certificate to connect" time="0.5250" classname="Server should allow a client with a valid certificate to connect">
    </testcase>
    <testcase name="ZZE- testing with various client certificates REVOKED-CERTIFICATE Server should not allow a client to connect with a revoked certificate" time="0.0760" classname="REVOKED-CERTIFICATE Server should not allow a client to connect with a revoked certificate">
    </testcase>
  </testsuite>
  <testsuite name="testing the server ability to deny client session request (server with maxAllowedSessionNumber = 1)" timestamp="2021-02-09T07:10:29" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.4580" failures="0">
    <testcase name="testing the server ability to deny client session request (server with maxAllowedSessionNumber = 1) Server shall accept a secure client connection with a valid clientSignature" time="0.0860" classname="Server shall accept a secure client connection with a valid clientSignature">
    </testcase>
    <testcase name="testing the server ability to deny client session request (server with maxAllowedSessionNumber = 1) Server shall reject a secure client connection if ActiveSession.clientSignature has the wrong algorithm" time="0.0400" classname="Server shall reject a secure client connection if ActiveSession.clientSignature has the wrong algorithm">
    </testcase>
    <testcase name="testing the server ability to deny client session request (server with maxAllowedSessionNumber = 1) Server shall reject a secure client connection if ActiveSession.clientSignature is missing" time="0.0320" classname="Server shall reject a secure client connection if ActiveSession.clientSignature is missing">
    </testcase>
    <testcase name="testing the server ability to deny client session request (server with maxAllowedSessionNumber = 1) Server shall reject a secure client connection if ActiveSession.clientSignature is tampered" time="0.0370" classname="Server shall reject a secure client connection if ActiveSession.clientSignature is tampered">
    </testcase>
    <testcase name="testing the server ability to deny client session request (server with maxAllowedSessionNumber = 1) Client shall deny server session if server nonce is too small" time="0.0510" classname="Client shall deny server session if server nonce is too small">
    </testcase>
    <testcase name="testing the server ability to deny client session request (server with maxAllowedSessionNumber = 1) TA -#createSession Server  shall return an error if requestHeader.clientNonce has less than 32 bytes" time="0.0270" classname="TA -#createSession Server  shall return an error if requestHeader.clientNonce has less than 32 bytes">
    </testcase>
    <testcase name="testing the server ability to deny client session request (server with maxAllowedSessionNumber = 1) TB - a client shall be able to connect to a server using a SecureChannel without specifying the serverCertificate" time="0.1850" classname="TB - a client shall be able to connect to a server using a SecureChannel without specifying the serverCertificate">
    </testcase>
  </testsuite>
  <testsuite name="testing server with restricted securityModes - Given a server with a single end point SignAndEncrypt/Basic128Rsa15 (and no discovery service on secure channel)" timestamp="2021-02-09T07:10:30" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="4.3810" failures="0">
    <testcase name="testing server with restricted securityModes - Given a server with a single end point SignAndEncrypt/Basic128Rsa15 (and no discovery service on secure channel) should not connect with SecurityMode==None" time="1.0670" classname="should not connect with SecurityMode==None">
    </testcase>
    <testcase name="testing server with restricted securityModes - Given a server with a single end point SignAndEncrypt/Basic128Rsa15 (and no discovery service on secure channel) should not connect with SecurityMode==Sign" time="1.0780" classname="should not connect with SecurityMode==Sign">
    </testcase>
    <testcase name="testing server with restricted securityModes - Given a server with a single end point SignAndEncrypt/Basic128Rsa15 (and no discovery service on secure channel) should not connect with  SecurityMode SignAndEncrypt / Basic256 " time="1.0750" classname="should not connect with  SecurityMode SignAndEncrypt / Basic256 ">
    </testcase>
    <testcase name="testing server with restricted securityModes - Given a server with a single end point SignAndEncrypt/Basic128Rsa15 (and no discovery service on secure channel) should not connect with  SecurityMode SignAndEncrypt / Basic256Sha256 " time="1.0640" classname="should not connect with  SecurityMode SignAndEncrypt / Basic256Sha256 ">
    </testcase>
    <testcase name="testing server with restricted securityModes - Given a server with a single end point SignAndEncrypt/Basic128Rsa15 (and no discovery service on secure channel) should connect with  SecurityMode SignAndEncrypt / Basic128Rsa15 " time="0.0970" classname="should connect with  SecurityMode SignAndEncrypt / Basic128Rsa15 ">
    </testcase>
  </testsuite>
  <testsuite name="testing server with restricted securityModes -#933" timestamp="2021-02-09T07:10:35" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1240" failures="0">
    <testcase name="testing server with restricted securityModes -#933 should not get restricted endpoint (from the discovery endpoint) inside  createSession #933" time="0.1240" classname="should not get restricted endpoint (from the discovery endpoint) inside  createSession #933">
    </testcase>
  </testsuite>
  <testsuite name="Testing ChannelSecurityToken lifetime" timestamp="2021-02-09T07:10:35" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="2.4280" failures="0">
    <testcase name="Testing ChannelSecurityToken lifetime A secure channel should raise a event to notify its client that its token is at 75% of its lifetime" time="0.4250" classname="A secure channel should raise a event to notify its client that its token is at 75% of its lifetime">
    </testcase>
    <testcase name="Testing ChannelSecurityToken lifetime A secure channel should raise a event to notify its client that a token about to expired has been renewed" time="0.4140" classname="A secure channel should raise a event to notify its client that a token about to expired has been renewed">
    </testcase>
    <testcase name="Testing ChannelSecurityToken lifetime A client should periodically renew the expiring security token" time="1.5890" classname="A client should periodically renew the expiring security token">
    </testcase>
  </testsuite>
  <testsuite name="testing Server resilience to DDOS attacks" timestamp="2021-02-09T07:10:38" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="24.1700" failures="0">
    <testcase name="testing Server resilience to DDOS attacks ZAA1 should be possible to create many sessions per connection" time="0.4100" classname="ZAA1 should be possible to create many sessions per connection">
    </testcase>
    <testcase name="testing Server resilience to DDOS attacks ZAA2 When creating a valid/real SecureChannel, prior unused channels should be recycled." time="0.0740" classname="ZAA2 When creating a valid/real SecureChannel, prior unused channels should be recycled.">
    </testcase>
    <testcase name="testing Server resilience to DDOS attacks ZAA3 server should reject connections if all secure channels are used" time="1.1040" classname="ZAA3 server should reject connections if all secure channels are used">
    </testcase>
    <testcase name="testing Server resilience to DDOS attacks ZAA4 Server shall not keep channel that have been disconnected abruptly" time="1.9480" classname="ZAA4 Server shall not keep channel that have been disconnected abruptly">
    </testcase>
    <testcase name="testing Server resilience to DDOS attacks ZAA5 Server shall not keep channel that have been disconnected abruptly - version 2" time="20.6340" classname="ZAA5 Server shall not keep channel that have been disconnected abruptly - version 2">
    </testcase>
  </testsuite>
  <testsuite name="testing Server resilience to DDOS attacks 2" timestamp="2021-02-09T07:11:06" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="11.6800" failures="0">
    <testcase name="testing Server resilience to DDOS attacks 2 ZCCC1 should ban client that constantly reconnect" time="0.0000" classname="ZCCC1 should ban client that constantly reconnect">
    </testcase>
    <testcase name="testing Server resilience to DDOS attacks 2 ZCCC2 should ban client that constantly reconnect" time="11.6800" classname="ZCCC2 should ban client that constantly reconnect">
    </testcase>
  </testsuite>
  <testsuite name="testing behavior of secure Server ( server that only accept Sign or SignAndEncrypt channel" timestamp="2021-02-09T07:11:19" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0940" failures="0">
    <testcase name="testing behavior of secure Server ( server that only accept Sign or SignAndEncrypt channel it should not be possible to create a session on a secure server using a unsecure channel" time="0.0480" classname="it should not be possible to create a session on a secure server using a unsecure channel">
    </testcase>
    <testcase name="testing behavior of secure Server ( server that only accept Sign or SignAndEncrypt channel it should be possible to get endpoint of a secure channel using a unsecure channel" time="0.0460" classname="it should be possible to get endpoint of a secure channel using a unsecure channel">
    </testcase>
  </testsuite>
  <testsuite name="testing Server resilience to unsupported request" timestamp="2021-02-09T07:11:19" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0030" failures="0">
    <testcase name="testing Server resilience to unsupported request server should return a ServiceFault if receiving a unsupported MessageType" time="0.0030" classname="server should return a ServiceFault if receiving a unsupported MessageType">
    </testcase>
  </testsuite>
  <testsuite name="testing Server resilience with bad internet connection" timestamp="2021-02-09T07:11:20" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="4.0650" failures="0">
    <testcase name="testing Server resilience with bad internet connection server should discard session from abruptly disconnected client after the timeout has expired" time="4.0650" classname="server should discard session from abruptly disconnected client after the timeout has expired">
    </testcase>
  </testsuite>
  <testsuite name="Testing server with alternate names" timestamp="2021-02-09T07:11:24" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0780" failures="0">
    <testcase name="Testing server with alternate names should expose all end points" time="0.0780" classname="should expose all end points">
    </testcase>
  </testsuite>
  <testsuite name="Testing server with several endpoints on different TCP/IP port1" timestamp="2021-02-09T07:11:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1540" failures="0">
    <testcase name="Testing server with several endpoints on different TCP/IP port1 should be possible to start a server that have endpoints on different port1" time="0.1540" classname="should be possible to start a server that have endpoints on different port1">
    </testcase>
  </testsuite>
  <testsuite name="Functional test : one server with many concurrent clients" timestamp="2021-02-09T07:11:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="10.6220" failures="0">
    <testcase name="Functional test : one server with many concurrent clients it should allow 50 clients to connect and concurrently monitor some nodeId" time="10.6220" classname="it should allow 50 clients to connect and concurrently monitor some nodeId">
    </testcase>
  </testsuite>
  <testsuite name="testing basic Client Server dealing with subscription at low level" timestamp="2021-02-09T07:11:37" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1860" failures="0">
    <testcase name="testing basic Client Server dealing with subscription at low level server should create a subscription (CreateSubscriptionRequest)" time="0.0340" classname="server should create a subscription (CreateSubscriptionRequest)">
    </testcase>
    <testcase name="testing basic Client Server dealing with subscription at low level server should create a monitored item  (CreateMonitoredItems)" time="0.0230" classname="server should create a monitored item  (CreateMonitoredItems)">
    </testcase>
    <testcase name="testing basic Client Server dealing with subscription at low level server should handle Publish request" time="0.1190" classname="server should handle Publish request">
    </testcase>
    <testcase name="testing basic Client Server dealing with subscription at low level server should handle DeleteMonitoredItems  request" time="0.0060" classname="server should handle DeleteMonitoredItems  request">
    </testcase>
    <testcase name="testing basic Client Server dealing with subscription at low level server should handle SetPublishingMode request" time="0.0030" classname="server should handle SetPublishingMode request">
    </testcase>
    <testcase name="testing basic Client Server dealing with subscription at low level server should handle DeleteSubscriptionsRequest" time="0.0010" classname="server should handle DeleteSubscriptionsRequest">
    </testcase>
  </testsuite>
  <testsuite name="Verifying Server Endpoint" timestamp="2021-02-09T07:11:38" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1220" failures="0">
    <testcase name="Verifying Server Endpoint should not have duplicated policies inside a single endpoint" time="0.0660" classname="should not have duplicated policies inside a single endpoint">
    </testcase>
    <testcase name="Verifying Server Endpoint should not have duplicated policies within the server" time="0.0560" classname="should not have duplicated policies within the server">
    </testcase>
  </testsuite>
  <testsuite name="Test Enum" timestamp="2021-02-09T07:11:39" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-enum\test\test_enum.js" time="0.0030" failures="0">
    <testcase name="Test Enum should create flaggable enum from string array" time="0.0010" classname="should create flaggable enum from string array">
    </testcase>
    <testcase name="Test Enum should create flaggable enum from flaggable map" time="0.0010" classname="should create flaggable enum from flaggable map">
    </testcase>
    <testcase name="Test Enum should create non-flaggable enum from non-flaggable map" time="0.0000" classname="should create non-flaggable enum from non-flaggable map">
    </testcase>
    <testcase name="Test Enum should access enum from enum item name" time="0.0000" classname="should access enum from enum item name">
    </testcase>
    <testcase name="Test Enum EnumItem should function properly" time="0.0010" classname="EnumItem should function properly">
    </testcase>
  </testsuite>
  <testsuite name="Benchmarking Enums" timestamp="2021-02-09T07:11:39" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-enum\test\test_enum.js" time="2.1110" failures="0">
    <testcase name="Benchmarking Enums should verify that our enums are faster than  Enum 2.1.0 (flaggable enum)" time="1.0480" classname="should verify that our enums are faster than  Enum 2.1.0 (flaggable enum)">
    </testcase>
    <testcase name="Benchmarking Enums should verify that our enums are faster than Enum 2.1.0 ( simple enum )" time="1.0630" classname="should verify that our enums are faster than Enum 2.1.0 ( simple enum )">
    </testcase>
  </testsuite>
  <testsuite name="FileTransfer with File object methods" timestamp="2021-02-09T07:11:41" tests="12" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1120" failures="0">
    <testcase name="FileTransfer with File object methods should expose a File Transfer node and open/close" time="0.0090" classname="should expose a File Transfer node and open/close">
    </testcase>
    <testcase name="FileTransfer with File object methods should expose a File Transfer node" time="0.0030" classname="should expose a File Transfer node">
    </testcase>
    <testcase name="FileTransfer with File object methods should read a file " time="0.0040" classname="should read a file ">
    </testcase>
    <testcase name="FileTransfer with File object methods should increase openCount when a file is opened and decrease it when it&apos;s closed" time="0.0030" classname="should increase openCount when a file is opened and decrease it when it&apos;s closed">
    </testcase>
    <testcase name="FileTransfer with File object methods should expose the size of the current file" time="0.0010" classname="should expose the size of the current file">
    </testcase>
    <testcase name="FileTransfer with File object methods should not be possible to write to a file if Write Bit is not set in open mode" time="0.0050" classname="should not be possible to write to a file if Write Bit is not set in open mode">
    </testcase>
    <testcase name="FileTransfer with File object methods should be possible to write a file - in create mode" time="0.0050" classname="should be possible to write a file - in create mode">
    </testcase>
    <testcase name="FileTransfer with File object methods should be possible to write to a file - in append mode" time="0.0050" classname="should be possible to write to a file - in append mode">
    </testcase>
    <testcase name="FileTransfer with File object methods should not allow read method if Read bit is not set in open mode" time="0.0030" classname="should not allow read method if Read bit is not set in open mode">
    </testcase>
    <testcase name="FileTransfer with File object methods should allow file to grow" time="0.0060" classname="should allow file to grow">
    </testcase>
    <testcase name="FileTransfer with File object methods file size must change on client size if file changes on server side" time="0.0030" classname="file size must change on client size if file changes on server side">
    </testcase>
    <testcase name="FileTransfer with File object methods should not be possible to reuse filehandle generated by one session with an other session" time="0.0650" classname="should not be possible to reuse filehandle generated by one session with an other session">
    </testcase>
  </testsuite>
  <testsuite name="FileTransfer with FileType methods" timestamp="2021-02-09T07:11:42" tests="12" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0360" failures="0">
    <testcase name="FileTransfer with FileType methods should expose a File Transfer node and open/close" time="0.0030" classname="should expose a File Transfer node and open/close">
    </testcase>
    <testcase name="FileTransfer with FileType methods should expose a File Transfer node" time="0.0020" classname="should expose a File Transfer node">
    </testcase>
    <testcase name="FileTransfer with FileType methods should read a file " time="0.0030" classname="should read a file ">
    </testcase>
    <testcase name="FileTransfer with FileType methods should increase openCount when a file is opened and decrease it when it&apos;s closed" time="0.0020" classname="should increase openCount when a file is opened and decrease it when it&apos;s closed">
    </testcase>
    <testcase name="FileTransfer with FileType methods should expose the size of the current file" time="0.0000" classname="should expose the size of the current file">
    </testcase>
    <testcase name="FileTransfer with FileType methods should not be possible to write to a file if Write Bit is not set in open mode" time="0.0020" classname="should not be possible to write to a file if Write Bit is not set in open mode">
    </testcase>
    <testcase name="FileTransfer with FileType methods should be possible to write a file - in create mode" time="0.0040" classname="should be possible to write a file - in create mode">
    </testcase>
    <testcase name="FileTransfer with FileType methods should be possible to write to a file - in append mode" time="0.0040" classname="should be possible to write to a file - in append mode">
    </testcase>
    <testcase name="FileTransfer with FileType methods should not allow read method if Read bit is not set in open mode" time="0.0030" classname="should not allow read method if Read bit is not set in open mode">
    </testcase>
    <testcase name="FileTransfer with FileType methods should allow file to grow" time="0.0040" classname="should allow file to grow">
    </testcase>
    <testcase name="FileTransfer with FileType methods file size must change on client size if file changes on server side" time="0.0030" classname="file size must change on client size if file changes on server side">
    </testcase>
    <testcase name="FileTransfer with FileType methods should not be possible to reuse filehandle generated by one session with an other session" time="0.0060" classname="should not be possible to reuse filehandle generated by one session with an other session">
    </testcase>
  </testsuite>
  <testsuite name="ExtensionObject" timestamp="2021-02-09T07:11:42" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-generator\test\extension_object\test_extension_object.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="testing package_analyser" timestamp="2021-02-09T07:11:42" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-generator\test\packet_analyzer\test_packet_analyzer.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Testing IntegerId" timestamp="2021-02-09T07:11:42" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-generator\test\test_IntegerId.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Factories: testing object factory" timestamp="2021-02-09T07:11:42" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-generator\test\test_factories.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Factories: testing strong typed enums" timestamp="2021-02-09T07:11:42" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-generator\test\test_factories.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Factories: testing binaryStoreSize" timestamp="2021-02-09T07:11:42" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-generator\test\test_factories.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Testing that objects created by factory can be persisted as JSON string" timestamp="2021-02-09T07:11:42" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-generator\test\test_factories.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="factories testing advanced cases" timestamp="2021-02-09T07:11:42" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-generator\test\test_factories.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="BaseUAObject#clone " timestamp="2021-02-09T07:11:42" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-generator\test\test_factories.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Code Generator" timestamp="2021-02-09T07:11:42" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-generator\test\test_factory_code_generator.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="GUID" timestamp="2021-02-09T07:11:42" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-guid\test\test_guid.js" time="0.0000" failures="0">
    <testcase name="GUID emptyGuid should be a valid GUID" time="0.0000" classname="emptyGuid should be a valid GUID">
    </testcase>
    <testcase name="GUID should detect strings that looks like GUID" time="0.0000" classname="should detect strings that looks like GUID">
    </testcase>
    <testcase name="GUID should accept letters in lower case in GUID strings" time="0.0000" classname="should accept letters in lower case in GUID strings">
    </testcase>
    <testcase name="GUID should not detect ns=0;g=1E14849E-3744-470d-8C7B-5F9110C2FA32 as a GUID" time="0.0000" classname="should not detect ns=0;g=1E14849E-3744-470d-8C7B-5F9110C2FA32 as a GUID">
    </testcase>
  </testsuite>
  <testsuite name="hostname" timestamp="2021-02-09T07:11:42" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-hostname\test\test_hostname.ts" time="0.0180" failures="0">
    <testcase name="hostname should replace %FQDN% with fqdn (resolveFullyQualifiedDomainName)" time="0.0150" classname="should replace %FQDN% with fqdn (resolveFullyQualifiedDomainName)">
    </testcase>
    <testcase name="hostname It should retrieve the fully qualified domain name" time="0.0010" classname="It should retrieve the fully qualified domain name">
    </testcase>
    <testcase name="hostname It should retrieve the fully qualified domain name" time="0.0010" classname="It should retrieve the fully qualified domain name">
    </testcase>
    <testcase name="hostname fqdn should not contains .localdomain at the end if computer doesn&apos;t belong to a domain" time="0.0010" classname="fqdn should not contains .localdomain at the end if computer doesn&apos;t belong to a domain">
    </testcase>
  </testsuite>
  <testsuite name="testing custom nodeset" timestamp="2021-02-09T07:11:42" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.7420" failures="0">
    <testcase name="testing custom nodeset should parse a custom nodeset" time="0.7420" classname="should parse a custom nodeset">
    </testcase>
  </testsuite>
  <testsuite name="addExtensionObjectDataType" timestamp="2021-02-09T07:11:43" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.5710" failures="0">
    <testcase name="addExtensionObjectDataType ZZZE-1 should add an ExtensionObject DataType" time="0.5710" classname="ZZZE-1 should add an ExtensionObject DataType">
    </testcase>
  </testsuite>
  <testsuite name="addVariableTypeForDataType" timestamp="2021-02-09T07:11:44" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0390" failures="0">
    <testcase name="addVariableTypeForDataType ZZZE-2 should addVariableTypeForDataType" time="0.0390" classname="ZZZE-2 should addVariableTypeForDataType">
    </testcase>
  </testsuite>
  <testsuite name="buidModel" timestamp="2021-02-09T07:11:45" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0030" failures="0">
    <testcase name="buidModel should build a empty model" time="0.0030" classname="should build a empty model">
    </testcase>
  </testsuite>
  <testsuite name="displayNodeElement" timestamp="2021-02-09T07:11:45" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0340" failures="0">
    <testcase name="displayNodeElement displayNodeElement" time="0.0340" classname="displayNodeElement">
    </testcase>
  </testsuite>
  <testsuite name="loading very large DataType Definitions " timestamp="2021-02-09T07:11:46" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-modeler\test\test_issue_889.ts" time="0.0590" failures="0">
    <testcase name="loading very large DataType Definitions  LGH should " time="0.0590" classname="LGH should ">
    </testcase>
  </testsuite>
  <testsuite name="promoteToMandatory" timestamp="2021-02-09T07:11:46" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0250" failures="0">
    <testcase name="promoteToMandatory when creating a sub type it should be possible to promote a component or property to mandatory" time="0.0250" classname="when creating a sub type it should be possible to promote a component or property to mandatory">
    </testcase>
  </testsuite>
  <testsuite name="displayNodeElement" timestamp="2021-02-09T07:11:47" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0050" failures="0">
    <testcase name="displayNodeElement should set namespace metaData1" time="0.0050" classname="should set namespace metaData1">
    </testcase>
  </testsuite>
  <testsuite name="testing ExpandedNodeId" timestamp="2021-02-09T07:11:48" tests="11" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-nodeid\test\test_expanded_nodeid.js" time="0.0020" failures="0">
    <testcase name="testing ExpandedNodeId should create a ExpandedNodeId from a integer" time="0.0010" classname="should create a ExpandedNodeId from a integer">
    </testcase>
    <testcase name="testing ExpandedNodeId should create a ExpandedNodeId from a integer" time="0.0000" classname="should create a ExpandedNodeId from a integer">
    </testcase>
    <testcase name="testing ExpandedNodeId should create a ExpandedNodeId from a ExpandedNodeId" time="0.0000" classname="should create a ExpandedNodeId from a ExpandedNodeId">
    </testcase>
    <testcase name="testing ExpandedNodeId should throw when calling makeExpandedNodeId with bad argument" time="0.0010" classname="should throw when calling makeExpandedNodeId with bad argument">
    </testcase>
    <testcase name="testing ExpandedNodeId ExpandedNodeId#toString" time="0.0000" classname="ExpandedNodeId#toString">
    </testcase>
    <testcase name="testing ExpandedNodeId should create a ExpandedNodeId from a NodeId" time="0.0000" classname="should create a ExpandedNodeId from a NodeId">
    </testcase>
    <testcase name="testing ExpandedNodeId coerceExpandedNodeId should coerce &apos;i=10&apos;" time="0.0000" classname="coerceExpandedNodeId should coerce &apos;i=10&apos;">
    </testcase>
    <testcase name="testing ExpandedNodeId coerceExpandedNodeId should coerce an ExpandedNodeId" time="0.0000" classname="coerceExpandedNodeId should coerce an ExpandedNodeId">
    </testcase>
    <testcase name="testing ExpandedNodeId ExpandedNodeId.fromNodeId" time="0.0000" classname="ExpandedNodeId.fromNodeId">
    </testcase>
    <testcase name="testing ExpandedNodeId ExpandedNodeId#toJSON" time="0.0000" classname="ExpandedNodeId#toJSON">
    </testcase>
    <testcase name="testing ExpandedNodeId makeExpandedNodeId()" time="0.0000" classname="makeExpandedNodeId()">
    </testcase>
  </testsuite>
  <testsuite name="testing NodeIds" timestamp="2021-02-09T07:11:48" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-nodeid\test\test_nodeid.js" time="0.0060" failures="0">
    <testcase name="testing NodeIds should create a NUMERIC nodeID" time="0.0000" classname="should create a NUMERIC nodeID">
    </testcase>
    <testcase name="testing NodeIds should create a NUMERIC nodeID with the largest possible values" time="0.0010" classname="should create a NUMERIC nodeID with the largest possible values">
    </testcase>
    <testcase name="testing NodeIds should raise an error for  NUMERIC nodeID with invalid  values" time="0.0010" classname="should raise an error for  NUMERIC nodeID with invalid  values">
    </testcase>
    <testcase name="testing NodeIds should create a STRING nodeID" time="0.0000" classname="should create a STRING nodeID">
    </testcase>
    <testcase name="testing NodeIds should create a OPAQUE nodeID" time="0.0010" classname="should create a OPAQUE nodeID">
    </testcase>
    <testcase name="testing NodeIds should create a OPAQUE nodeID with null buffer" time="0.0010" classname="should create a OPAQUE nodeID with null buffer">
    </testcase>
    <testcase name="testing NodeIds NodeId#toString with addressSpace object (standard Nodes) 0" time="0.0020" classname="NodeId#toString with addressSpace object (standard Nodes) 0">
    </testcase>
    <testcase name="testing NodeIds NodeId#toString with addressSpace object (findNode) 2" time="0.0000" classname="NodeId#toString with addressSpace object (findNode) 2">
    </testcase>
    <testcase name="testing NodeIds NodeId#toJSON" time="0.0000" classname="NodeId#toJSON">
    </testcase>
  </testsuite>
  <testsuite name="testing coerceNodeId" timestamp="2021-02-09T07:11:48" tests="25" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-nodeid\test\test_nodeid.js" time="0.0030" failures="0">
    <testcase name="testing coerceNodeId should coerce a string of a form &apos;i=1234&apos;" time="0.0000" classname="should coerce a string of a form &apos;i=1234&apos;">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a string of a form &apos;ns=2;i=1234&apos;" time="0.0000" classname="should coerce a string of a form &apos;ns=2;i=1234&apos;">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a string of a form &apos;s=TemperatureSensor&apos; " time="0.0000" classname="should coerce a string of a form &apos;s=TemperatureSensor&apos; ">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a string of a form &apos;ns=2;s=TemperatureSensor&apos; " time="0.0000" classname="should coerce a string of a form &apos;ns=2;s=TemperatureSensor&apos; ">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a string of a form &apos;1E14849E-3744-470d-8C7B-5F9110C2FA32&apos; " time="0.0000" classname="should coerce a string of a form &apos;1E14849E-3744-470d-8C7B-5F9110C2FA32&apos; ">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a NodeId from a NodeIdOptions" time="0.0010" classname="should coerce a NodeId from a NodeIdOptions">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a string of a form &apos;ns=4;s=Test32;datatype=Int32&apos;  (Mika)" time="0.0000" classname="should coerce a string of a form &apos;ns=4;s=Test32;datatype=Int32&apos;  (Mika)">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a string of a form &apos;ns=4;s=||)))AA(((||&apos;" time="0.0000" classname="should coerce a string of a form &apos;ns=4;s=||)))AA(((||&apos;">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a string of a form `ns=2;s=45QAZE2323||XC86@5`" time="0.0000" classname="should coerce a string of a form `ns=2;s=45QAZE2323||XC86@5`">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a integer" time="0.0000" classname="should coerce a integer">
    </testcase>
    <testcase name="testing coerceNodeId makeNodeId(&apos;1E14849E-3744-470d-8C7B-5F9110C2FA32&apos;)" time="0.0000" classname="makeNodeId(&apos;1E14849E-3744-470d-8C7B-5F9110C2FA32&apos;)">
    </testcase>
    <testcase name="testing coerceNodeId makeNodeId(buffer)" time="0.0010" classname="makeNodeId(buffer)">
    </testcase>
    <testcase name="testing coerceNodeId resolveNodeId" time="0.0000" classname="resolveNodeId">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a OPAQUE buffer as a BYTESTRING" time="0.0000" classname="should coerce a OPAQUE buffer as a BYTESTRING">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a OPAQUE buffer in a string ( with namespace ) " time="0.0000" classname="should coerce a OPAQUE buffer in a string ( with namespace ) ">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a OPAQUE buffer in a string ( without namespace ) " time="0.0000" classname="should coerce a OPAQUE buffer in a string ( without namespace ) ">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a GUID node id (without namespace)" time="0.0000" classname="should coerce a GUID node id (without namespace)">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a GUID node id (with namespace)" time="0.0000" classname="should coerce a GUID node id (with namespace)">
    </testcase>
    <testcase name="testing coerceNodeId should not coerce a malformed string to a nodeid" time="0.0010" classname="should not coerce a malformed string to a nodeid">
    </testcase>
    <testcase name="testing coerceNodeId should detect empty Numeric NodeIds" time="0.0000" classname="should detect empty Numeric NodeIds">
    </testcase>
    <testcase name="testing coerceNodeId should detect empty String NodeIds" time="0.0000" classname="should detect empty String NodeIds">
    </testcase>
    <testcase name="testing coerceNodeId should detect empty Opaque NodeIds" time="0.0000" classname="should detect empty Opaque NodeIds">
    </testcase>
    <testcase name="testing coerceNodeId should detect empty GUID NodeIds" time="0.0000" classname="should detect empty GUID NodeIds">
    </testcase>
    <testcase name="testing coerceNodeId should convert an empty NodeId to  &lt;empty nodeid&gt; string" time="0.0000" classname="should convert an empty NodeId to  &lt;empty nodeid&gt; string">
    </testcase>
    <testcase name="testing coerceNodeId should coerce a string nodeid containing special characters" time="0.0000" classname="should coerce a string nodeid containing special characters">
    </testcase>
  </testsuite>
  <testsuite name="#sameNodeId" timestamp="2021-02-09T07:11:48" tests="65" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-nodeid\test\test_nodeid.js" time="0.2070" failures="0">
    <testcase name="#sameNodeId should be true  : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=3;i=2&apos;);" time="0.0000" classname="should be true  : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=3;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=4;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=4;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=3;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=3;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=300;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=300;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=2;i=23&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=2;i=23&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=4;s=TemperatureSensor&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=4;s=TemperatureSensor&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=4;s=A very long string very very long string&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=4;s=A very long string very very long string&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=4;b=415a45525459&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=2&apos;,&apos;ns=4;b=415a45525459&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=3;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=3;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be true  : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=4;i=2&apos;);" time="0.0000" classname="should be true  : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=4;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=3;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=3;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=300;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=300;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=2;i=23&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=2;i=23&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=4;s=TemperatureSensor&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=4;s=TemperatureSensor&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=4;s=A very long string very very long string&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=4;s=A very long string very very long string&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=4;b=415a45525459&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;i=2&apos;,&apos;ns=4;b=415a45525459&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=3;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=3;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=4;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=4;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be true  : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=3;i=4&apos;);" time="0.0000" classname="should be true  : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=3;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=300;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=300;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=2;i=23&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=2;i=23&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=4;s=TemperatureSensor&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=4;s=TemperatureSensor&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=4;s=A very long string very very long string&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=4;s=A very long string very very long string&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=4;b=415a45525459&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=3;i=4&apos;,&apos;ns=4;b=415a45525459&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=3;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=3;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=4;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=4;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=3;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=3;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be true  : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=300;i=4&apos;);" time="0.0000" classname="should be true  : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=300;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=2;i=23&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=2;i=23&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=4;s=TemperatureSensor&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=4;s=TemperatureSensor&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=4;s=A very long string very very long string&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=4;s=A very long string very very long string&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=4;b=415a45525459&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=300;i=4&apos;,&apos;ns=4;b=415a45525459&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=3;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=3;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=4;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=4;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=3;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=3;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=300;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=300;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be true  : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=2;i=23&apos;);" time="0.0000" classname="should be true  : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=2;i=23&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=4;s=TemperatureSensor&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=4;s=TemperatureSensor&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=4;s=A very long string very very long string&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=4;s=A very long string very very long string&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=4;b=415a45525459&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=2;i=23&apos;,&apos;ns=4;b=415a45525459&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=3;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=3;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=4;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=4;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=3;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=3;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=300;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=300;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=2;i=23&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=2;i=23&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be true  : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=4;s=TemperatureSensor&apos;);" time="0.0000" classname="should be true  : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=4;s=TemperatureSensor&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=4;s=A very long string very very long string&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=4;s=A very long string very very long string&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=4;b=415a45525459&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=TemperatureSensor&apos;,&apos;ns=4;b=415a45525459&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=3;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=3;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=4;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=4;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=3;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=3;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=300;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=300;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=2;i=23&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=2;i=23&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=4;s=TemperatureSensor&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=4;s=TemperatureSensor&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be true  : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=4;s=A very long string very very long string&apos;);" time="0.0000" classname="should be true  : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=4;s=A very long string very very long string&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=4;b=415a45525459&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;s=A very long string very very long string&apos;,&apos;ns=4;b=415a45525459&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=3;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=3;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=4;i=2&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=4;i=2&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=3;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=3;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=300;i=4&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=300;i=4&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=2;i=23&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=2;i=23&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=4;s=TemperatureSensor&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=4;s=TemperatureSensor&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=4;s=A very long string very very long string&apos;);" time="0.0000" classname="should be false : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=4;s=A very long string very very long string&apos;);">
    </testcase>
    <testcase name="#sameNodeId should be true  : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=4;b=415a45525459&apos;);" time="0.0000" classname="should be true  : #sameNodeId(&apos;ns=4;b=415a45525459&apos;,&apos;ns=4;b=415a45525459&apos;);">
    </testcase>
    <testcase name="#sameNodeId should implement a efficient sameNodeId " time="0.2070" classname="should implement a efficient sameNodeId ">
    </testcase>
  </testsuite>
  <testsuite name="testing resolveNodeId" timestamp="2021-02-09T07:11:48" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-nodeid\test\test_nodeid.js" time="0.0000" failures="0">
    <testcase name="testing resolveNodeId should resolve RootFolder to &apos;ns=0;i=84&apos; " time="0.0000" classname="should resolve RootFolder to &apos;ns=0;i=84&apos; ">
    </testcase>
    <testcase name="testing resolveNodeId should resolve ObjectsFolder to &apos;ns=0;i=85&apos; " time="0.0000" classname="should resolve ObjectsFolder to &apos;ns=0;i=85&apos; ">
    </testcase>
    <testcase name="testing resolveNodeId should resolve ServerType_NamespaceArray to &apos;ns=0;i=2006&apos; " time="0.0000" classname="should resolve ServerType_NamespaceArray to &apos;ns=0;i=2006&apos; ">
    </testcase>
    <testcase name="testing resolveNodeId should resolve FolderType to &apos;ns=0;i=61&apos; " time="0.0000" classname="should resolve FolderType to &apos;ns=0;i=61&apos; ">
    </testcase>
    <testcase name="testing resolveNodeId should resolve AnalogItemType to &apos;ns=0;i=2368&apos; " time="0.0000" classname="should resolve AnalogItemType to &apos;ns=0;i=2368&apos; ">
    </testcase>
    <testcase name="testing resolveNodeId should resolve HierarchicalReferences to &apos;ns=0;i=33&apos; " time="0.0000" classname="should resolve HierarchicalReferences to &apos;ns=0;i=33&apos; ">
    </testcase>
  </testsuite>
  <testsuite name="testing NodeId coercing bug " timestamp="2021-02-09T07:11:48" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-nodeid\test\test_nodeid.js" time="0.0000" failures="0">
    <testcase name="testing NodeId coercing bug  should handle strange string nodeId " time="0.0000" classname="should handle strange string nodeId ">
    </testcase>
  </testsuite>
  <testsuite name="testing NodeId.displayText" timestamp="2021-02-09T07:11:48" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-nodeid\test\test_nodeid.js" time="0.0000" failures="0">
    <testcase name="testing NodeId.displayText should provide a richer display text when nodeid is known" time="0.0000" classname="should provide a richer display text when nodeid is known">
    </testcase>
  </testsuite>
  <testsuite name="issue#372 coercing &amp; making nodeid string containing semi-column" timestamp="2021-02-09T07:11:48" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-nodeid\test\test_nodeid.js" time="0.0000" failures="0">
    <testcase name="issue#372 coercing &amp; making nodeid string containing semi-column should coerce a nodeid string containing a semi-column" time="0.0000" classname="should coerce a nodeid string containing a semi-column">
    </testcase>
    <testcase name="issue#372 coercing &amp; making nodeid string containing semi-column should make a nodeid as a string containing semi-column" time="0.0000" classname="should make a nodeid as a string containing semi-column">
    </testcase>
  </testsuite>
  <testsuite name="Testing numerical range" timestamp="2021-02-09T07:11:48" tests="20" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range.js" time="0.0180" failures="0">
    <testcase name="Testing numerical range should construct an empty NumericRange" time="0.0010" classname="should construct an empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range should construct a NumericRange from a integer" time="0.0000" classname="should construct a NumericRange from a integer">
    </testcase>
    <testcase name="Testing numerical range should construct a NumericRange from a integer (InvalidRange)" time="0.0000" classname="should construct a NumericRange from a integer (InvalidRange)">
    </testcase>
    <testcase name="Testing numerical range should construct a NumericRange with low and high bound" time="0.0160" classname="should construct a NumericRange with low and high bound">
    </testcase>
    <testcase name="Testing numerical range should  be an InvalidRange if low bound is greater than high bound" time="0.0010" classname="should  be an InvalidRange if low bound is greater than high bound">
    </testcase>
    <testcase name="Testing numerical range should throw an exception if high bound is crap" time="0.0000" classname="should throw an exception if high bound is crap">
    </testcase>
    <testcase name="Testing numerical range should construct a NumericRange with a array containing low and high bound" time="0.0000" classname="should construct a NumericRange with a array containing low and high bound">
    </testcase>
    <testcase name="Testing numerical range should construct a NumericRange from a string containing an integer" time="0.0000" classname="should construct a NumericRange from a string containing an integer">
    </testcase>
    <testcase name="Testing numerical range should construct a NumericRange from a string containing a simple range" time="0.0000" classname="should construct a NumericRange from a string containing a simple range">
    </testcase>
    <testcase name="Testing numerical range should be an InvalidRange when constructed with a string with invalid range" time="0.0000" classname="should be an InvalidRange when constructed with a string with invalid range">
    </testcase>
    <testcase name="Testing numerical range should be an InvalidRange when constructed with a string with 3 values separated with :" time="0.0000" classname="should be an InvalidRange when constructed with a string with 3 values separated with :">
    </testcase>
    <testcase name="Testing numerical range should be an InvalidRange when constructed with two values ( high ,low)" time="0.0000" classname="should be an InvalidRange when constructed with two values ( high ,low)">
    </testcase>
    <testcase name="Testing numerical range should be an InvalidRange when constructed with two values ( negative ,negative)" time="0.0000" classname="should be an InvalidRange when constructed with two values ( negative ,negative)">
    </testcase>
    <testcase name="Testing numerical range should be an InvalidRange when constructed with a single negative numb" time="0.0000" classname="should be an InvalidRange when constructed with a single negative numb">
    </testcase>
    <testcase name="Testing numerical range should be an InvalidRange when constructed with a string with invalid array range (low==high) " time="0.0000" classname="should be an InvalidRange when constructed with a string with invalid array range (low==high) ">
    </testcase>
    <testcase name="Testing numerical range should be an InvalidRange when constructed with a string with invalid array range (low==high) " time="0.0000" classname="should be an InvalidRange when constructed with a string with invalid array range (low==high) ">
    </testcase>
    <testcase name="Testing numerical range should be an InvalidRange when constructed with a string with invalid array range ( low &gt; high )" time="0.0000" classname="should be an InvalidRange when constructed with a string with invalid array range ( low &gt; high )">
    </testcase>
    <testcase name="Testing numerical range should be an InvalidRange when constructed with a badly formed string &apos;2-4&apos; " time="0.0000" classname="should be an InvalidRange when constructed with a badly formed string &apos;2-4&apos; ">
    </testcase>
    <testcase name="Testing numerical range should be an InvalidRange when constructed with a badly formed string : &apos;-2:0&apos; " time="0.0000" classname="should be an InvalidRange when constructed with a badly formed string : &apos;-2:0&apos; ">
    </testcase>
  </testsuite>
  <testsuite name="MatrixRange" timestamp="2021-02-09T07:11:48" tests="14" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range.js" time="0.0040" failures="0">
    <testcase name="Testing numerical range MatrixRange should be an MatrixRange when constructed with a string : &apos;1:3,4:5&apos; " time="0.0000" classname="should be an MatrixRange when constructed with a string : &apos;1:3,4:5&apos; ">
    </testcase>
    <testcase name="Testing numerical range MatrixRange should be an InvalidRange when constructed with a matrix form string : &apos;1:1,2:2&apos;" time="0.0000" classname="should be an InvalidRange when constructed with a matrix form string : &apos;1:1,2:2&apos;">
    </testcase>
    <testcase name="Testing numerical range MatrixRange should be an InvalidRange when constructed with a matrix form string : &apos;1,2:2&apos;" time="0.0000" classname="should be an InvalidRange when constructed with a matrix form string : &apos;1,2:2&apos;">
    </testcase>
    <testcase name="Testing numerical range MatrixRange should be an InvalidRange when constructed with a matrix form string : &apos;1:1,2&apos;" time="0.0000" classname="should be an InvalidRange when constructed with a matrix form string : &apos;1:1,2&apos;">
    </testcase>
    <testcase name="Testing numerical range MatrixRange should be an MatrixRange when constructed with a matrix form string : &apos;1,2&apos; " time="0.0010" classname="should be an MatrixRange when constructed with a matrix form string : &apos;1,2&apos; ">
    </testcase>
    <testcase name="Testing numerical range MatrixRange should be an Matrix when constructed with  string : &apos;1,2:3&apos; " time="0.0000" classname="should be an Matrix when constructed with  string : &apos;1,2:3&apos; ">
    </testcase>
    <testcase name="Testing numerical range MatrixRange should be an MatrixRange when constructed with   string : &apos;1:2,2&apos; " time="0.0000" classname="should be an MatrixRange when constructed with   string : &apos;1:2,2&apos; ">
    </testcase>
    <testcase name="Testing numerical range MatrixRange should return error on -2:0" time="0.0000" classname="should return error on -2:0">
    </testcase>
    <testcase name="Testing numerical range MatrixRange invalid with 3 digits" time="0.0000" classname="invalid with 3 digits">
    </testcase>
    <testcase name="Testing numerical range MatrixRange invalid with invalid number" time="0.0010" classname="invalid with invalid number">
    </testcase>
    <testcase name="Testing numerical range MatrixRange coerce" time="0.0000" classname="coerce">
    </testcase>
    <testcase name="Testing numerical range MatrixRange coerce" time="0.0010" classname="coerce">
    </testcase>
    <testcase name="Testing numerical range MatrixRange construct from NumericRange - should raise an exception" time="0.0010" classname="construct from NumericRange - should raise an exception">
    </testcase>
    <testcase name="Testing numerical range MatrixRange construct default" time="0.0000" classname="construct default">
    </testcase>
  </testsuite>
  <testsuite name="extracting ranges from string" timestamp="2021-02-09T07:11:48" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range.js" time="0.0000" failures="0">
    <testcase name="Testing numerical range extracting ranges from string it should extract a single element with a single value range" time="0.0000" classname="it should extract a single element with a single value range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from string it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from string it should return a statusCode and empty string if numeric range is out of bound - issue #635" time="0.0000" classname="it should return a statusCode and empty string if numeric range is out of bound - issue #635">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from string it should return a statusCode and empty string if numeric range (single element) is out of bound - issue #635" time="0.0000" classname="it should return a statusCode and empty string if numeric range (single element) is out of bound - issue #635">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from string it should extract a sub matrix when indexRange is a NumericRange.Matrix" time="0.0000" classname="it should extract a sub matrix when indexRange is a NumericRange.Matrix">
    </testcase>
  </testsuite>
  <testsuite name="extracting ranges from ByteString" timestamp="2021-02-09T07:11:48" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range.js" time="0.0000" failures="0">
    <testcase name="Testing numerical range extracting ranges from ByteString it should extract a single element with a range defined with a individual integer" time="0.0000" classname="it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from ByteString it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from ByteString it should handle the case where the high value of the range is bigger than the array size" time="0.0000" classname="it should handle the case where the high value of the range is bigger than the array size">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from ByteString it should handle the case where both high value and low value range are bigger than the array size" time="0.0000" classname="it should handle the case where both high value and low value range are bigger than the array size">
    </testcase>
  </testsuite>
  <testsuite name="extracting ranges from array" timestamp="2021-02-09T07:11:48" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range.js" time="0.0040" failures="0">
    <testcase name="Testing numerical range extracting ranges from array it should extract a single element with a range defined with a individual integer" time="0.0010" classname="it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from array it should extract a sub array with the requested element with a simple array range" time="0.0010" classname="it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from array it should extract a sub array with the requested element with a empty NumericRange" time="0.0010" classname="it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from array it should extract the last 3 elements of an array" time="0.0010" classname="it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from array it should return BadIndexRangeNoData  if single value Range is outside array boundary" time="0.0000" classname="it should return BadIndexRangeNoData  if single value Range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from array should handle null array" time="0.0000" classname="should handle null array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from array should handle null array" time="0.0000" classname="should handle null array">
    </testcase>
  </testsuite>
  <testsuite name="extracting ranges from matrix" timestamp="2021-02-09T07:11:48" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range.js" time="0.0030" failures="0">
    <testcase name="Testing numerical range extracting ranges from matrix should extract sub matrix of null matrix" time="0.0010" classname="should extract sub matrix of null matrix">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from matrix should extract sub matrix at 0,0" time="0.0000" classname="should extract sub matrix at 0,0">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from matrix should extract sub matrix at 1,0" time="0.0010" classname="should extract sub matrix at 1,0">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from matrix should extract sub matrix at 0,1" time="0.0000" classname="should extract sub matrix at 0,1">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from matrix should extract sub matrix column at 0:2,1 ( a column)" time="0.0010" classname="should extract sub matrix column at 0:2,1 ( a column)">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from matrix should extract sub matrix row at 0:2,1 ( a row)" time="0.0000" classname="should extract sub matrix row at 0:2,1 ( a row)">
    </testcase>
  </testsuite>
  <testsuite name="extracting ranges from a typed array" timestamp="2021-02-09T07:11:48" tests="70" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range.js" time="0.0040" failures="0">
    <testcase name="Testing numerical range extracting ranges from a typed array Float32Array Z1 - it should extract a single element with a range defined with a individual integer" time="0.0000" classname="Float32Array Z1 - it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float32Array Z2 - it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="Float32Array Z2 - it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float32Array Z3 - it should extract a sub array with the requested element with a empty NumericRange" time="0.0000" classname="Float32Array Z3 - it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float32Array Z4 - it should extract the last 3 elements of an array" time="0.0010" classname="Float32Array Z4 - it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float32Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary" time="0.0000" classname="Float32Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float32Array Z6 - it should return BadIndexRangeInvalid if range is invalid" time="0.0000" classname="Float32Array Z6 - it should return BadIndexRangeInvalid if range is invalid">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float32Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements" time="0.0000" classname="Float32Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float64Array Z1 - it should extract a single element with a range defined with a individual integer" time="0.0000" classname="Float64Array Z1 - it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float64Array Z2 - it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="Float64Array Z2 - it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float64Array Z3 - it should extract a sub array with the requested element with a empty NumericRange" time="0.0000" classname="Float64Array Z3 - it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float64Array Z4 - it should extract the last 3 elements of an array" time="0.0000" classname="Float64Array Z4 - it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float64Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary" time="0.0000" classname="Float64Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float64Array Z6 - it should return BadIndexRangeInvalid if range is invalid" time="0.0000" classname="Float64Array Z6 - it should return BadIndexRangeInvalid if range is invalid">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Float64Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements" time="0.0010" classname="Float64Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint32Array Z1 - it should extract a single element with a range defined with a individual integer" time="0.0000" classname="Uint32Array Z1 - it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint32Array Z2 - it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="Uint32Array Z2 - it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint32Array Z3 - it should extract a sub array with the requested element with a empty NumericRange" time="0.0000" classname="Uint32Array Z3 - it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint32Array Z4 - it should extract the last 3 elements of an array" time="0.0000" classname="Uint32Array Z4 - it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint32Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary" time="0.0000" classname="Uint32Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint32Array Z6 - it should return BadIndexRangeInvalid if range is invalid" time="0.0000" classname="Uint32Array Z6 - it should return BadIndexRangeInvalid if range is invalid">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint32Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements" time="0.0000" classname="Uint32Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint16Array Z1 - it should extract a single element with a range defined with a individual integer" time="0.0000" classname="Uint16Array Z1 - it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint16Array Z2 - it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="Uint16Array Z2 - it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint16Array Z3 - it should extract a sub array with the requested element with a empty NumericRange" time="0.0000" classname="Uint16Array Z3 - it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint16Array Z4 - it should extract the last 3 elements of an array" time="0.0000" classname="Uint16Array Z4 - it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint16Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary" time="0.0010" classname="Uint16Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint16Array Z6 - it should return BadIndexRangeInvalid if range is invalid" time="0.0000" classname="Uint16Array Z6 - it should return BadIndexRangeInvalid if range is invalid">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint16Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements" time="0.0010" classname="Uint16Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int16Array Z1 - it should extract a single element with a range defined with a individual integer" time="0.0000" classname="Int16Array Z1 - it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int16Array Z2 - it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="Int16Array Z2 - it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int16Array Z3 - it should extract a sub array with the requested element with a empty NumericRange" time="0.0000" classname="Int16Array Z3 - it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int16Array Z4 - it should extract the last 3 elements of an array" time="0.0000" classname="Int16Array Z4 - it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int16Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary" time="0.0000" classname="Int16Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int16Array Z6 - it should return BadIndexRangeInvalid if range is invalid" time="0.0000" classname="Int16Array Z6 - it should return BadIndexRangeInvalid if range is invalid">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int16Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements" time="0.0000" classname="Int16Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int32Array Z1 - it should extract a single element with a range defined with a individual integer" time="0.0000" classname="Int32Array Z1 - it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int32Array Z2 - it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="Int32Array Z2 - it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int32Array Z3 - it should extract a sub array with the requested element with a empty NumericRange" time="0.0000" classname="Int32Array Z3 - it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int32Array Z4 - it should extract the last 3 elements of an array" time="0.0000" classname="Int32Array Z4 - it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int32Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary" time="0.0000" classname="Int32Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int32Array Z6 - it should return BadIndexRangeInvalid if range is invalid" time="0.0000" classname="Int32Array Z6 - it should return BadIndexRangeInvalid if range is invalid">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int32Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements" time="0.0000" classname="Int32Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z1 - it should extract a single element with a range defined with a individual integer" time="0.0000" classname="Uint8Array Z1 - it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z2 - it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="Uint8Array Z2 - it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z3 - it should extract a sub array with the requested element with a empty NumericRange" time="0.0000" classname="Uint8Array Z3 - it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z4 - it should extract the last 3 elements of an array" time="0.0000" classname="Uint8Array Z4 - it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary" time="0.0000" classname="Uint8Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z6 - it should return BadIndexRangeInvalid if range is invalid" time="0.0000" classname="Uint8Array Z6 - it should return BadIndexRangeInvalid if range is invalid">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements" time="0.0000" classname="Uint8Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int8Array Z1 - it should extract a single element with a range defined with a individual integer" time="0.0000" classname="Int8Array Z1 - it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int8Array Z2 - it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="Int8Array Z2 - it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int8Array Z3 - it should extract a sub array with the requested element with a empty NumericRange" time="0.0000" classname="Int8Array Z3 - it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int8Array Z4 - it should extract the last 3 elements of an array" time="0.0000" classname="Int8Array Z4 - it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int8Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary" time="0.0000" classname="Int8Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int8Array Z6 - it should return BadIndexRangeInvalid if range is invalid" time="0.0000" classname="Int8Array Z6 - it should return BadIndexRangeInvalid if range is invalid">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Int8Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements" time="0.0000" classname="Int8Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array BLOB Z1 - it should extract a single element with a range defined with a individual integer" time="0.0000" classname="BLOB Z1 - it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array BLOB Z2 - it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="BLOB Z2 - it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array BLOB Z3 - it should extract a sub array with the requested element with a empty NumericRange" time="0.0000" classname="BLOB Z3 - it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array BLOB Z4 - it should extract the last 3 elements of an array" time="0.0000" classname="BLOB Z4 - it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array BLOB Z5 - it should return BadIndexRangeNoData if range is outside array boundary" time="0.0000" classname="BLOB Z5 - it should return BadIndexRangeNoData if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array BLOB Z6 - it should return BadIndexRangeInvalid if range is invalid" time="0.0000" classname="BLOB Z6 - it should return BadIndexRangeInvalid if range is invalid">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array BLOB Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements" time="0.0000" classname="BLOB Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z1 - it should extract a single element with a range defined with a individual integer" time="0.0000" classname="Uint8Array Z1 - it should extract a single element with a range defined with a individual integer">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z2 - it should extract a sub array with the requested element with a simple array range" time="0.0000" classname="Uint8Array Z2 - it should extract a sub array with the requested element with a simple array range">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z3 - it should extract a sub array with the requested element with a empty NumericRange" time="0.0000" classname="Uint8Array Z3 - it should extract a sub array with the requested element with a empty NumericRange">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z4 - it should extract the last 3 elements of an array" time="0.0000" classname="Uint8Array Z4 - it should extract the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary" time="0.0000" classname="Uint8Array Z5 - it should return BadIndexRangeNoData if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z6 - it should return BadIndexRangeInvalid if range is invalid" time="0.0000" classname="Uint8Array Z6 - it should return BadIndexRangeInvalid if range is invalid">
    </testcase>
    <testcase name="Testing numerical range extracting ranges from a typed array Uint8Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements" time="0.0000" classname="Uint8Array Z7 - it should return BadIndexRangeNoData if range is a MatrixRange and value is an array that contains no ArrayLike Elements">
    </testcase>
  </testsuite>
  <testsuite name="setting range of an array" timestamp="2021-02-09T07:11:48" tests="11" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range.js" time="0.0020" failures="0">
    <testcase name="Testing numerical range setting range of an array S1 - should replace the old array with the provided array when numeric range is empty" time="0.0000" classname="S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of an array S2 - should replace a single element when numeric range is a single value" time="0.0010" classname="S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of an array S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of an array S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of an array S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of an array S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0010" classname="S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of an array S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of an array S8 - should write the last 3 elements of an array" time="0.0000" classname="S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of an array S9 - should return BadIndexRangeNoData  if range is outside array boundary" time="0.0000" classname="S9 - should return BadIndexRangeNoData  if range is outside array boundary">
    </testcase>
    <testcase name="Testing numerical range setting range of an array S10 - should return BadIndexRangeInvalid  if range is invalid" time="0.0000" classname="S10 - should return BadIndexRangeInvalid  if range is invalid">
    </testcase>
    <testcase name="Testing numerical range setting range of an array S11 - should return BadIndexRangeInvalid if range doesn&apos;t match new array size" time="0.0000" classname="S11 - should return BadIndexRangeInvalid if range doesn&apos;t match new array size">
    </testcase>
  </testsuite>
  <testsuite name="setting range of a typed  array" timestamp="2021-02-09T07:11:48" tests="90" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range.js" time="0.0060" failures="0">
    <testcase name="Testing numerical range setting range of a typed  array Float32Array-S1 - should replace the old array with the provided array when numeric range is empty" time="0.0000" classname="Float32Array-S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float32Array-S2 - should replace a single element when numeric range is a single value" time="0.0010" classname="Float32Array-S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float32Array-S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="Float32Array-S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float32Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="Float32Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float32Array-S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="Float32Array-S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float32Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0010" classname="Float32Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float32Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="Float32Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float32Array-S8 - should write the last 3 elements of an array" time="0.0000" classname="Float32Array-S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float32Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array" time="0.0000" classname="Float32Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float64Array-S1 - should replace the old array with the provided array when numeric range is empty" time="0.0000" classname="Float64Array-S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float64Array-S2 - should replace a single element when numeric range is a single value" time="0.0000" classname="Float64Array-S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float64Array-S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="Float64Array-S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float64Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="Float64Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float64Array-S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="Float64Array-S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float64Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0000" classname="Float64Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float64Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="Float64Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float64Array-S8 - should write the last 3 elements of an array" time="0.0000" classname="Float64Array-S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Float64Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array" time="0.0000" classname="Float64Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint32Array-S1 - should replace the old array with the provided array when numeric range is empty" time="0.0000" classname="Uint32Array-S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint32Array-S2 - should replace a single element when numeric range is a single value" time="0.0000" classname="Uint32Array-S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint32Array-S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="Uint32Array-S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint32Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="Uint32Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint32Array-S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="Uint32Array-S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint32Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0000" classname="Uint32Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint32Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="Uint32Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint32Array-S8 - should write the last 3 elements of an array" time="0.0000" classname="Uint32Array-S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint32Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array" time="0.0000" classname="Uint32Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint16Array-S1 - should replace the old array with the provided array when numeric range is empty" time="0.0000" classname="Uint16Array-S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint16Array-S2 - should replace a single element when numeric range is a single value" time="0.0000" classname="Uint16Array-S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint16Array-S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="Uint16Array-S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint16Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="Uint16Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint16Array-S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="Uint16Array-S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint16Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0000" classname="Uint16Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint16Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="Uint16Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint16Array-S8 - should write the last 3 elements of an array" time="0.0000" classname="Uint16Array-S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint16Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array" time="0.0000" classname="Uint16Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int16Array-S1 - should replace the old array with the provided array when numeric range is empty" time="0.0000" classname="Int16Array-S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int16Array-S2 - should replace a single element when numeric range is a single value" time="0.0000" classname="Int16Array-S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int16Array-S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="Int16Array-S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int16Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="Int16Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int16Array-S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="Int16Array-S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int16Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0000" classname="Int16Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int16Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="Int16Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int16Array-S8 - should write the last 3 elements of an array" time="0.0000" classname="Int16Array-S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int16Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array" time="0.0000" classname="Int16Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int32Array-S1 - should replace the old array with the provided array when numeric range is empty" time="0.0000" classname="Int32Array-S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int32Array-S2 - should replace a single element when numeric range is a single value" time="0.0000" classname="Int32Array-S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int32Array-S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="Int32Array-S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int32Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="Int32Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int32Array-S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="Int32Array-S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int32Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0000" classname="Int32Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int32Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="Int32Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int32Array-S8 - should write the last 3 elements of an array" time="0.0000" classname="Int32Array-S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int32Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array" time="0.0000" classname="Int32Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint8Array-S1 - should replace the old array with the provided array when numeric range is empty" time="0.0000" classname="Uint8Array-S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint8Array-S2 - should replace a single element when numeric range is a single value" time="0.0000" classname="Uint8Array-S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint8Array-S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="Uint8Array-S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint8Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="Uint8Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint8Array-S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="Uint8Array-S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint8Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0000" classname="Uint8Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint8Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="Uint8Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint8Array-S8 - should write the last 3 elements of an array" time="0.0010" classname="Uint8Array-S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Uint8Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array" time="0.0000" classname="Uint8Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S1 - should replace the old array with the provided array when numeric range is empty" time="0.0010" classname="Int8Array-S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S2 - should replace a single element when numeric range is a single value" time="0.0000" classname="Int8Array-S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="Int8Array-S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="Int8Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="Int8Array-S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0000" classname="Int8Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="Int8Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S8 - should write the last 3 elements of an array" time="0.0000" classname="Int8Array-S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array" time="0.0000" classname="Int8Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array BLOB-S1 - should replace the old array with the provided array when numeric range is empty" time="0.0000" classname="BLOB-S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array BLOB-S2 - should replace a single element when numeric range is a single value" time="0.0000" classname="BLOB-S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array BLOB-S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="BLOB-S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array BLOB-S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="BLOB-S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array BLOB-S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="BLOB-S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array BLOB-S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0000" classname="BLOB-S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array BLOB-S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="BLOB-S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array BLOB-S8 - should write the last 3 elements of an array" time="0.0000" classname="BLOB-S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array BLOB-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array" time="0.0000" classname="BLOB-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S1 - should replace the old array with the provided array when numeric range is empty" time="0.0010" classname="Int8Array-S1 - should replace the old array with the provided array when numeric range is empty">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S2 - should replace a single element when numeric range is a single value" time="0.0000" classname="Int8Array-S2 - should replace a single element when numeric range is a single value">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S3 - should replace a single element when numeric range is a simple range" time="0.0000" classname="Int8Array-S3 - should replace a single element when numeric range is a simple range">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements" time="0.0000" classname="Int8Array-S4 - should replace a single element when numeric range is a pair of values matching the first two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S5 - should replace a single element when numeric range is a single value matching the last element" time="0.0000" classname="Int8Array-S5 - should replace a single element when numeric range is a single value matching the last element">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements" time="0.0010" classname="Int8Array-S6 - should replace a single element when numeric range is a pair of values matching the last two elements">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array" time="0.0000" classname="Int8Array-S7 - should replace a single element when numeric range is a pair of values matching the whole array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S8 - should write the last 3 elements of an array" time="0.0000" classname="Int8Array-S8 - should write the last 3 elements of an array">
    </testcase>
    <testcase name="Testing numerical range setting range of a typed  array Int8Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array" time="0.0000" classname="Int8Array-S9 - should return BadIndexRangeNoData if range is a matrix range and value is an array">
    </testcase>
  </testsuite>
  <testsuite name="Operations" timestamp="2021-02-09T07:11:48" tests="10" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range.js" time="0.0000" failures="0">
    <testcase name="Testing numerical range Operations &apos;&lt;empty&gt;&apos; &apos;&lt;empty&gt;&apos; should  overlap " time="0.0000" classname="&apos;&lt;empty&gt;&apos; &apos;&lt;empty&gt;&apos; should  overlap ">
    </testcase>
    <testcase name="Testing numerical range Operations &apos;&lt;empty&gt;&apos; &apos;5:6&apos; should  overlap " time="0.0000" classname="&apos;&lt;empty&gt;&apos; &apos;5:6&apos; should  overlap ">
    </testcase>
    <testcase name="Testing numerical range Operations  &apos;5:6&apos; &apos;&lt;empty&gt;&apos; should  overlap " time="0.0000" classname=" &apos;5:6&apos; &apos;&lt;empty&gt;&apos; should  overlap ">
    </testcase>
    <testcase name="Testing numerical range Operations  &apos;5&apos; &apos;8&apos; should not overlap " time="0.0000" classname=" &apos;5&apos; &apos;8&apos; should not overlap ">
    </testcase>
    <testcase name="Testing numerical range Operations  &apos;5&apos; &apos;5&apos; should not overlap " time="0.0000" classname=" &apos;5&apos; &apos;5&apos; should not overlap ">
    </testcase>
    <testcase name="Testing numerical range Operations &apos;1:2&apos; &apos;5:6&apos; should not overlap " time="0.0000" classname="&apos;1:2&apos; &apos;5:6&apos; should not overlap ">
    </testcase>
    <testcase name="Testing numerical range Operations &apos;1:6&apos; &apos;3:8&apos; should overlap " time="0.0000" classname="&apos;1:6&apos; &apos;3:8&apos; should overlap ">
    </testcase>
    <testcase name="Testing numerical range Operations &apos;1:6&apos; &apos;3:4&apos; should overlap " time="0.0000" classname="&apos;1:6&apos; &apos;3:4&apos; should overlap ">
    </testcase>
    <testcase name="Testing numerical range Operations &apos;3:4&apos; &apos;1:10&apos; should overlap " time="0.0000" classname="&apos;3:4&apos; &apos;1:10&apos; should overlap ">
    </testcase>
    <testcase name="Testing numerical range Operations &apos;1:2&apos; &apos;2:6&apos; should overlap " time="0.0000" classname="&apos;1:2&apos; &apos;2:6&apos; should overlap ">
    </testcase>
  </testsuite>
  <testsuite name=" encoding / decoding" timestamp="2021-02-09T07:11:48" tests="14" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-numeric-range\test\test_numeric_range_in_object.js" time="0.0060" failures="0">
    <testcase name=" encoding / decoding binary : should persist an object with a numeric range - empty" time="0.0020" classname="binary : should persist an object with a numeric range - empty">
    </testcase>
    <testcase name=" encoding / decoding binary : should persist an object with a numeric range - value pair" time="0.0000" classname="binary : should persist an object with a numeric range - value pair">
    </testcase>
    <testcase name=" encoding / decoding binary : should persist an object with a numeric range - single value" time="0.0010" classname="binary : should persist an object with a numeric range - single value">
    </testcase>
    <testcase name=" encoding / decoding binary : should persist an object with a numeric range - Invalid" time="0.0000" classname="binary : should persist an object with a numeric range - Invalid">
    </testcase>
    <testcase name=" encoding / decoding binary : should persist an object with a numeric range - MatrixRange - type 1" time="0.0000" classname="binary : should persist an object with a numeric range - MatrixRange - type 1">
    </testcase>
    <testcase name=" encoding / decoding binary : should persist an object with a numeric range - MatrixRange - type 2" time="0.0010" classname="binary : should persist an object with a numeric range - MatrixRange - type 2">
    </testcase>
    <testcase name=" encoding / decoding binary : should persist an object with a numeric range - MatrixRange - type 2" time="0.0000" classname="binary : should persist an object with a numeric range - MatrixRange - type 2">
    </testcase>
    <testcase name=" encoding / decoding json : should persist an object with a numeric range - empty" time="0.0010" classname="json : should persist an object with a numeric range - empty">
    </testcase>
    <testcase name=" encoding / decoding json : should persist an object with a numeric range - value pair" time="0.0010" classname="json : should persist an object with a numeric range - value pair">
    </testcase>
    <testcase name=" encoding / decoding json : should persist an object with a numeric range - single value" time="0.0000" classname="json : should persist an object with a numeric range - single value">
    </testcase>
    <testcase name=" encoding / decoding json : should persist an object with a numeric range - Invalid" time="0.0000" classname="json : should persist an object with a numeric range - Invalid">
    </testcase>
    <testcase name=" encoding / decoding json : should persist an object with a numeric range - MatrixRange - type 1" time="0.0000" classname="json : should persist an object with a numeric range - MatrixRange - type 1">
    </testcase>
    <testcase name=" encoding / decoding json : should persist an object with a numeric range - MatrixRange - type 2" time="0.0000" classname="json : should persist an object with a numeric range - MatrixRange - type 2">
    </testcase>
    <testcase name=" encoding / decoding json : should persist an object with a numeric range - MatrixRange - type 2" time="0.0000" classname="json : should persist an object with a numeric range - MatrixRange - type 2">
    </testcase>
  </testsuite>
  <testsuite name="testing ObjectRegistry" timestamp="2021-02-09T07:11:48" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-object-registry\test\test_objectRegistry.js" time="0.0370" failures="0">
    <testcase name="testing ObjectRegistry should register and unregister an object" time="0.0370" classname="should register and unregister an object">
    </testcase>
  </testsuite>
  <testsuite name="PacketAssembler" timestamp="2021-02-09T07:11:48" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-packet-assembler\test\test_packet_assembler.js" time="0.0050" failures="0">
    <testcase name="PacketAssembler should assemble a single packet" time="0.0020" classname="should assemble a single packet">
    </testcase>
    <testcase name="PacketAssembler should assemble a message sent over several packets" time="0.0010" classname="should assemble a message sent over several packets">
    </testcase>
    <testcase name="PacketAssembler should assemble a message sent one byte at a time" time="0.0010" classname="should assemble a message sent one byte at a time">
    </testcase>
    <testcase name="PacketAssembler should deal with packets containing data from 2 different messages" time="0.0010" classname="should deal with packets containing data from 2 different messages">
    </testcase>
  </testsuite>
  <testsuite name="Factories: construction" timestamp="2021-02-09T07:11:48" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_factory_registerObject.ts" time="0.0010" failures="0">
    <testcase name="Factories: construction a schema should provide a list of possible fields" time="0.0010" classname="a schema should provide a list of possible fields">
    </testcase>
  </testsuite>
  <testsuite name="testing Factory" timestamp="2021-02-09T07:11:48" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_factory_registerObject.ts" time="0.0710" failures="0">
    <testcase name="testing Factory FF1 - should construct a new object from a simple Class Description" time="0.0030" classname="FF1 - should construct a new object from a simple Class Description">
    </testcase>
    <testcase name="testing Factory FF2 - should construct a new object with options from a simple Class Description" time="0.0000" classname="FF2 - should construct a new object with options from a simple Class Description">
    </testcase>
    <testcase name="testing Factory FF3 - should construct a new object from a complex Class Description" time="0.0010" classname="FF3 - should construct a new object from a complex Class Description">
    </testcase>
    <testcase name="testing Factory FF4 - should encode and decode a simple object created from the Factory" time="0.0050" classname="FF4 - should encode and decode a simple object created from the Factory">
    </testcase>
    <testcase name="testing Factory FF5 - should encode and decode a composite object created from the Factory" time="0.0530" classname="FF5 - should encode and decode a composite object created from the Factory">
    </testcase>
    <testcase name="testing Factory FF6 - should encode and decode a composite object containing an array" time="0.0040" classname="FF6 - should encode and decode a composite object containing an array">
    </testcase>
    <testcase name="testing Factory FF7 - should create an Object with a containing an array of JSON object passed in the initializer" time="0.0030" classname="FF7 - should create an Object with a containing an array of JSON object passed in the initializer">
    </testcase>
    <testcase name="testing Factory FF8 - should create an Object with a containing an array of string passed in the initializer" time="0.0020" classname="FF8 - should create an Object with a containing an array of string passed in the initializer">
    </testcase>
  </testsuite>
  <testsuite name="Factories: testing encodingDefaultBinary and constructObject" timestamp="2021-02-09T07:11:48" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_factory_registerObject.ts" time="0.0240" failures="0">
    <testcase name="Factories: testing encodingDefaultBinary and constructObject XF1 a factory object should have a encodingDefaultBinary" time="0.0010" classname="XF1 a factory object should have a encodingDefaultBinary">
    </testcase>
    <testcase name="Factories: testing encodingDefaultBinary and constructObject XF3 should pretty print an object " time="0.0050" classname="XF3 should pretty print an object ">
    </testcase>
    <testcase name="Factories: testing encodingDefaultBinary and constructObject XF4 - should encode and decode a Object containing ByteString" time="0.0030" classname="XF4 - should encode and decode a Object containing ByteString">
    </testcase>
    <testcase name="Factories: testing encodingDefaultBinary and constructObject XF5 - should clone an object " time="0.0010" classname="XF5 - should clone an object ">
    </testcase>
    <testcase name="Factories: testing encodingDefaultBinary and constructObject XF6 - should analyse a encoded object" time="0.0140" classname="XF6 - should analyse a encoded object">
    </testcase>
  </testsuite>
  <testsuite name="BSHA - Binary Schemas Helper 1" timestamp="2021-02-09T07:11:48" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_issue310_202006.ts" time="0.0100" failures="0">
    <testcase name="BSHA - Binary Schemas Helper 1 should XCVB" time="0.0100" classname="should XCVB">
    </testcase>
  </testsuite>
  <testsuite name="BSHA - Binary Schemas Helper 1" timestamp="2021-02-09T07:11:48" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_schema.ts" time="0.0270" failures="0">
    <testcase name="BSHA - Binary Schemas Helper 1 BSH1 - should parse some structure types" time="0.0000" classname="BSH1 - should parse some structure types">
    </testcase>
    <testcase name="BSHA - Binary Schemas Helper 1 BSH2 - should parse some enumerated types" time="0.0000" classname="BSH2 - should parse some enumerated types">
    </testcase>
    <testcase name="BSHA - Binary Schemas Helper 1 BSH3 - should construct a dynamic object structure" time="0.0130" classname="BSH3 - should construct a dynamic object structure">
    </testcase>
    <testcase name="BSHA - Binary Schemas Helper 1 BSH4 - should handle StructureWithOptionalFields - 1" time="0.0030" classname="BSH4 - should handle StructureWithOptionalFields - 1">
    </testcase>
    <testcase name="BSHA - Binary Schemas Helper 1 BSH5 - should handle StructureWithOptionalFields - 2" time="0.0030" classname="BSH5 - should handle StructureWithOptionalFields - 2">
    </testcase>
    <testcase name="BSHA - Binary Schemas Helper 1 BSH6 - should handle StructureWithOptionalFields - 13 (all options fields missing)" time="0.0070" classname="BSH6 - should handle StructureWithOptionalFields - 13 (all options fields missing)">
    </testcase>
    <testcase name="BSHA - Binary Schemas Helper 1 BSH7 - should handle StructureWithOptionalFields - 13 (one field missing)" time="0.0010" classname="BSH7 - should handle StructureWithOptionalFields - 13 (one field missing)">
    </testcase>
    <testcase name="BSHA - Binary Schemas Helper 1 BSH8 - should handle StructureWithOptionalFields - 13 (one field missing 2)" time="0.0000" classname="BSH8 - should handle StructureWithOptionalFields - 13 (one field missing 2)">
    </testcase>
  </testsuite>
  <testsuite name="BSHB - Binary Schemas Helper 2" timestamp="2021-02-09T07:11:48" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_schema.ts" time="0.0050" failures="0">
    <testcase name="BSHB - Binary Schemas Helper 2 BSHB1 - should parse some structure types" time="0.0000" classname="BSHB1 - should parse some structure types">
    </testcase>
    <testcase name="BSHB - Binary Schemas Helper 2 BSHB2 - should parse some enumerated types" time="0.0000" classname="BSHB2 - should parse some enumerated types">
    </testcase>
    <testcase name="BSHB - Binary Schemas Helper 2 BSHB3 - should construct a dynamic object structure 1" time="0.0010" classname="BSHB3 - should construct a dynamic object structure 1">
    </testcase>
    <testcase name="BSHB - Binary Schemas Helper 2 BSHB4 - should construct a dynamic object structure 2" time="0.0040" classname="BSHB4 - should construct a dynamic object structure 2">
    </testcase>
  </testsuite>
  <testsuite name="BSHC - Binary Schemas Helper 3 (with bit fields)" timestamp="2021-02-09T07:11:48" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_schema.ts" time="0.3700" failures="0">
    <testcase name="BSHC - Binary Schemas Helper 3 (with bit fields) BSHC1 - should parse ProcessingTimesDataType structure types" time="0.0010" classname="BSHC1 - should parse ProcessingTimesDataType structure types">
    </testcase>
    <testcase name="BSHC - Binary Schemas Helper 3 (with bit fields) BSHC2 - should construct a dynamic object structure ProcessingTimesDataType - 1" time="0.0040" classname="BSHC2 - should construct a dynamic object structure ProcessingTimesDataType - 1">
    </testcase>
    <testcase name="BSHC - Binary Schemas Helper 3 (with bit fields) BSHC3 - should construct a dynamic object structure ProcessingTimesDataType - 2" time="0.0010" classname="BSHC3 - should construct a dynamic object structure ProcessingTimesDataType - 2">
    </testcase>
    <testcase name="BSHC - Binary Schemas Helper 3 (with bit fields) BSHC4 - should construct a ConfigurationDataType - 1" time="0.2780" classname="BSHC4 - should construct a ConfigurationDataType - 1">
    </testcase>
    <testcase name="BSHC - Binary Schemas Helper 3 (with bit fields) BSHC5 - should construct a ResultDataType - 1" time="0.0860" classname="BSHC5 - should construct a ResultDataType - 1">
    </testcase>
  </testsuite>
  <testsuite name="BSHD - Binary Schemas Helper 4" timestamp="2021-02-09T07:11:48" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_schema.ts" time="0.0000" failures="0">
    <testcase name="BSHD - Binary Schemas Helper 4 BSHD1 - should parse NodeIdType structure types" time="0.0000" classname="BSHD1 - should parse NodeIdType structure types">
    </testcase>
    <testcase name="BSHD - Binary Schemas Helper 4 BSHD2 - should construct a dynamic object structure ProcessingTimesDataType - 1" time="0.0000" classname="BSHD2 - should construct a dynamic object structure ProcessingTimesDataType - 1">
    </testcase>
  </testsuite>
  <testsuite name="BSHE - Binary Schemas Helper 5 (Union)" timestamp="2021-02-09T07:11:48" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_schema.ts" time="0.0680" failures="0">
    <testcase name="BSHE - Binary Schemas Helper 5 (Union) BSHE1 - should parse ScanData union" time="0.0470" classname="BSHE1 - should parse ScanData union">
    </testcase>
    <testcase name="BSHE - Binary Schemas Helper 5 (Union) BSHE2 - should parse MyScanResult structure types" time="0.0210" classname="BSHE2 - should parse MyScanResult structure types">
    </testcase>
    <testcase name="BSHE - Binary Schemas Helper 5 (Union) BSHE3 -  should construct a dynamic object structure ProcessingTimesDataType - 1" time="0.0000" classname="BSHE3 -  should construct a dynamic object structure ProcessingTimesDataType - 1">
    </testcase>
  </testsuite>
  <testsuite name="BSSGF - Binary Schemas Helper 5 (DerivedType -1)" timestamp="2021-02-09T07:11:49" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_schema.ts" time="0.0150" failures="0">
    <testcase name="BSSGF - Binary Schemas Helper 5 (DerivedType -1) BSHF1 - should handle RecipeIdExternalDataType" time="0.0150" classname="BSHF1 - should handle RecipeIdExternalDataType">
    </testcase>
  </testsuite>
  <testsuite name="CTS-1 convert Extension Object definition to Typescript 1" timestamp="2021-02-09T07:11:49" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_toTypeScript.ts" time="0.0010" failures="0">
    <testcase name="CTS-1 convert Extension Object definition to Typescript 1 should convert a dynamic object definition to typescript" time="0.0010" classname="should convert a dynamic object definition to typescript">
    </testcase>
  </testsuite>
  <testsuite name="convert Extension Object definition to Typescript 2" timestamp="2021-02-09T07:11:49" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-schemas\test\test_toTypeScript.ts" time="0.0000" failures="0">
    <testcase name="convert Extension Object definition to Typescript 2 should convert a dynamic object definition to typescript" time="0.0000" classname="should convert a dynamic object definition to typescript">
    </testcase>
  </testsuite>
  <testsuite name="Testing multi chunk" timestamp="2021-02-09T07:11:49" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_browse_service.js" time="0.0190" failures="0">
    <testcase name="Testing multi chunk should decode a real BrowseRequest" time="0.0060" classname="should decode a real BrowseRequest">
    </testcase>
    <testcase name="Testing multi chunk should decode a real BrowseResponse" time="0.0080" classname="should decode a real BrowseResponse">
    </testcase>
    <testcase name="Testing multi chunk should decode a real BrowseResponse with StatusCode error and some diagnostic info" time="0.0050" classname="should decode a real BrowseResponse with StatusCode error and some diagnostic info">
    </testcase>
  </testsuite>
  <testsuite name="testing ClientSecureChannelLayer " timestamp="2021-02-09T07:11:49" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0230" failures="0">
    <testcase name="testing ClientSecureChannelLayer  should create and close a ClientSecureChannelLayer" time="0.0090" classname="should create and close a ClientSecureChannelLayer">
    </testcase>
    <testcase name="testing ClientSecureChannelLayer  should use token provided by server in messages" time="0.0060" classname="should use token provided by server in messages">
    </testcase>
    <testcase name="testing ClientSecureChannelLayer  should callback with an error if performMessageTransaction is called before connection" time="0.0010" classname="should callback with an error if performMessageTransaction is called before connection">
    </testcase>
    <testcase name="testing ClientSecureChannelLayer  should expose the total number of bytes read and written" time="0.0070" classname="should expose the total number of bytes read and written">
    </testcase>
  </testsuite>
  <testsuite name="decompose message body in chunks" timestamp="2021-02-09T07:11:49" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_decompose_message_body_in_chunks.js" time="0.0020" failures="0">
    <testcase name="decompose message body in chunks should decompose a message body in at least one chunk " time="0.0020" classname="should decompose a message body in at least one chunk ">
    </testcase>
  </testsuite>
  <testsuite name="testing message decryption" timestamp="2021-02-09T07:11:49" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_decrypt_unsign.js" time="0.0020" failures="0">
    <testcase name="testing message decryption should decrypt an OPN packet and verify that the signature is correct" time="0.0020" classname="should decrypt an OPN packet and verify that the signature is correct">
    </testcase>
  </testsuite>
  <testsuite name="test issue with final CLO message" timestamp="2021-02-09T07:11:49" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_issue.js" time="0.0010" failures="0">
    <testcase name="test issue with final CLO message dealing with CLO message to CloseSecureChannel " time="0.0010" classname="dealing with CLO message to CloseSecureChannel ">
    </testcase>
  </testsuite>
  <testsuite name="MessageBuilder" timestamp="2021-02-09T07:11:49" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_message_builder.js" time="0.3610" failures="0">
    <testcase name="MessageBuilder should raise a error event if a HEL or ACK packet is fed instead of a MSG packet " time="0.0010" classname="should raise a error event if a HEL or ACK packet is fed instead of a MSG packet ">
    </testcase>
    <testcase name="MessageBuilder should raise an error if the embedded object id is not known" time="0.0020" classname="should raise an error if the embedded object id is not known">
    </testcase>
    <testcase name="MessageBuilder should raise an error if the embedded object failed to be decoded" time="0.3570" classname="should raise an error if the embedded object failed to be decoded">
    </testcase>
    <testcase name="MessageBuilder should emit a &apos;invalid_sequence_number&apos; event if a message does not have a 1-increased sequence number" time="0.0010" classname="should emit a &apos;invalid_sequence_number&apos; event if a message does not have a 1-increased sequence number">
    </testcase>
  </testsuite>
  <testsuite name="MessageBuilder with SIGN support" timestamp="2021-02-09T07:11:49" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_message_builder_with_sign_chunks.js" time="0.0110" failures="0">
    <testcase name="MessageBuilder with SIGN support should not emit an error event if chunks have valid signature" time="0.0070" classname="should not emit an error event if chunks have valid signature">
    </testcase>
    <testcase name="MessageBuilder with SIGN support should reconstruct a full message made of many signed chunks" time="0.0030" classname="should reconstruct a full message made of many signed chunks">
    </testcase>
    <testcase name="MessageBuilder with SIGN support should emit an bad_signature event if chunk has been tempered" time="0.0010" classname="should emit an bad_signature event if chunk has been tempered">
    </testcase>
  </testsuite>
  <testsuite name="MessageBuilder with SIGN &amp; ENCRYPT support (OPN) " timestamp="2021-02-09T07:11:49" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_message_builder_with_sign_chunks.js" time="0.0110" failures="0">
    <testcase name="MessageBuilder with SIGN &amp; ENCRYPT support (OPN)  should not emit an error event with valid SIGN &amp; ENCRYPT chunks" time="0.0110" classname="should not emit an error event with valid SIGN &amp; ENCRYPT chunks">
    </testcase>
  </testsuite>
  <testsuite name="MessageBuilder with SIGN &amp; ENCRYPT support (MSG) " timestamp="2021-02-09T07:11:49" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_message_builder_with_sign_chunks.js" time="0.0020" failures="0">
    <testcase name="MessageBuilder with SIGN &amp; ENCRYPT support (MSG)  should process a signed and encrypted message" time="0.0020" classname="should process a signed and encrypted message">
    </testcase>
  </testsuite>
  <testsuite name="MessageChunkManager" timestamp="2021-02-09T07:11:49" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_message_chunk_manager.js" time="0.0040" failures="0">
    <testcase name="MessageChunkManager should split a message in chunk and produce a header ( NO SIGN &amp; NO ENCRYPT)." time="0.0010" classname="should split a message in chunk and produce a header ( NO SIGN &amp; NO ENCRYPT).">
    </testcase>
    <testcase name="MessageChunkManager should split a message in chunk and produce a header (  SIGN &amp; NO ENCRYPT)." time="0.0030" classname="should split a message in chunk and produce a header (  SIGN &amp; NO ENCRYPT).">
    </testcase>
  </testsuite>
  <testsuite name="Read Service" timestamp="2021-02-09T07:11:49" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_read_service.js" time="0.0300" failures="0">
    <testcase name="Read Service should decode a real ReadRequest 1/2" time="0.0020" classname="should decode a real ReadRequest 1/2">
    </testcase>
    <testcase name="Read Service should decode a real ReadRequest 2/2" time="0.0120" classname="should decode a real ReadRequest 2/2">
    </testcase>
    <testcase name="Read Service should decode a real ReadResponse 1/2" time="0.0020" classname="should decode a real ReadResponse 1/2">
    </testcase>
    <testcase name="Read Service should decode a real ReadResponse 2/2" time="0.0120" classname="should decode a real ReadResponse 2/2">
    </testcase>
    <testcase name="Read Service should encode and decode a ReadRequest " time="0.0020" classname="should encode and decode a ReadRequest ">
    </testcase>
  </testsuite>
  <testsuite name="Testing ClientSecureChannel 1" timestamp="2021-02-09T07:11:49" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.4470" failures="0">
    <testcase name="Testing ClientSecureChannel 1 should not receive a close event with an error when attempting to connect to a non existent server" time="0.2290" classname="should not receive a close event with an error when attempting to connect to a non existent server">
    </testcase>
    <testcase name="Testing ClientSecureChannel 1 should not receive a close event with an error when attempting to connect to a valid server on a invalid port" time="0.2180" classname="should not receive a close event with an error when attempting to connect to a valid server on a invalid port">
    </testcase>
  </testsuite>
  <testsuite name="Testing ClientSecureChannel 2" timestamp="2021-02-09T07:11:49" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0140" failures="0">
    <testcase name="Testing ClientSecureChannel 2 should establish a client secure channel " time="0.0140" classname="should establish a client secure channel ">
    </testcase>
  </testsuite>
  <testsuite name="Testing ClientSecureChannel with BackOff reconnection strategy" timestamp="2021-02-09T07:11:50" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="20.9470" failures="0">
    <testcase name="Testing ClientSecureChannel with BackOff reconnection strategy WW2-a connectionStrategy: should retry many times and fail eventually " time="0.0780" classname="WW2-a connectionStrategy: should retry many times and fail eventually ">
    </testcase>
    <testcase name="Testing ClientSecureChannel with BackOff reconnection strategy WW2-b should be possible to interrupt the retry process  " time="0.1540" classname="WW2-b should be possible to interrupt the retry process  ">
    </testcase>
    <testcase name="Testing ClientSecureChannel with BackOff reconnection strategy WW2-c secureChannel that starts before the server is up and running should eventually connect without error" time="7.6870" classname="WW2-c secureChannel that starts before the server is up and running should eventually connect without error">
    </testcase>
    <testcase name="Testing ClientSecureChannel with BackOff reconnection strategy MMM1 client SecureChannel should detect connection problem" time="13.0190" classname="MMM1 client SecureChannel should detect connection problem">
    </testcase>
    <testcase name="Testing ClientSecureChannel with BackOff reconnection strategy MMM2 testing if client SecureChannel could  sabotage itself when connection problem" time="0.0090" classname="MMM2 testing if client SecureChannel could  sabotage itself when connection problem">
    </testcase>
  </testsuite>
  <testsuite name="SecureMessageChunkManager" timestamp="2021-02-09T07:12:10" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_secure_channel_service.js" time="0.0190" failures="0">
    <testcase name="SecureMessageChunkManager should reconstruct a valid message when message is received in multiple chunks" time="0.0150" classname="should reconstruct a valid message when message is received in multiple chunks">
    </testcase>
    <testcase name="SecureMessageChunkManager should receive and handle an ERR message" time="0.0020" classname="should receive and handle an ERR message">
    </testcase>
    <testcase name="SecureMessageChunkManager should test CloseSecureChannelResponse" time="0.0020" classname="should test CloseSecureChannelResponse">
    </testcase>
  </testsuite>
  <testsuite name="Testing secure client and server connection" timestamp="2021-02-09T07:12:10" tests="51" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.7280" failures="0">
    <testcase name="Testing secure client and server connection client &amp; server channel  - no security " time="0.0270" classname="client &amp; server channel  - no security ">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - with security " time="0.0400" classname="client &amp; server channel  - with security ">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - A" time="0.0520" classname="client &amp; server channel  - A">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0240" classname="client &amp; server channel  - 1024 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0230" classname="client &amp; server channel  - 1024 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0240" classname="client &amp; server channel  - 1024 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0200" classname="client &amp; server channel  - 1024 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0260" classname="client &amp; server channel  - 1024 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0190" classname="client &amp; server channel  - 1024 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0270" classname="client &amp; server channel  - 1024 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0200" classname="client &amp; server channel  - 1024 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0380" classname="client &amp; server channel  - 1024 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0440" classname="client &amp; server channel  - 1024 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0810" classname="client &amp; server channel  - 1024 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 1024 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0440" classname="client &amp; server channel  - 1024 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0160" classname="client &amp; server channel  - 2048 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0210" classname="client &amp; server channel  - 2048 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0270" classname="client &amp; server channel  - 2048 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0260" classname="client &amp; server channel  - 2048 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0290" classname="client &amp; server channel  - 2048 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0220" classname="client &amp; server channel  - 2048 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0300" classname="client &amp; server channel  - 2048 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0350" classname="client &amp; server channel  - 2048 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0420" classname="client &amp; server channel  - 2048 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0300" classname="client &amp; server channel  - 2048 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0510" classname="client &amp; server channel  - 2048 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 2048 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0410" classname="client &amp; server channel  - 2048 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0200" classname="client &amp; server channel  - 3072 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0180" classname="client &amp; server channel  - 3072 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0280" classname="client &amp; server channel  - 3072 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0220" classname="client &amp; server channel  - 3072 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0250" classname="client &amp; server channel  - 3072 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0260" classname="client &amp; server channel  - 3072 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0340" classname="client &amp; server channel  - 3072 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0360" classname="client &amp; server channel  - 3072 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0440" classname="client &amp; server channel  - 3072 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0420" classname="client &amp; server channel  - 3072 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0490" classname="client &amp; server channel  - 3072 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 3072 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0370" classname="client &amp; server channel  - 3072 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0240" classname="client &amp; server channel  - 4096 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0260" classname="client &amp; server channel  - 4096 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0250" classname="client &amp; server channel  - 4096 1024 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0280" classname="client &amp; server channel  - 4096 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0270" classname="client &amp; server channel  - 4096 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0290" classname="client &amp; server channel  - 4096 2048 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0440" classname="client &amp; server channel  - 4096 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0490" classname="client &amp; server channel  - 4096 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0530" classname="client &amp; server channel  - 4096 3072 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" time="0.0510" classname="client &amp; server channel  - 4096 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256" time="0.0580" classname="client &amp; server channel  - 4096 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256">
    </testcase>
    <testcase name="Testing secure client and server connection client &amp; server channel  - 4096 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256" time="0.0540" classname="client &amp; server channel  - 4096 4096 http://opcfoundation.org/UA/SecurityPolicy#Basic256">
    </testcase>
  </testsuite>
  <testsuite name="Security Policy" timestamp="2021-02-09T07:12:12" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_security_policy.js" time="0.0020" failures="0">
    <testcase name="Security Policy should convert a security policy uri to an enum value" time="0.0010" classname="should convert a security policy uri to an enum value">
    </testcase>
    <testcase name="Security Policy should return SecurityPolicy.Invalid if not supported" time="0.0000" classname="should return SecurityPolicy.Invalid if not supported">
    </testcase>
    <testcase name="Security Policy should turn a Security Policy Enum value into an URI" time="0.0000" classname="should turn a Security Policy Enum value into an URI">
    </testcase>
    <testcase name="Security Policy should turn a Security Policy short string to an URI" time="0.0000" classname="should turn a Security Policy short string to an URI">
    </testcase>
    <testcase name="Security Policy should thrown an exception when turning an invalid SecurityPolicy into an uri" time="0.0010" classname="should thrown an exception when turning an invalid SecurityPolicy into an uri">
    </testcase>
  </testsuite>
  <testsuite name="Security Policy computeSignature, verifySignature" timestamp="2021-02-09T07:12:12" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_security_policy.js" time="0.0030" failures="0">
    <testcase name="Security Policy computeSignature, verifySignature should compute a Signature and verify a signature" time="0.0020" classname="should compute a Signature and verify a signature">
    </testcase>
    <testcase name="Security Policy computeSignature, verifySignature should not verify a signature that has been tampered" time="0.0010" classname="should not verify a signature that has been tampered">
    </testcase>
  </testsuite>
  <testsuite name="SequenceNumberGenerator" timestamp="2021-02-09T07:12:12" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_sequence_number_generator.js" time="0.0010" failures="0">
    <testcase name="SequenceNumberGenerator the first sequence number shall be one " time="0.0010" classname="the first sequence number shall be one ">
    </testcase>
    <testcase name="SequenceNumberGenerator the second sequence number shall be two " time="0.0000" classname="the second sequence number shall be two ">
    </testcase>
    <testcase name="SequenceNumberGenerator the sequence number should roll over to 1 after reaching four billion" time="0.0000" classname="the sequence number should roll over to 1 after reaching four billion">
    </testcase>
  </testsuite>
  <testsuite name="testing ServerSecureChannelLayer " timestamp="2021-02-09T07:12:12" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="2.4500" failures="0">
    <testcase name="testing ServerSecureChannelLayer  KK1 should create a ServerSecureChannelLayer" time="0.0010" classname="KK1 should create a ServerSecureChannelLayer">
    </testcase>
    <testcase name="testing ServerSecureChannelLayer  KK2 should end with a timeout if no message is received from client" time="1.0690" classname="KK2 should end with a timeout if no message is received from client">
    </testcase>
    <testcase name="testing ServerSecureChannelLayer  KK3 should end with a timeout if HEL/ACK is OK but no further message is received from client" time="0.0640" classname="KK3 should end with a timeout if HEL/ACK is OK but no further message is received from client">
    </testcase>
    <testcase name="testing ServerSecureChannelLayer  KK4 should return an error and shutdown if first message is not OpenSecureChannelRequest " time="1.0060" classname="KK4 should return an error and shutdown if first message is not OpenSecureChannelRequest ">
    </testcase>
    <testcase name="testing ServerSecureChannelLayer  KK5 should handle a OpenSecureChannelRequest and pass no err in the init callback " time="0.0020" classname="KK5 should handle a OpenSecureChannelRequest and pass no err in the init callback ">
    </testcase>
    <testcase name="testing ServerSecureChannelLayer  KK6 should handle a OpenSecureChannelRequest start emitting subsequent messages " time="0.0030" classname="KK6 should handle a OpenSecureChannelRequest start emitting subsequent messages ">
    </testcase>
    <testcase name="testing ServerSecureChannelLayer  KK7 should handle a CloseSecureChannelRequest directly and emit a abort event" time="0.3050" classname="KK7 should handle a CloseSecureChannelRequest directly and emit a abort event">
    </testcase>
  </testsuite>
  <testsuite name="testing with problematic packet" timestamp="2021-02-09T07:12:15" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-secure-channel\test\test_various_packets.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Testing Server Side PushCertificateManager" timestamp="2021-02-09T07:12:15" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="9.5890" failures="0">
    <testcase name="Testing Server Side PushCertificateManager should expose support format" time="0.0000" classname="should expose support format">
    </testcase>
    <testcase name="Testing Server Side PushCertificateManager should create a certificate signing request - simple form" time="0.4730" classname="should create a certificate signing request - simple form">
    </testcase>
    <testcase name="Testing Server Side PushCertificateManager should provide rejected list" time="0.1760" classname="should provide rejected list">
    </testcase>
    <testcase name="Testing Server Side PushCertificateManager updateCertificate should return BadSecurityChecksFailed if certificate doesn&apos;t match private key " time="4.9220" classname="updateCertificate should return BadSecurityChecksFailed if certificate doesn&apos;t match private key ">
    </testcase>
    <testcase name="Testing Server Side PushCertificateManager updateCertificate should return BadSecurityChecksFailed if certificate already out dated" time="0.9780" classname="updateCertificate should return BadSecurityChecksFailed if certificate already out dated">
    </testcase>
    <testcase name="Testing Server Side PushCertificateManager updateCertificate should return Good is certificate passes all sanity checks" time="1.1220" classname="updateCertificate should return Good is certificate passes all sanity checks">
    </testcase>
    <testcase name="Testing Server Side PushCertificateManager applyChanges shall replace certificate " time="1.9180" classname="applyChanges shall replace certificate ">
    </testcase>
  </testsuite>
  <testsuite name="Testing server configured with push certificate management" timestamp="2021-02-09T07:12:29" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="34.3240" failures="0">
    <testcase name="Testing server configured with push certificate management SCT-1 should modify a server to support push certificate management" time="2.1510" classname="SCT-1 should modify a server to support push certificate management">
    </testcase>
    <testcase name="Testing server configured with push certificate management SCT-2 should be possible to change the certificate of a server that supports push certificate " time="11.8540" classname="SCT-2 should be possible to change the certificate of a server that supports push certificate ">
    </testcase>
    <testcase name="Testing server configured with push certificate management SCT-3 - Client reconnection should work if server changes its private key" time="8.7740" classname="SCT-3 - Client reconnection should work if server changes its private key">
    </testcase>
    <testcase name="Testing server configured with push certificate management SCT-4 should be possible to change the certificate and PrivateKey of the server" time="11.5450" classname="SCT-4 should be possible to change the certificate and PrivateKey of the server">
    </testcase>
  </testsuite>
  <testsuite name="ServerConfiguration" timestamp="2021-02-09T07:13:09" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="ServerConfiguration should expose a server configuration object" time="0.0010" classname="should expose a server configuration object">
    </testcase>
    <testcase name="ServerConfiguration should expose a server configuration object - Certificate Management" time="0.0000" classname="should expose a server configuration object - Certificate Management">
    </testcase>
    <testcase name="ServerConfiguration server configuration should make its first level object visible" time="0.0000" classname="server configuration should make its first level object visible">
    </testcase>
    <testcase name="ServerConfiguration server configuration should hide children of certificate groups to non admin user" time="0.0000" classname="server configuration should hide children of certificate groups to non admin user">
    </testcase>
    <testcase name="ServerConfiguration should expose a server configuration object - KeyCredential Management" time="0.0000" classname="should expose a server configuration object - KeyCredential Management">
    </testcase>
    <testcase name="ServerConfiguration should expose a server configuration object - Authorization Management" time="0.0000" classname="should expose a server configuration object - Authorization Management">
    </testcase>
  </testsuite>
  <testsuite name="Push Certificate Management model" timestamp="2021-02-09T07:13:12" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.4410" failures="0">
    <testcase name="ServerConfiguration Push Certificate Management model should implement createSigningRequest" time="0.4410" classname="should implement createSigningRequest">
    </testcase>
  </testsuite>
  <testsuite name="Server Side MonitoredItem" timestamp="2021-02-09T07:13:12" tests="18" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0400" failures="0">
    <testcase name="Server Side MonitoredItem should create a MonitoredItem" time="0.0020" classname="should create a MonitoredItem">
    </testcase>
    <testcase name="Server Side MonitoredItem a MonitoredItem should trigger a read event according to sampling interval in Reporting mode" time="0.0150" classname="a MonitoredItem should trigger a read event according to sampling interval in Reporting mode">
    </testcase>
    <testcase name="Server Side MonitoredItem a MonitoredItem should enqueue a new value and store it in a queue" time="0.0000" classname="a MonitoredItem should enqueue a new value and store it in a queue">
    </testcase>
    <testcase name="Server Side MonitoredItem a MonitoredItem should discard old value from the queue when discardOldest is true" time="0.0010" classname="a MonitoredItem should discard old value from the queue when discardOldest is true">
    </testcase>
    <testcase name="Server Side MonitoredItem a MonitoredItem should discard last value when queue is full when discardOldest is false , and set the overflow bit" time="0.0010" classname="a MonitoredItem should discard last value when queue is full when discardOldest is false , and set the overflow bit">
    </testcase>
    <testcase name="Server Side MonitoredItem should set timestamp to the recorded value without timestamp (variation 1)" time="0.0020" classname="should set timestamp to the recorded value without timestamp (variation 1)">
    </testcase>
    <testcase name="Server Side MonitoredItem should set timestamp to the recorded value with a given sourceTimestamp (variation 2)" time="0.0010" classname="should set timestamp to the recorded value with a given sourceTimestamp (variation 2)">
    </testcase>
    <testcase name="Server Side MonitoredItem a MonitoredItem should trigger a read event according to sampling interval" time="0.0030" classname="a MonitoredItem should trigger a read event according to sampling interval">
    </testcase>
    <testcase name="Server Side MonitoredItem a MonitoredItem should not trigger any read event after terminate has been called" time="0.0060" classname="a MonitoredItem should not trigger any read event after terminate has been called">
    </testcase>
    <testcase name="Server Side MonitoredItem MonitoredItem#modify should cap queue size" time="0.0010" classname="MonitoredItem#modify should cap queue size">
    </testcase>
    <testcase name="Server Side MonitoredItem MonitoredItem#modify should cap samplingInterval" time="0.0000" classname="MonitoredItem#modify should cap samplingInterval">
    </testcase>
    <testcase name="Server Side MonitoredItem MonitoredItem#modify : changing queue size from 2 to 1 when queue is full, should trim queue (discardOldest=true)" time="0.0010" classname="MonitoredItem#modify : changing queue size from 2 to 1 when queue is full, should trim queue (discardOldest=true)">
    </testcase>
    <testcase name="Server Side MonitoredItem MonitoredItem#modify : changing queue size from 2 to 1 when queue is full, should trim queue (discardOldest=false)" time="0.0050" classname="MonitoredItem#modify : changing queue size from 2 to 1 when queue is full, should trim queue (discardOldest=false)">
    </testcase>
    <testcase name="Server Side MonitoredItem MonitoredItem#modify : changing queue size from 4 to 2 when queue is full, should trim queue (discardOldest=false)" time="0.0010" classname="MonitoredItem#modify : changing queue size from 4 to 2 when queue is full, should trim queue (discardOldest=false)">
    </testcase>
    <testcase name="Server Side MonitoredItem MonitoringItem#setMonitoringMode : setting the mode to DISABLED should cause all queued Notifications to be deleted" time="0.0000" classname="MonitoringItem#setMonitoringMode : setting the mode to DISABLED should cause all queued Notifications to be deleted">
    </testcase>
    <testcase name="Server Side MonitoredItem should set the OverflowBit as specified in the example in specification - Fig 17 Queue overflow handling    " time="0.0010" classname="should set the OverflowBit as specified in the example in specification - Fig 17 Queue overflow handling    ">
    </testcase>
    <testcase name="Server Side MonitoredItem StatusCode.Overflow bit should not be set when queuesize is 1. (discardOldest === true)" time="0.0000" classname="StatusCode.Overflow bit should not be set when queuesize is 1. (discardOldest === true)">
    </testcase>
    <testcase name="Server Side MonitoredItem StatusCode.Overflow bit should not be set when queuesize is 1. (discardOldest === false)" time="0.0000" classname="StatusCode.Overflow bit should not be set when queuesize is 1. (discardOldest === false)">
    </testcase>
  </testsuite>
  <testsuite name="MonitoredItem with DataChangeFilter" timestamp="2021-02-09T07:13:12" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0180" failures="0">
    <testcase name="MonitoredItem with DataChangeFilter DeadbandType.None - should only detect status change when dataChangeFilter trigger is DataChangeTrigger.Status" time="0.0010" classname="DeadbandType.None - should only detect status change when dataChangeFilter trigger is DataChangeTrigger.Status">
    </testcase>
    <testcase name="MonitoredItem with DataChangeFilter DeadbandType.None - should detect status change &amp; value change when dataChangeFilter trigger is DataChangeTrigger.StatusValue" time="0.0010" classname="DeadbandType.None - should detect status change &amp; value change when dataChangeFilter trigger is DataChangeTrigger.StatusValue">
    </testcase>
    <testcase name="MonitoredItem with DataChangeFilter DeadbandType.Absolute - should detect status change &amp; value change when dataChangeFilter trigger is DataChangeTrigger.StatusValue and deadband is 8" time="0.0010" classname="DeadbandType.Absolute - should detect status change &amp; value change when dataChangeFilter trigger is DataChangeTrigger.StatusValue and deadband is 8">
    </testcase>
    <testcase name="MonitoredItem with DataChangeFilter DeadbandType.Percent - should detect status change &amp; value change when dataChangeFilter trigger is DataChangeTrigger.StatusValue and deadband is 20%" time="0.0070" classname="DeadbandType.Percent - should detect status change &amp; value change when dataChangeFilter trigger is DataChangeTrigger.StatusValue and deadband is 20%">
    </testcase>
    <testcase name="MonitoredItem with DataChangeFilter DeadbandType.Percent - changing filter in the middle" time="0.0050" classname="DeadbandType.Percent - changing filter in the middle">
    </testcase>
    <testcase name="MonitoredItem with DataChangeFilter DeadbandType.Percent - 99 percent" time="0.0020" classname="DeadbandType.Percent - 99 percent">
    </testcase>
    <testcase name="MonitoredItem with DataChangeFilter ctt DataAccess PercentDeadBand 018" time="0.0010" classname="ctt DataAccess PercentDeadBand 018">
    </testcase>
  </testsuite>
  <testsuite name="OPCUAServer" timestamp="2021-02-09T07:13:12" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1870" failures="0">
    <testcase name="OPCUAServer should dismiss all existing sessions upon termination" time="0.1270" classname="should dismiss all existing sessions upon termination">
    </testcase>
    <testcase name="OPCUAServer server address space have a node matching session.nodeId" time="0.0600" classname="server address space have a node matching session.nodeId">
    </testcase>
  </testsuite>
  <testsuite name="OPCUAServer-2" timestamp="2021-02-09T07:13:13" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="OPCUAServer-2 #rejectedSessionCount" time="0.0000" classname="#rejectedSessionCount">
    </testcase>
    <testcase name="OPCUAServer-2 #rejectedRequestsCount" time="0.0010" classname="#rejectedRequestsCount">
    </testcase>
    <testcase name="OPCUAServer-2 #sessionAbortCount" time="0.0000" classname="#sessionAbortCount">
    </testcase>
    <testcase name="OPCUAServer-2 #publishingIntervalCount" time="0.0000" classname="#publishingIntervalCount">
    </testcase>
    <testcase name="OPCUAServer-2 #buildInfo" time="0.0000" classname="#buildInfo">
    </testcase>
  </testsuite>
  <testsuite name="OPCUAServer-3" timestamp="2021-02-09T07:13:13" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="OPCUAServer-3 checking IOPCUAServer properties before startup" time="0.0000" classname="checking IOPCUAServer properties before startup">
    </testcase>
  </testsuite>
  <testsuite name="Queue" timestamp="2021-02-09T07:13:13" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-server\test\test_queue.ts" time="0.0010" failures="0">
    <testcase name="Queue should iterate a queue" time="0.0010" classname="should iterate a queue">
    </testcase>
  </testsuite>
  <testsuite name="testing Events  " timestamp="2021-02-09T07:13:13" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0120" failures="0">
    <testcase name="testing Events   should create a new EventType" time="0.0000" classname="should create a new EventType">
    </testcase>
    <testcase name="testing Events   should raise a new transitory event of  EventType" time="0.0030" classname="should raise a new transitory event of  EventType">
    </testcase>
    <testcase name="testing Events   should extract EventData from an select clause" time="0.0020" classname="should extract EventData from an select clause">
    </testcase>
    <testcase name="testing Events   should filter an event" time="0.0030" classname="should filter an event">
    </testcase>
    <testcase name="testing Events   should bubble events up" time="0.0040" classname="should bubble events up">
    </testcase>
  </testsuite>
  <testsuite name="testing 2 servers on same port " timestamp="2021-02-09T07:13:13" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2200" failures="0">
    <testcase name="testing 2 servers on same port  should fail to start a second server on a busy port " time="0.2200" classname="should fail to start a second server on a busy port ">
    </testcase>
  </testsuite>
  <testsuite name="OPCUAServerEndpoint#addEndpointDescription" timestamp="2021-02-09T07:13:14" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0030" failures="0">
    <testcase name="OPCUAServerEndpoint#addEndpointDescription should  accept  to add endpoint endMessageSecurityMode.None and SecurityPolicy.None" time="0.0000" classname="should  accept  to add endpoint endMessageSecurityMode.None and SecurityPolicy.None">
    </testcase>
    <testcase name="OPCUAServerEndpoint#addEndpointDescription should  accept  to add endpoint endMessageSecurityMode.None and SecurityPolicy.None twice" time="0.0010" classname="should  accept  to add endpoint endMessageSecurityMode.None and SecurityPolicy.None twice">
    </testcase>
    <testcase name="OPCUAServerEndpoint#addEndpointDescription should not accept to add endpoint with MessageSecurityMode.None and SecurityPolicy.Basic128" time="0.0010" classname="should not accept to add endpoint with MessageSecurityMode.None and SecurityPolicy.Basic128">
    </testcase>
    <testcase name="OPCUAServerEndpoint#addEndpointDescription should not accept  to add endpoint  MessageSecurityMode.Sign and SecurityPolicy.None" time="0.0010" classname="should not accept  to add endpoint  MessageSecurityMode.Sign and SecurityPolicy.None">
    </testcase>
  </testsuite>
  <testsuite name="OPCUAServerEndpoint#addStandardEndpointDescriptions" timestamp="2021-02-09T07:13:14" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="OPCUAServerEndpoint#addStandardEndpointDescriptions should find a endpoint matching MessageSecurityMode.None" time="0.0010" classname="should find a endpoint matching MessageSecurityMode.None">
    </testcase>
    <testcase name="OPCUAServerEndpoint#addStandardEndpointDescriptions should find a endpoint matching SIGNANDENCRYPT / Basic256" time="0.0000" classname="should find a endpoint matching SIGNANDENCRYPT / Basic256">
    </testcase>
    <testcase name="OPCUAServerEndpoint#addStandardEndpointDescriptions should find a endpoint matching SIGN / Basic256" time="0.0000" classname="should find a endpoint matching SIGN / Basic256">
    </testcase>
  </testsuite>
  <testsuite name="OPCUAServerEndpoint#addStandardEndpointDescriptions extra secure" timestamp="2021-02-09T07:13:14" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="OPCUAServerEndpoint#addStandardEndpointDescriptions extra secure should not find a endpoint matching MessageSecurityMode.None" time="0.0000" classname="should not find a endpoint matching MessageSecurityMode.None">
    </testcase>
    <testcase name="OPCUAServerEndpoint#addStandardEndpointDescriptions extra secure should not find a endpoint matching Sign / Basic256" time="0.0000" classname="should not find a endpoint matching Sign / Basic256">
    </testcase>
    <testcase name="OPCUAServerEndpoint#addStandardEndpointDescriptions extra secure should find a endpoint matching SignAndEncrypt / Basic256" time="0.0000" classname="should find a endpoint matching SignAndEncrypt / Basic256">
    </testcase>
  </testsuite>
  <testsuite name="OPCUAServerEndpoint#getEndpointDescription" timestamp="2021-02-09T07:13:14" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="OPCUAServerEndpoint#getEndpointDescription should not find a endpoint matching MessageSecurityMode.SIGN and SecurityPolicy.Basic128" time="0.0010" classname="should not find a endpoint matching MessageSecurityMode.SIGN and SecurityPolicy.Basic128">
    </testcase>
    <testcase name="OPCUAServerEndpoint#getEndpointDescription should not find a endpoint matching MessageSecurityMode.Sign and SecurityPolicy.None" time="0.0000" classname="should not find a endpoint matching MessageSecurityMode.Sign and SecurityPolicy.None">
    </testcase>
    <testcase name="OPCUAServerEndpoint#getEndpointDescription should not find a endpoint matching MessageSecurityMode.SignAndEncrypt and SecurityPolicy.None" time="0.0000" classname="should not find a endpoint matching MessageSecurityMode.SignAndEncrypt and SecurityPolicy.None">
    </testcase>
  </testsuite>
  <testsuite name="testing ServerEngine" timestamp="2021-02-09T07:13:14" tests="34" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1440" failures="0">
    <testcase name="testing ServerEngine should have a rootFolder " time="0.0000" classname="should have a rootFolder ">
    </testcase>
    <testcase name="testing ServerEngine should find the rootFolder by browseName" time="0.0000" classname="should find the rootFolder by browseName">
    </testcase>
    <testcase name="testing ServerEngine should find the rootFolder by nodeId" time="0.0000" classname="should find the rootFolder by nodeId">
    </testcase>
    <testcase name="testing ServerEngine should have an &apos;Objects&apos; folder" time="0.0010" classname="should have an &apos;Objects&apos; folder">
    </testcase>
    <testcase name="testing ServerEngine should have a &apos;Server&apos; object in the Objects Folder" time="0.0000" classname="should have a &apos;Server&apos; object in the Objects Folder">
    </testcase>
    <testcase name="testing ServerEngine should have a &apos;Server.NamespaceArray&apos; Variable " time="0.0000" classname="should have a &apos;Server.NamespaceArray&apos; Variable ">
    </testcase>
    <testcase name="testing ServerEngine should have a &apos;Server.Server_ServerArray&apos; Variable" time="0.0000" classname="should have a &apos;Server.Server_ServerArray&apos; Variable">
    </testcase>
    <testcase name="testing ServerEngine should be possible to create a new folder under the &apos;Root&apos; folder" time="0.0010" classname="should be possible to create a new folder under the &apos;Root&apos; folder">
    </testcase>
    <testcase name="testing ServerEngine should be possible to find a newly created folder by nodeId" time="0.0000" classname="should be possible to find a newly created folder by nodeId">
    </testcase>
    <testcase name="testing ServerEngine should be possible to find a newly created folder by &apos;browse name&apos;" time="0.0000" classname="should be possible to find a newly created folder by &apos;browse name&apos;">
    </testcase>
    <testcase name="testing ServerEngine should be possible to create a variable in a folder" time="0.0010" classname="should be possible to create a variable in a folder">
    </testcase>
    <testcase name="testing ServerEngine should be possible to create a variable in a folder with a predefined nodeID" time="0.0020" classname="should be possible to create a variable in a folder with a predefined nodeID">
    </testcase>
    <testcase name="testing ServerEngine should be possible to create a variable in a folder that returns a timestamped value" time="0.0040" classname="should be possible to create a variable in a folder that returns a timestamped value">
    </testcase>
    <testcase name="testing ServerEngine should be possible to create a variable that returns historical data" time="0.0030" classname="should be possible to create a variable that returns historical data">
    </testcase>
    <testcase name="testing ServerEngine should be possible to create a object in a folder" time="0.0000" classname="should be possible to create a object in a folder">
    </testcase>
    <testcase name="testing ServerEngine should browse the &apos;Objects&apos; folder for back references" time="0.0000" classname="should browse the &apos;Objects&apos; folder for back references">
    </testcase>
    <testcase name="testing ServerEngine should browse root folder with referenceTypeId" time="0.0010" classname="should browse root folder with referenceTypeId">
    </testcase>
    <testcase name="testing ServerEngine should browse root and find all hierarchical children of the root node (includeSubtypes: true)" time="0.0010" classname="should browse root and find all hierarchical children of the root node (includeSubtypes: true)">
    </testcase>
    <testcase name="testing ServerEngine should browse root folder with abstract referenceTypeId and includeSubtypes set to true" time="0.0010" classname="should browse root folder with abstract referenceTypeId and includeSubtypes set to true">
    </testcase>
    <testcase name="testing ServerEngine should browse a &apos;Server&apos; object in  the &apos;Objects&apos; folder" time="0.0010" classname="should browse a &apos;Server&apos; object in  the &apos;Objects&apos; folder">
    </testcase>
    <testcase name="testing ServerEngine should handle a BrowseRequest and set StatusCode if node doesn&apos;t exist" time="0.0000" classname="should handle a BrowseRequest and set StatusCode if node doesn&apos;t exist">
    </testcase>
    <testcase name="testing ServerEngine should handle a BrowseRequest and set StatusCode if browseDescription is not provided" time="0.0000" classname="should handle a BrowseRequest and set StatusCode if browseDescription is not provided">
    </testcase>
    <testcase name="testing ServerEngine should handle a BrowseRequest with multiple nodes to browse" time="0.0010" classname="should handle a BrowseRequest with multiple nodes to browse">
    </testcase>
    <testcase name="testing ServerEngine should handle a BrowseRequest of a session with a filtered result" time="0.0020" classname="should handle a BrowseRequest of a session with a filtered result">
    </testcase>
    <testcase name="testing ServerEngine should provide results that conforms to browseDescription.resultMask" time="0.0080" classname="should provide results that conforms to browseDescription.resultMask">
    </testcase>
    <testcase name="testing ServerEngine browseWithAutomaticExpansion" time="0.1110" classname="browseWithAutomaticExpansion">
    </testcase>
    <testcase name="testing ServerEngine should return BadNodeIdUnknown  - readSingleNode - with unknown object" time="0.0010" classname="should return BadNodeIdUnknown  - readSingleNode - with unknown object">
    </testcase>
    <testcase name="testing ServerEngine should read the display name of RootFolder" time="0.0010" classname="should read the display name of RootFolder">
    </testcase>
    <testcase name="testing ServerEngine should read Server_NamespaceArray " time="0.0010" classname="should read Server_NamespaceArray ">
    </testcase>
    <testcase name="testing ServerEngine should handle indexRange with individual value" time="0.0010" classname="should handle indexRange with individual value">
    </testcase>
    <testcase name="testing ServerEngine should handle indexRange with a simple range" time="0.0010" classname="should handle indexRange with a simple range">
    </testcase>
    <testcase name="testing ServerEngine should receive BadIndexRangeNoData when indexRange try to access outside boundary" time="0.0000" classname="should receive BadIndexRangeNoData when indexRange try to access outside boundary">
    </testcase>
    <testcase name="testing ServerEngine should read Server_NamespaceArray  DataType" time="0.0010" classname="should read Server_NamespaceArray  DataType">
    </testcase>
    <testcase name="testing ServerEngine should read Server_NamespaceArray ValueRank" time="0.0000" classname="should read Server_NamespaceArray ValueRank">
    </testcase>
  </testsuite>
  <testsuite name="readSingleNode on Object" timestamp="2021-02-09T07:13:14" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing ServerEngine readSingleNode on Object should handle a readSingleNode - BrowseName" time="0.0000" classname="should handle a readSingleNode - BrowseName">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Object should handle a readSingleNode - NodeClass" time="0.0000" classname="should handle a readSingleNode - NodeClass">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Object should handle a readSingleNode - NodeId" time="0.0000" classname="should handle a readSingleNode - NodeId">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Object should handle a readSingleNode - DisplayName" time="0.0000" classname="should handle a readSingleNode - DisplayName">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Object should handle a readSingleNode - Description" time="0.0000" classname="should handle a readSingleNode - Description">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Object should handle a readSingleNode - WriteMask" time="0.0000" classname="should handle a readSingleNode - WriteMask">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Object should handle a readSingleNode - UserWriteMask" time="0.0010" classname="should handle a readSingleNode - UserWriteMask">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Object should handle a readSingleNode - EventNotifier" time="0.0000" classname="should handle a readSingleNode - EventNotifier">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Object should return BadAttributeIdInvalid  - readSingleNode - for bad attribute    " time="0.0000" classname="should return BadAttributeIdInvalid  - readSingleNode - for bad attribute    ">
    </testcase>
  </testsuite>
  <testsuite name="readSingleNode on ReferenceType" timestamp="2021-02-09T07:13:14" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="testing ServerEngine readSingleNode on ReferenceType should handle a readSingleNode - IsAbstract" time="0.0000" classname="should handle a readSingleNode - IsAbstract">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on ReferenceType should handle a readSingleNode - Symmetric" time="0.0000" classname="should handle a readSingleNode - Symmetric">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on ReferenceType should handle a readSingleNode - InverseName" time="0.0000" classname="should handle a readSingleNode - InverseName">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on ReferenceType should handle a readSingleNode - BrowseName" time="0.0000" classname="should handle a readSingleNode - BrowseName">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on ReferenceType should return BadAttributeIdInvalid on EventNotifier" time="0.0000" classname="should return BadAttributeIdInvalid on EventNotifier">
    </testcase>
  </testsuite>
  <testsuite name="readSingleNode on VariableType" timestamp="2021-02-09T07:13:14" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing ServerEngine readSingleNode on VariableType should handle a readSingleNode - BrowseName" time="0.0010" classname="should handle a readSingleNode - BrowseName">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on VariableType should handle a readSingleNode - IsAbstract" time="0.0000" classname="should handle a readSingleNode - IsAbstract">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on VariableType should handle a readSingleNode - Value" time="0.0000" classname="should handle a readSingleNode - Value">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on VariableType should handle a readSingleNode - DataType" time="0.0000" classname="should handle a readSingleNode - DataType">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on VariableType should handle a readSingleNode - ValueRank" time="0.0000" classname="should handle a readSingleNode - ValueRank">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on VariableType should handle a readSingleNode - ArrayDimensions" time="0.0000" classname="should handle a readSingleNode - ArrayDimensions">
    </testcase>
  </testsuite>
  <testsuite name="readSingleNode on Variable (ProductUri)" timestamp="2021-02-09T07:13:14" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing ServerEngine readSingleNode on Variable (ProductUri) should handle a readSingleNode - BrowseName" time="0.0000" classname="should handle a readSingleNode - BrowseName">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Variable (ProductUri) should handle a readSingleNode - ArrayDimensions" time="0.0000" classname="should handle a readSingleNode - ArrayDimensions">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Variable (ProductUri) should handle a readSingleNode - AccessLevel" time="0.0000" classname="should handle a readSingleNode - AccessLevel">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Variable (ProductUri) should handle a readSingleNode - UserAccessLevel" time="0.0000" classname="should handle a readSingleNode - UserAccessLevel">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Variable (ProductUri) should handle a readSingleNode - MinimumSamplingInterval" time="0.0000" classname="should handle a readSingleNode - MinimumSamplingInterval">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on Variable (ProductUri) should handle a readSingleNode - Historizing" time="0.0010" classname="should handle a readSingleNode - Historizing">
    </testcase>
  </testsuite>
  <testsuite name="readSingleNode on DataType" timestamp="2021-02-09T07:13:14" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="testing ServerEngine readSingleNode on DataType should have ServerStatusDataType dataType exposed" time="0.0000" classname="should have ServerStatusDataType dataType exposed">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on DataType should handle a readSingleNode - ServerStatusDataType - BrowseName" time="0.0000" classname="should handle a readSingleNode - ServerStatusDataType - BrowseName">
    </testcase>
    <testcase name="testing ServerEngine readSingleNode on DataType should handle a readSingleNode - ServerStatusDataType - Description" time="0.0000" classname="should handle a readSingleNode - ServerStatusDataType - Description">
    </testcase>
  </testsuite>
  <testsuite name="testing read with indexRange for attributes that can&apos;t be used with IndexRange " timestamp="2021-02-09T07:13:14" tests="11" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = AccessLevel " time="0.0000" classname="shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = AccessLevel ">
    </testcase>
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = BrowseName " time="0.0000" classname="shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = BrowseName ">
    </testcase>
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = DataType " time="0.0010" classname="shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = DataType ">
    </testcase>
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = DisplayName " time="0.0000" classname="shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = DisplayName ">
    </testcase>
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = Historizing " time="0.0000" classname="shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = Historizing ">
    </testcase>
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = NodeClass " time="0.0000" classname="shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = NodeClass ">
    </testcase>
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = NodeId " time="0.0000" classname="shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = NodeId ">
    </testcase>
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = UserAccessLevel " time="0.0000" classname="shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = UserAccessLevel ">
    </testcase>
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = ValueRank " time="0.0000" classname="shall return BadIndexRangeNoData when performing a read with a  indexRange and attributeId = ValueRank ">
    </testcase>
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  should return BadDataEncodingInvalid" time="0.0000" classname="should return BadDataEncodingInvalid">
    </testcase>
    <testcase name="testing ServerEngine testing read with indexRange for attributes that can&apos;t be used with IndexRange  should return Good (dataEncoding = DefaultBinary) " time="0.0010" classname="should return Good (dataEncoding = DefaultBinary) ">
    </testcase>
  </testsuite>
  <testsuite name="testing read operation with timestamps" timestamp="2021-02-09T07:13:14" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="testing ServerEngine testing read operation with timestamps should read and set the required timestamps : TimestampsToReturn.Neither" time="0.0000" classname="should read and set the required timestamps : TimestampsToReturn.Neither">
    </testcase>
    <testcase name="testing ServerEngine testing read operation with timestamps should read and set the required timestamps : TimestampsToReturn.Server" time="0.0010" classname="should read and set the required timestamps : TimestampsToReturn.Server">
    </testcase>
    <testcase name="testing ServerEngine testing read operation with timestamps should read and set the required timestamps : TimestampsToReturn.Source" time="0.0010" classname="should read and set the required timestamps : TimestampsToReturn.Source">
    </testcase>
    <testcase name="testing ServerEngine testing read operation with timestamps should read and set the required timestamps : TimestampsToReturn.Both" time="0.0000" classname="should read and set the required timestamps : TimestampsToReturn.Both">
    </testcase>
  </testsuite>
  <testsuite name="testing ServerEngine browsePath" timestamp="2021-02-09T07:13:14" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="testing ServerEngine testing ServerEngine browsePath translating a browse path to a nodeId with a invalid starting node shall return BadNodeIdUnknown" time="0.0000" classname="translating a browse path to a nodeId with a invalid starting node shall return BadNodeIdUnknown">
    </testcase>
    <testcase name="testing ServerEngine testing ServerEngine browsePath translating a browse path to a nodeId with an empty relativePath  shall return BadNothingToDo" time="0.0000" classname="translating a browse path to a nodeId with an empty relativePath  shall return BadNothingToDo">
    </testcase>
    <testcase name="testing ServerEngine testing ServerEngine browsePath The Server shall return BadBrowseNameInvalid if the targetName is missing. " time="0.0000" classname="The Server shall return BadBrowseNameInvalid if the targetName is missing. ">
    </testcase>
    <testcase name="testing ServerEngine testing ServerEngine browsePath The Server shall return BadNoMatch if the targetName doesn&apos;t exist. " time="0.0000" classname="The Server shall return BadNoMatch if the targetName doesn&apos;t exist. ">
    </testcase>
    <testcase name="testing ServerEngine testing ServerEngine browsePath The Server shall return Good if the targetName does exist. " time="0.0020" classname="The Server shall return Good if the targetName does exist. ">
    </testcase>
  </testsuite>
  <testsuite name="Accessing ServerStatus nodes" timestamp="2021-02-09T07:13:14" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing ServerEngine Accessing ServerStatus nodes should read  Server_ServerStatus_CurrentTime" time="0.0000" classname="should read  Server_ServerStatus_CurrentTime">
    </testcase>
    <testcase name="testing ServerEngine Accessing ServerStatus nodes should read  Server_ServerStatus_StartTime" time="0.0000" classname="should read  Server_ServerStatus_StartTime">
    </testcase>
    <testcase name="testing ServerEngine Accessing ServerStatus nodes should read  Server_ServerStatus_BuildInfo_BuildNumber" time="0.0000" classname="should read  Server_ServerStatus_BuildInfo_BuildNumber">
    </testcase>
    <testcase name="testing ServerEngine Accessing ServerStatus nodes should read  Server_ServerStatus_BuildInfo_BuildNumber (2nd)" time="0.0000" classname="should read  Server_ServerStatus_BuildInfo_BuildNumber (2nd)">
    </testcase>
    <testcase name="testing ServerEngine Accessing ServerStatus nodes should read  Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount" time="0.0000" classname="should read  Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount">
    </testcase>
    <testcase name="testing ServerEngine Accessing ServerStatus nodes should read all attributes of Server_ServerStatus_CurrentTime" time="0.0010" classname="should read all attributes of Server_ServerStatus_CurrentTime">
    </testcase>
  </testsuite>
  <testsuite name="ServerEngine read maxAge" timestamp="2021-02-09T07:13:14" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="1.7630" failures="0">
    <testcase name="testing ServerEngine ServerEngine read maxAge MAXA-1 should not cause dataValue to be refreshed if maxAge is greater than available dataValue" time="0.9920" classname="MAXA-1 should not cause dataValue to be refreshed if maxAge is greater than available dataValue">
    </testcase>
    <testcase name="testing ServerEngine ServerEngine read maxAge MAXA-2 should set serverTimestamp to current time on none updated variable " time="0.7710" classname="MAXA-2 should set serverTimestamp to current time on none updated variable ">
    </testcase>
  </testsuite>
  <testsuite name="Accessing ServerStatus as a single composite object" timestamp="2021-02-09T07:13:16" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing ServerEngine Accessing ServerStatus as a single composite object should be possible to access the ServerStatus Object as a variable" time="0.0010" classname="should be possible to access the ServerStatus Object as a variable">
    </testcase>
  </testsuite>
  <testsuite name="Accessing BuildInfo as a single composite object" timestamp="2021-02-09T07:13:16" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="testing ServerEngine Accessing BuildInfo as a single composite object should be possible to read the Server_ServerStatus_BuildInfo Object as a complex structure" time="0.0020" classname="should be possible to read the Server_ServerStatus_BuildInfo Object as a complex structure">
    </testcase>
  </testsuite>
  <testsuite name="writing nodes " timestamp="2021-02-09T07:13:16" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0060" failures="0">
    <testcase name="testing ServerEngine writing nodes  should write a single node" time="0.0030" classname="should write a single node">
    </testcase>
    <testcase name="testing ServerEngine writing nodes  should return BadNotWritable when trying to write a Executable attribute" time="0.0000" classname="should return BadNotWritable when trying to write a Executable attribute">
    </testcase>
    <testcase name="testing ServerEngine writing nodes  should write many nodes" time="0.0010" classname="should write many nodes">
    </testcase>
    <testcase name="testing ServerEngine writing nodes   write a single node with a null variant shall return BadTypeMismatch" time="0.0020" classname=" write a single node with a null variant shall return BadTypeMismatch">
    </testcase>
  </testsuite>
  <testsuite name="testing the ability to handle variable that returns a StatusCode rather than a Variant" timestamp="2021-02-09T07:13:16" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="testing ServerEngine testing the ability to handle variable that returns a StatusCode rather than a Variant ZZ should have statusCode=BadResourceUnavailable when trying to read the FailingPLCValue variable" time="0.0000" classname="ZZ should have statusCode=BadResourceUnavailable when trying to read the FailingPLCValue variable">
    </testcase>
  </testsuite>
  <testsuite name="ServerEngine : forcing variable value refresh" timestamp="2021-02-09T07:13:16" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0640" failures="0">
    <testcase name="testing ServerEngine ServerEngine : forcing variable value refresh should refresh a single variable value asynchronously" time="0.0180" classname="should refresh a single variable value asynchronously">
    </testcase>
    <testcase name="testing ServerEngine ServerEngine : forcing variable value refresh should refresh multiple variable values asynchronously" time="0.0160" classname="should refresh multiple variable values asynchronously">
    </testcase>
    <testcase name="testing ServerEngine ServerEngine : forcing variable value refresh should  refresh nodes only once if they are duplicated " time="0.0150" classname="should  refresh nodes only once if they are duplicated ">
    </testcase>
    <testcase name="testing ServerEngine ServerEngine : forcing variable value refresh should ignore nodes with attributeId!=AttributeIds.Value " time="0.0000" classname="should ignore nodes with attributeId!=AttributeIds.Value ">
    </testcase>
    <testcase name="testing ServerEngine ServerEngine : forcing variable value refresh should perform readValueAsync on Variable" time="0.0150" classname="should perform readValueAsync on Variable">
    </testcase>
  </testsuite>
  <testsuite name="ServerEngine Diagnostic" timestamp="2021-02-09T07:13:16" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0010" failures="0">
    <testcase name="testing ServerEngine ServerEngine Diagnostic should have ServerDiagnosticObject" time="0.0010" classname="should have ServerDiagnosticObject">
    </testcase>
  </testsuite>
  <testsuite name="ServerEngine advanced" timestamp="2021-02-09T07:13:16" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0030" failures="0">
    <testcase name="ServerEngine advanced ServerEngine#registerShutdownTask should execute shutdown tasks on shutdown" time="0.0000" classname="ServerEngine#registerShutdownTask should execute shutdown tasks on shutdown">
    </testcase>
    <testcase name="ServerEngine advanced ServerEngine#shutdown engine should take care of disposing session on shutdown" time="0.0030" classname="ServerEngine#shutdown engine should take care of disposing session on shutdown">
    </testcase>
  </testsuite>
  <testsuite name="ServerEngine ServerStatus &amp; ServerCapabilities" timestamp="2021-02-09T07:13:16" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="ServerEngine ServerStatus &amp; ServerCapabilities ServerEngine#ServerCapabilities should expose ServerCapabilities " time="0.0010" classname="ServerEngine#ServerCapabilities should expose ServerCapabilities ">
    </testcase>
    <testcase name="ServerEngine ServerStatus &amp; ServerCapabilities ServerEngine#ServerStatus should expose currentTime" time="0.0010" classname="ServerEngine#ServerStatus should expose currentTime">
    </testcase>
  </testsuite>
  <testsuite name="ServerEngine - addMethod" timestamp="2021-02-09T07:13:17" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0040" failures="0">
    <testcase name="ServerEngine - addMethod should be able to attach a method on a object of the address space and call it" time="0.0040" classname="should be able to attach a method on a object of the address space and call it">
    </testcase>
  </testsuite>
  <testsuite name="ServerEngine Subscriptions service" timestamp="2021-02-09T07:13:17" tests="10" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.2060" failures="0">
    <testcase name="ServerEngine Subscriptions service should return an error when trying to delete an non-existing subscription" time="0.0020" classname="should return an error when trying to delete an non-existing subscription">
    </testcase>
    <testcase name="ServerEngine Subscriptions service should check the subscription live cycle" time="0.0110" classname="should check the subscription live cycle">
    </testcase>
    <testcase name="ServerEngine Subscriptions service XCX session should emit a new_subscription and subscription_terminated event" time="0.0170" classname="XCX session should emit a new_subscription and subscription_terminated event">
    </testcase>
    <testcase name="ServerEngine Subscriptions service should maintain the correct number of cumulatedSubscriptionCount at the engine level" time="0.0620" classname="should maintain the correct number of cumulatedSubscriptionCount at the engine level">
    </testcase>
    <testcase name="ServerEngine Subscriptions service DDD delete a subscription with 2 outstanding PublishRequest" time="0.0150" classname="DDD delete a subscription with 2 outstanding PublishRequest">
    </testcase>
    <testcase name="ServerEngine Subscriptions service ZDZ create and terminate 2 subscriptions , with 4 publish requests" time="0.0280" classname="ZDZ create and terminate 2 subscriptions , with 4 publish requests">
    </testcase>
    <testcase name="ServerEngine Subscriptions service ZDZ LifeTimeCount, the publish engine shall send a StatusChangeNotification to inform that a subscription has been closed because of lifetime timeout - with 2 subscriptions" time="0.0210" classname="ZDZ LifeTimeCount, the publish engine shall send a StatusChangeNotification to inform that a subscription has been closed because of lifetime timeout - with 2 subscriptions">
    </testcase>
    <testcase name="ServerEngine Subscriptions service AZQ should receive StatusChangeNotification from first subscription even if publishRequest arrives late" time="0.0090" classname="AZQ should receive StatusChangeNotification from first subscription even if publishRequest arrives late">
    </testcase>
    <testcase name="ServerEngine Subscriptions service AZW1 should receive StatusChangeNotification from first subscription even if publishRequest arrives late" time="0.0270" classname="AZW1 should receive StatusChangeNotification from first subscription even if publishRequest arrives late">
    </testcase>
    <testcase name="ServerEngine Subscriptions service AZW2 should terminate a orphan subscription containing monitored items" time="0.0140" classname="AZW2 should terminate a orphan subscription containing monitored items">
    </testcase>
  </testsuite>
  <testsuite name="Testing the server  engine - View related " timestamp="2021-02-09T07:13:17" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
    <testcase name="Testing the server  engine - View related  should create a view in the address space" time="0.0000" classname="should create a view in the address space">
    </testcase>
  </testsuite>
  <testsuite name="Testing the server publish engine" timestamp="2021-02-09T07:13:18" tests="17" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0550" failures="0">
    <testcase name="Testing the server publish engine a server should send keep alive notifications" time="0.0020" classname="a server should send keep alive notifications">
    </testcase>
    <testcase name="Testing the server publish engine a server should feed the availableSequenceNumbers in PublishResponse with sequence numbers that have not been acknowledged by the client" time="0.0020" classname="a server should feed the availableSequenceNumbers in PublishResponse with sequence numbers that have not been acknowledged by the client">
    </testcase>
    <testcase name="Testing the server publish engine a server should return BadNoSubscription as a response for a publish Request if there is no subscription available for this session. " time="0.0000" classname="a server should return BadNoSubscription as a response for a publish Request if there is no subscription available for this session. ">
    </testcase>
    <testcase name="Testing the server publish engine should be possible to find a subscription by id on a publish_server" time="0.0000" classname="should be possible to find a subscription by id on a publish_server">
    </testcase>
    <testcase name="Testing the server publish engine should be possible to remove a subscription from a publish_server" time="0.0000" classname="should be possible to remove a subscription from a publish_server">
    </testcase>
    <testcase name="Testing the server publish engine when the client send too many publish requests that the server can queue, the server returns a Service result of BadTooManyPublishRequests" time="0.0030" classname="when the client send too many publish requests that the server can queue, the server returns a Service result of BadTooManyPublishRequests">
    </testcase>
    <testcase name="Testing the server publish engine the server shall process the client acknowledge sequence number" time="0.0030" classname="the server shall process the client acknowledge sequence number">
    </testcase>
    <testcase name="Testing the server publish engine the server shall return BadSequenceNumberInvalid if the client attempts to acknowledge a notification that is not in the queue" time="0.0010" classname="the server shall return BadSequenceNumberInvalid if the client attempts to acknowledge a notification that is not in the queue">
    </testcase>
    <testcase name="Testing the server publish engine a subscription shall send a keep-alive message at the end of the first publishing interval, if there are no Notifications ready." time="0.0020" classname="a subscription shall send a keep-alive message at the end of the first publishing interval, if there are no Notifications ready.">
    </testcase>
    <testcase name="Testing the server publish engine a Normal subscription that receives a notification shall wait for the next publish interval to send a PublishResponse " time="0.0020" classname="a Normal subscription that receives a notification shall wait for the next publish interval to send a PublishResponse ">
    </testcase>
    <testcase name="Testing the server publish engine the subscription state shall be set to LATE, if it cannot process a notification after Publish Interval has been raised, due to a lack of PublishRequest" time="0.0010" classname="the subscription state shall be set to LATE, if it cannot process a notification after Publish Interval has been raised, due to a lack of PublishRequest">
    </testcase>
    <testcase name="Testing the server publish engine a subscription should provide its time to expiration so that publish engine could sort late subscriptions by order of priority" time="0.0010" classname="a subscription should provide its time to expiration so that publish engine could sort late subscriptions by order of priority">
    </testcase>
    <testcase name="Testing the server publish engine a publish engine should be able to find out which are the most urgent late subscriptions to serve " time="0.0100" classname="a publish engine should be able to find out which are the most urgent late subscriptions to serve ">
    </testcase>
    <testcase name="Testing the server publish engine a LATE subscription that receives a notification shall send a PublishResponse immediately, without waiting for next publish interval" time="0.0010" classname="a LATE subscription that receives a notification shall send a PublishResponse immediately, without waiting for next publish interval">
    </testcase>
    <testcase name="Testing the server publish engine LifeTimeCount, the server shall terminated the subscription if it has not received any PublishRequest after LifeTimeCount cycles" time="0.0010" classname="LifeTimeCount, the server shall terminated the subscription if it has not received any PublishRequest after LifeTimeCount cycles">
    </testcase>
    <testcase name="Testing the server publish engine LifeTimeCount, the publish engine shall send a StatusChangeNotification to inform that a subscription has been closed because of lifetime timeout " time="0.0010" classname="LifeTimeCount, the publish engine shall send a StatusChangeNotification to inform that a subscription has been closed because of lifetime timeout ">
    </testcase>
    <testcase name="Testing the server publish engine PublishRequest timeout, the publish engine shall return a publish response with serviceResult = BadTimeout when Publish requests have timed out" time="0.0250" classname="PublishRequest timeout, the publish engine shall return a publish response with serviceResult = BadTimeout when Publish requests have timed out">
    </testcase>
  </testsuite>
  <testsuite name="ServerEngine Subscriptions Transfer" timestamp="2021-02-09T07:13:18" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.1380" failures="0">
    <testcase name="ServerEngine Subscriptions Transfer ST01 - should send keep alive when starving and no notification exists" time="0.0140" classname="ST01 - should send keep alive when starving and no notification exists">
    </testcase>
    <testcase name="ServerEngine Subscriptions Transfer ST02 - should NOT send keep alive when starving and some notification exists" time="0.0140" classname="ST02 - should NOT send keep alive when starving and some notification exists">
    </testcase>
    <testcase name="ServerEngine Subscriptions Transfer ST03 - should NOT send keep alive when starving and some StatusChangeNotification exists" time="0.0120" classname="ST03 - should NOT send keep alive when starving and some StatusChangeNotification exists">
    </testcase>
    <testcase name="ServerEngine Subscriptions Transfer ST04 - should transfer a subscription - with no monitored items" time="0.0170" classname="ST04 - should transfer a subscription - with no monitored items">
    </testcase>
    <testcase name="ServerEngine Subscriptions Transfer ST05 - should transfer a subscription 2: with monitored items" time="0.0100" classname="ST05 - should transfer a subscription 2: with monitored items">
    </testcase>
    <testcase name="ServerEngine Subscriptions Transfer ST06 - CTT 007 republish5105002 - republish after the subscriptions had been transferred to a different session" time="0.0120" classname="ST06 - CTT 007 republish5105002 - republish after the subscriptions had been transferred to a different session">
    </testcase>
    <testcase name="ServerEngine Subscriptions Transfer ST07 - CTT 008 Test for transfer subscription" time="0.0100" classname="ST07 - CTT 008 Test for transfer subscription">
    </testcase>
    <testcase name="ServerEngine Subscriptions Transfer ST08 - Err-004.js (transferSubscription5106Err009)  delete multiple sessions where some have been transferred to other sessions" time="0.0360" classname="ST08 - Err-004.js (transferSubscription5106Err009)  delete multiple sessions where some have been transferred to other sessions">
    </testcase>
    <testcase name="ServerEngine Subscriptions Transfer ST09 - 0115.js (subscriptionTransfer015) Transfer to session 2 then back to session 1" time="0.0130" classname="ST09 - 0115.js (subscriptionTransfer015) Transfer to session 2 then back to session 1">
    </testcase>
  </testsuite>
  <testsuite name="preventing server to start with invalid certificates/private key combination" timestamp="2021-02-09T07:13:18" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-server\test\test_server_with_certificates.ts" time="2.8840" failures="0">
    <testcase name="preventing server to start with invalid certificates/private key combination KP1: should raise a exception when attempting to start a server with key pair mistmatch" time="0.1650" classname="KP1: should raise a exception when attempting to start a server with key pair mistmatch">
    </testcase>
    <testcase name="preventing server to start with invalid certificates/private key combination KP2: should raise a warning when attempting to start a server with a key length &lt;=1024" time="0.9680" classname="KP2: should raise a warning when attempting to start a server with a key length &lt;=1024">
    </testcase>
    <testcase name="preventing server to start with invalid certificates/private key combination KP3: should raise a warning when attempting to start a server with a out of date certificate" time="0.8730" classname="KP3: should raise a warning when attempting to start a server with a out of date certificate">
    </testcase>
    <testcase name="preventing server to start with invalid certificates/private key combination KP4: should raise a warning when attempting to start a server with a certificate that is not yet active" time="0.8780" classname="KP4: should raise a warning when attempting to start a server with a certificate that is not yet active">
    </testcase>
  </testsuite>
  <testsuite name="OPCUAServerEndpoint#addEndpointDescription multiple hostname" timestamp="2021-02-09T07:13:21" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.6970" failures="0">
    <testcase name="OPCUAServerEndpoint#addEndpointDescription multiple hostname should be possible to create endpoints on multiple host names" time="0.6970" classname="should be possible to create endpoints on multiple host names">
    </testcase>
  </testsuite>
  <testsuite name="OPCUAServerEndpoint#addEndpointDescription default hostname" timestamp="2021-02-09T07:13:22" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.7560" failures="0">
    <testcase name="OPCUAServerEndpoint#addEndpointDescription default hostname should default to using the machine hostname as the hostname" time="0.7560" classname="should default to using the machine hostname as the hostname">
    </testcase>
  </testsuite>
  <testsuite name="OPCUAServerEndpoint#addEndpointDescription custom hostname" timestamp="2021-02-09T07:13:23" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.9320" failures="0">
    <testcase name="OPCUAServerEndpoint#addEndpointDescription custom hostname should be possible to create endpoints on multiple host names" time="0.9320" classname="should be possible to create endpoints on multiple host names">
    </testcase>
  </testsuite>
  <testsuite name="Subscriptions" timestamp="2021-02-09T07:13:23" tests="14" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0230" failures="0">
    <testcase name="Subscriptions T1 - a subscription will make sure that lifeTimeCount is at least 3 times maxKeepAliveCount" time="0.0010" classname="T1 - a subscription will make sure that lifeTimeCount is at least 3 times maxKeepAliveCount">
    </testcase>
    <testcase name="Subscriptions T2 - when a Subscription is created, the first Message is sent at the end of the first publishing cycle to inform the Client that the Subscription is operational. - Case 1 : PublishRequest in Queue &amp;  no notification available" time="0.0020" classname="T2 - when a Subscription is created, the first Message is sent at the end of the first publishing cycle to inform the Client that the Subscription is operational. - Case 1 : PublishRequest in Queue &amp;  no notification available">
    </testcase>
    <testcase name="Subscriptions T3 - when a Subscription is created, the first Message is sent at the end of the first publishing cycle to inform the Client that the Subscription is operational. - Case 2 : NoPublishRequest in Queue &amp;  no notification available" time="0.0020" classname="T3 - when a Subscription is created, the first Message is sent at the end of the first publishing cycle to inform the Client that the Subscription is operational. - Case 2 : NoPublishRequest in Queue &amp;  no notification available">
    </testcase>
    <testcase name="Subscriptions T4 - a subscription that have a new notification ready at the end of the  publishingInterval shall send notifications and no keepalive" time="0.0030" classname="T4 - a subscription that have a new notification ready at the end of the  publishingInterval shall send notifications and no keepalive">
    </testcase>
    <testcase name="Subscriptions T5 - a subscription that have only some notification ready before max_keepalive_count expired shall send notifications and no keepalive" time="0.0020" classname="T5 - a subscription that have only some notification ready before max_keepalive_count expired shall send notifications and no keepalive">
    </testcase>
    <testcase name="Subscriptions T7 - a subscription that hasn&apos;t been pinged by client within the lifetime interval shall terminate" time="0.0010" classname="T7 - a subscription that hasn&apos;t been pinged by client within the lifetime interval shall terminate">
    </testcase>
    <testcase name="Subscriptions T8 - a subscription that has been pinged by client before the lifetime expiration shall not terminate" time="0.0010" classname="T8 - a subscription that has been pinged by client before the lifetime expiration shall not terminate">
    </testcase>
    <testcase name="Subscriptions T9 - a subscription that has no notification within maxKeepAliveCount shall send a keepalive signal " time="0.0010" classname="T9 - a subscription that has no notification within maxKeepAliveCount shall send a keepalive signal ">
    </testcase>
    <testcase name="Subscriptions T10 - a subscription shall maintain a retransmission queue of pending NotificationMessages." time="0.0010" classname="T10 - a subscription shall maintain a retransmission queue of pending NotificationMessages.">
    </testcase>
    <testcase name="Subscriptions T11 - a subscription shall maintain a retransmission queue of sent NotificationMessages." time="0.0000" classname="T11 - a subscription shall maintain a retransmission queue of sent NotificationMessages.">
    </testcase>
    <testcase name="Subscriptions T13 - a subscription that have no monitored items shall not terminate if client has sent enough PublishRequest" time="0.0050" classname="T13 - a subscription that have no monitored items shall not terminate if client has sent enough PublishRequest">
    </testcase>
    <testcase name="Subscriptions T14 - a subscription send a first message at the end of the first publishing cycle without waiting for the maximum  count to be reached" time="0.0030" classname="T14 - a subscription send a first message at the end of the first publishing cycle without waiting for the maximum  count to be reached">
    </testcase>
    <testcase name="Subscriptions T15 - the first Notification Message sent on a Subscription has a sequence number of 1." time="0.0010" classname="T15 - the first Notification Message sent on a Subscription has a sequence number of 1.">
    </testcase>
    <testcase name="Subscriptions T16 - should return BadMonitorItemInvalid when trying to remove a monitored item that doesn&apos;t exist" time="0.0000" classname="T16 - should return BadMonitorItemInvalid when trying to remove a monitored item that doesn&apos;t exist">
    </testcase>
  </testsuite>
  <testsuite name="T6 - a subscription shall send its first notification as soon as the publish request is available" timestamp="2021-02-09T07:13:24" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0050" failures="0">
    <testcase name="Subscriptions T6 - a subscription shall send its first notification as soon as the publish request is available  - case 1 - publish Request arrives before first publishInterval is over " time="0.0000" classname=" - case 1 - publish Request arrives before first publishInterval is over ">
    </testcase>
    <testcase name="Subscriptions T6 - a subscription shall send its first notification as soon as the publish request is available  - case 2 - publish Request arrives late (after first publishInterval is over)" time="0.0000" classname=" - case 2 - publish Request arrives late (after first publishInterval is over)">
    </testcase>
    <testcase name="Subscriptions T6 - a subscription shall send its first notification as soon as the publish request is available  - case 3 - publish Request arrives late (after first publishInterval is over)" time="0.0020" classname=" - case 3 - publish Request arrives late (after first publishInterval is over)">
    </testcase>
    <testcase name="Subscriptions T6 - a subscription shall send its first notification as soon as the publish request is available  - case 4 - publish Request arrives late (after first publishInterval is over)" time="0.0010" classname=" - case 4 - publish Request arrives late (after first publishInterval is over)">
    </testcase>
    <testcase name="Subscriptions T6 - a subscription shall send its first notification as soon as the publish request is available  - case 4 (with monitoredItem - 3x value writes) - publish Request arrives late (after first publishInterval is over)" time="0.0020" classname=" - case 4 (with monitoredItem - 3x value writes) - publish Request arrives late (after first publishInterval is over)">
    </testcase>
  </testsuite>
  <testsuite name="T12 - NotificationMessages are retained in this queue until they are acknowledged or until they have been in the queue for a minimum of one keep-alive interval." timestamp="2021-02-09T07:13:24" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="Subscriptions T12 - NotificationMessages are retained in this queue until they are acknowledged or until they have been in the queue for a minimum of one keep-alive interval. T12-1 a NotificationMessage is retained in this queue until it is acknowledged" time="0.0010" classname="T12-1 a NotificationMessage is retained in this queue until it is acknowledged">
    </testcase>
    <testcase name="Subscriptions T12 - NotificationMessages are retained in this queue until they are acknowledged or until they have been in the queue for a minimum of one keep-alive interval. T12-2 A notificationMessage that hasn&apos;t been acknowledge should be accessiblef for republish" time="0.0010" classname="T12-2 A notificationMessage that hasn&apos;t been acknowledge should be accessiblef for republish">
    </testcase>
    <testcase name="Subscriptions T12 - NotificationMessages are retained in this queue until they are acknowledged or until they have been in the queue for a minimum of one keep-alive interval. T12-3 - 1.02 the server shall retain a maximum number of un-acknowledge NotificationMessage until they are acknoledged" time="0.0000" classname="T12-3 - 1.02 the server shall retain a maximum number of un-acknowledge NotificationMessage until they are acknoledged">
    </testcase>
  </testsuite>
  <testsuite name="Subscription#setPublishingMode" timestamp="2021-02-09T07:13:24" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0190" failures="0">
    <testcase name="Subscription#setPublishingMode W1 - a subscription created with publishingEnabled=true shall emit notification" time="0.0030" classname="W1 - a subscription created with publishingEnabled=true shall emit notification">
    </testcase>
    <testcase name="Subscription#setPublishingMode W2 - a subscription created with publishingEnabled=false shall not emit notification (but keepalive)" time="0.0010" classname="W2 - a subscription created with publishingEnabled=false shall not emit notification (but keepalive)">
    </testcase>
    <testcase name="Subscription#setPublishingMode W3 - a publishing subscription can be disabled and re-enabled" time="0.0110" classname="W3 - a publishing subscription can be disabled and re-enabled">
    </testcase>
    <testcase name="Subscription#setPublishingMode W4 - a disabled subscription shall continue to send keep-alive notifications" time="0.0040" classname="W4 - a disabled subscription shall continue to send keep-alive notifications">
    </testcase>
  </testsuite>
  <testsuite name="Subscription#adjustSamplingInterval" timestamp="2021-02-09T07:13:24" tests="10" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0180" failures="0">
    <testcase name="Subscription#adjustSamplingInterval should have a minimum sampling interval, with a strictly positive value ( which is the fastest possible rate)" time="0.0000" classname="should have a minimum sampling interval, with a strictly positive value ( which is the fastest possible rate)">
    </testcase>
    <testcase name="Subscription#adjustSamplingInterval should have a default sampling interval, greater than minimumSamplingInterval " time="0.0000" classname="should have a default sampling interval, greater than minimumSamplingInterval ">
    </testcase>
    <testcase name="Subscription#adjustSamplingInterval should have a maximum sampling interval, greater than defaultSamplingInterval " time="0.0000" classname="should have a maximum sampling interval, greater than defaultSamplingInterval ">
    </testcase>
    <testcase name="Subscription#adjustSamplingInterval should adjust sampling interval to subscription publish interval when requested sampling interval === -1" time="0.0030" classname="should adjust sampling interval to subscription publish interval when requested sampling interval === -1">
    </testcase>
    <testcase name="Subscription#adjustSamplingInterval should adjust sampling interval to subscription publish interval when requested sampling interval is a negative value !== -1" time="0.0040" classname="should adjust sampling interval to subscription publish interval when requested sampling interval is a negative value !== -1">
    </testcase>
    <testcase name="Subscription#adjustSamplingInterval should leave sampling interval to 0 when requested sampling interval === 0 ( 0 means Event Based mode)" time="0.0030" classname="should leave sampling interval to 0 when requested sampling interval === 0 ( 0 means Event Based mode)">
    </testcase>
    <testcase name="Subscription#adjustSamplingInterval should adjust sampling interval to minimum when requested sampling interval === 1" time="0.0020" classname="should adjust sampling interval to minimum when requested sampling interval === 1">
    </testcase>
    <testcase name="Subscription#adjustSamplingInterval should adjust sampling interval to maximum when requested sampling interval is too high" time="0.0020" classname="should adjust sampling interval to maximum when requested sampling interval is too high">
    </testcase>
    <testcase name="Subscription#adjustSamplingInterval should return an unmodified sampling interval when requested sampling is in valid range" time="0.0020" classname="should return an unmodified sampling interval when requested sampling is in valid range">
    </testcase>
    <testcase name="Subscription#adjustSamplingInterval should adjust sampling interval the minimumSamplingInterval when requested sampling is too low" time="0.0020" classname="should adjust sampling interval the minimumSamplingInterval when requested sampling is too low">
    </testcase>
  </testsuite>
  <testsuite name="SM1 - Subscriptions and MonitoredItems" timestamp="2021-02-09T07:13:24" tests="10" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0170" failures="0">
    <testcase name="SM1 - Subscriptions and MonitoredItems a subscription should accept monitored item" time="0.0010" classname="a subscription should accept monitored item">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems a subscription should fire the event removeMonitoredItem" time="0.0010" classname="a subscription should fire the event removeMonitoredItem">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems a subscription should collect monitored item notification with _collectNotificationData" time="0.0010" classname="a subscription should collect monitored item notification with _collectNotificationData">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems a subscription should collect monitored item notification at publishing interval" time="0.0070" classname="a subscription should collect monitored item notification at publishing interval">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems should provide a mean to access the monitored clientHandle ( using the standard OPCUA method getMonitoredItems)" time="0.0010" classname="should provide a mean to access the monitored clientHandle ( using the standard OPCUA method getMonitoredItems)">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems should return BadMonitoredItemFilterUnsupported if filter is DataChangeFilter PercentDeadBand and variable has no EURange" time="0.0010" classname="should return BadMonitoredItemFilterUnsupported if filter is DataChangeFilter PercentDeadBand and variable has no EURange">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems should return an error when filter is DataChangeFilter deadband is out of bound" time="0.0010" classname="should return an error when filter is DataChangeFilter deadband is out of bound">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems should return BadFilterNotAllowed if a DataChangeFilter is specified on a non-Value Attribute monitored item" time="0.0010" classname="should return BadFilterNotAllowed if a DataChangeFilter is specified on a non-Value Attribute monitored item">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems With 3 subscriptions with monitored items" time="0.0030" classname="With 3 subscriptions with monitored items">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems should return BadFilterNotAllowed if DeadBandFilter is specified on non-Numeric value monitored item" time="0.0000" classname="should return BadFilterNotAllowed if DeadBandFilter is specified on non-Numeric value monitored item">
    </testcase>
  </testsuite>
  <testsuite name="MonitoredItem - Access Right - and Unknown Nodes" timestamp="2021-02-09T07:13:24" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0060" failures="0">
    <testcase name="SM1 - Subscriptions and MonitoredItems MonitoredItem - Access Right - and Unknown Nodes FGFG0 CreateMonitoredItems on an item to which the user does not have read-access; should succeed but Publish should return the error " time="0.0010" classname="FGFG0 CreateMonitoredItems on an item to which the user does not have read-access; should succeed but Publish should return the error ">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems MonitoredItem - Access Right - and Unknown Nodes FGFG1 should return BadNodeIdUnknown when trying to monitor an invalid node" time="0.0010" classname="FGFG1 should return BadNodeIdUnknown when trying to monitor an invalid node">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems MonitoredItem - Access Right - and Unknown Nodes FGFG2 should eventually emit DataChangeNotification when trying to monitor an invalid node that become valid" time="0.0040" classname="FGFG2 should eventually emit DataChangeNotification when trying to monitor an invalid node that become valid">
    </testcase>
  </testsuite>
  <testsuite name="DeadBandFilter !!!" timestamp="2021-02-09T07:13:24" tests="11" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0190" failures="0">
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! testing with SByte" time="0.0040" classname="testing with SByte">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! testing with Int16" time="0.0010" classname="testing with Int16">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! testing with Int32" time="0.0030" classname="testing with Int32">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! testing with Byte" time="0.0030" classname="testing with Byte">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! testing with UInt16" time="0.0010" classname="testing with UInt16">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! testing with UInt32" time="0.0010" classname="testing with UInt32">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! testing with Float" time="0.0010" classname="testing with Float">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! testing with Double" time="0.0010" classname="testing with Double">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! testing with Int64" time="0.0010" classname="testing with Int64">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! testing with UInt64" time="0.0020" classname="testing with UInt64">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems DeadBandFilter !!! ZZ0 testing with String and DeadBandFilter" time="0.0010" classname="ZZ0 testing with String and DeadBandFilter">
    </testcase>
  </testsuite>
  <testsuite name="matching minimumSamplingInterval" timestamp="2021-02-09T07:13:24" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0020" failures="0">
    <testcase name="SM1 - Subscriptions and MonitoredItems matching minimumSamplingInterval server should not allow monitoredItem sampling interval to be lesser than UAVariable minimumSampling interval" time="0.0010" classname="server should not allow monitoredItem sampling interval to be lesser than UAVariable minimumSampling interval">
    </testcase>
    <testcase name="SM1 - Subscriptions and MonitoredItems matching minimumSamplingInterval server should not allow monitoredItem sampling interval to be lesser than the MonitoredItem.minimumSamplingInterval limit (unless 0) " time="0.0010" classname="server should not allow monitoredItem sampling interval to be lesser than the MonitoredItem.minimumSamplingInterval limit (unless 0) ">
    </testcase>
  </testsuite>
  <testsuite name="SM2 - MonitoredItem advanced" timestamp="2021-02-09T07:13:24" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="SM2A - #maxNotificationsPerPublish" timestamp="2021-02-09T07:13:24" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0100" failures="0">
    <testcase name="SM2 - MonitoredItem advanced SM2A - #maxNotificationsPerPublish should have a proper maxNotificationsPerPublish default value" time="0.0000" classname="should have a proper maxNotificationsPerPublish default value">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2A - #maxNotificationsPerPublish QA should not publish more notifications than expected" time="0.0100" classname="QA should not publish more notifications than expected">
    </testcase>
  </testsuite>
  <testsuite name="SM2B - Subscription.subscriptionDiagnostics" timestamp="2021-02-09T07:13:24" tests="12" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0060" failures="0">
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.sessionId" time="0.0010" classname="should update Subscription.subscriptionDiagnostics.sessionId">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.subscriptionId" time="0.0000" classname="should update Subscription.subscriptionDiagnostics.subscriptionId">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.priority" time="0.0000" classname="should update Subscription.subscriptionDiagnostics.priority">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.publishingInterval" time="0.0000" classname="should update Subscription.subscriptionDiagnostics.publishingInterval">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.maxLifetimeCount" time="0.0000" classname="should update Subscription.subscriptionDiagnostics.maxLifetimeCount">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.maxKeepAliveCount" time="0.0000" classname="should update Subscription.subscriptionDiagnostics.maxKeepAliveCount">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.maxNotificationsPerPublish" time="0.0000" classname="should update Subscription.subscriptionDiagnostics.maxNotificationsPerPublish">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.publishingEnabled" time="0.0000" classname="should update Subscription.subscriptionDiagnostics.publishingEnabled">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.nextSequenceNumber" time="0.0000" classname="should update Subscription.subscriptionDiagnostics.nextSequenceNumber">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.disabledMonitoredItemCount" time="0.0010" classname="should update Subscription.subscriptionDiagnostics.disabledMonitoredItemCount">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.monitoredItemCount" time="0.0000" classname="should update Subscription.subscriptionDiagnostics.monitoredItemCount">
    </testcase>
    <testcase name="SM2 - MonitoredItem advanced SM2B - Subscription.subscriptionDiagnostics should update Subscription.subscriptionDiagnostics.dataChangeNotificationsCount" time="0.0040" classname="should update Subscription.subscriptionDiagnostics.dataChangeNotificationsCount">
    </testcase>
  </testsuite>
  <testsuite name="Subscriptions and MonitoredItems" timestamp="2021-02-09T07:13:24" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-address-space\test\alarms_and_conditions\test_alarms_and_conditions.ts" time="0.0080" failures="0">
    <testcase name="Subscriptions and MonitoredItems should return Good if DeadBandFilter is NOT specified on boolean value monitored item" time="0.0010" classname="should return Good if DeadBandFilter is NOT specified on boolean value monitored item">
    </testcase>
    <testcase name="Subscriptions and MonitoredItems should return Good if DeadBandFilter is NOT specified on String value monitored item" time="0.0010" classname="should return Good if DeadBandFilter is NOT specified on String value monitored item">
    </testcase>
    <testcase name="Subscriptions and MonitoredItems should return Good if DeadBandFilter is NOT specified on ByteString value monitored item" time="0.0020" classname="should return Good if DeadBandFilter is NOT specified on ByteString value monitored item">
    </testcase>
    <testcase name="Subscriptions and MonitoredItems should return Good if DeadBandFilter is NOT specified on LocalizedText value monitored item" time="0.0010" classname="should return Good if DeadBandFilter is NOT specified on LocalizedText value monitored item">
    </testcase>
    <testcase name="Subscriptions and MonitoredItems should return BadFilterNotAllowed if DeadBandFilter is specified on boolean value monitored item" time="0.0010" classname="should return BadFilterNotAllowed if DeadBandFilter is specified on boolean value monitored item">
    </testcase>
    <testcase name="Subscriptions and MonitoredItems should return BadFilterNotAllowed if DeadBandFilter is specified on String value monitored item" time="0.0010" classname="should return BadFilterNotAllowed if DeadBandFilter is specified on String value monitored item">
    </testcase>
    <testcase name="Subscriptions and MonitoredItems should return BadFilterNotAllowed if DeadBandFilter is specified on ByteString value monitored item" time="0.0000" classname="should return BadFilterNotAllowed if DeadBandFilter is specified on ByteString value monitored item">
    </testcase>
    <testcase name="Subscriptions and MonitoredItems should return BadFilterNotAllowed if DeadBandFilter is specified on LocalizedText value monitored item" time="0.0010" classname="should return BadFilterNotAllowed if DeadBandFilter is specified on LocalizedText value monitored item">
    </testcase>
  </testsuite>
  <testsuite name="Testing Browse Service" timestamp="2021-02-09T07:13:24" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-browse\test\test_service_browse.js" time="0.0030" failures="0">
    <testcase name="Testing Browse Service should create a BrowseRequest" time="0.0020" classname="should create a BrowseRequest">
    </testcase>
    <testcase name="Testing Browse Service should create a BrowseResponse" time="0.0010" classname="should create a BrowseResponse">
    </testcase>
  </testsuite>
  <testsuite name="Browse Service" timestamp="2021-02-09T07:13:24" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-browse\test\test_service_browse.js" time="0.0070" failures="0">
    <testcase name="Browse Service should construct a BrowseDescription" time="0.0010" classname="should construct a BrowseDescription">
    </testcase>
    <testcase name="Browse Service should create a BrowseRequest" time="0.0010" classname="should create a BrowseRequest">
    </testcase>
    <testcase name="Browse Service should create a BrowseRequest with correct default value in  viewDescription" time="0.0000" classname="should create a BrowseRequest with correct default value in  viewDescription">
    </testcase>
    <testcase name="Browse Service should create a BrowseResponse" time="0.0020" classname="should create a BrowseResponse">
    </testcase>
    <testcase name="Browse Service should jsonify a ReferenceDescription" time="0.0010" classname="should jsonify a ReferenceDescription">
    </testcase>
    <testcase name="Browse Service should jsonify a BrowseResponse" time="0.0020" classname="should jsonify a BrowseResponse">
    </testcase>
  </testsuite>
  <testsuite name="testing CallMethodRequest" timestamp="2021-02-09T07:13:24" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-call\test\test_call_service.js" time="0.0030" failures="0">
    <testcase name="testing CallMethodRequest should encode CallMethodRequest (scalar UInt32)" time="0.0000" classname="should encode CallMethodRequest (scalar UInt32)">
    </testcase>
    <testcase name="testing CallMethodRequest should encode CallMethodRequest (array UInt32)" time="0.0010" classname="should encode CallMethodRequest (array UInt32)">
    </testcase>
    <testcase name="testing CallMethodRequest Q2 should encode CallMethodResult" time="0.0020" classname="Q2 should encode CallMethodResult">
    </testcase>
  </testsuite>
  <testsuite name="Register Server Service" timestamp="2021-02-09T07:13:24" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-discovery\test\test_service_register_server.js" time="0.0000" failures="0">
    <testcase name="Register Server Service should create a RegisterServerRequest" time="0.0000" classname="should create a RegisterServerRequest">
    </testcase>
  </testsuite>
  <testsuite name="OPCUA Object creation" timestamp="2021-02-09T07:13:24" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-endpoints\test\test_application_description.js" time="0.0000" failures="0">
    <testcase name="OPCUA Object creation should create a complex type with embedded type" time="0.0000" classname="should create a complex type with embedded type">
    </testcase>
  </testsuite>
  <testsuite name=" EndPoint Service" timestamp="2021-02-09T07:13:24" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-endpoints\test\test_endpoints_service.js" time="0.0000" failures="0">
    <testcase name=" EndPoint Service  should create a GetEndPointRequest" time="0.0000" classname=" should create a GetEndPointRequest">
    </testcase>
    <testcase name=" EndPoint Service  should create a GetEndPointResponse" time="0.0000" classname=" should create a GetEndPointResponse">
    </testcase>
  </testsuite>
  <testsuite name="Endpoints Service" timestamp="2021-02-09T07:13:24" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-endpoints\test\test_service_endpoint.js" time="0.0000" failures="0">
    <testcase name="Endpoints Service should instantiate a GetEndpointsRequest" time="0.0000" classname="should instantiate a GetEndpointsRequest">
    </testcase>
    <testcase name="Endpoints Service should instantiate a GetEndpointsResponse" time="0.0000" classname="should instantiate a GetEndpointsResponse">
    </testcase>
  </testsuite>
  <testsuite name="Filter Service" timestamp="2021-02-09T07:13:24" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-filter\test\test_filter_service.js" time="0.0000" failures="0">
    <testcase name="Filter Service should create a EventFilter" time="0.0000" classname="should create a EventFilter">
    </testcase>
  </testsuite>
  <testsuite name="test constructEventFilter" timestamp="2021-02-09T07:13:24" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-filter\test\test_tools_event_filter.js" time="0.0020" failures="0">
    <testcase name="test constructEventFilter should construct a simple event filter with a single string (with namespace)" time="0.0010" classname="should construct a simple event filter with a single string (with namespace)">
    </testcase>
    <testcase name="test constructEventFilter should construct a simple event filter" time="0.0000" classname="should construct a simple event filter">
    </testcase>
    <testcase name="test constructEventFilter should construct a simple event filter with two clauses" time="0.0000" classname="should construct a simple event filter with two clauses">
    </testcase>
    <testcase name="test constructEventFilter should construct a simple event filter with namespace" time="0.0000" classname="should construct a simple event filter with namespace">
    </testcase>
    <testcase name="test constructEventFilter should construct a simple event filter with a qualified name" time="0.0000" classname="should construct a simple event filter with a qualified name">
    </testcase>
    <testcase name="test constructEventFilter should construct a simple event filter with a qualified name" time="0.0000" classname="should construct a simple event filter with a qualified name">
    </testcase>
    <testcase name="test constructEventFilter should construct a event filter with a 2 level browse path (form 1)" time="0.0000" classname="should construct a event filter with a 2 level browse path (form 1)">
    </testcase>
    <testcase name="test constructEventFilter should construct a event filter with a 2 level browse path (form 2)" time="0.0000" classname="should construct a event filter with a 2 level browse path (form 2)">
    </testcase>
    <testcase name="test constructEventFilter should construct a event filter with ConditionType" time="0.0010" classname="should construct a event filter with ConditionType">
    </testcase>
  </testsuite>
  <testsuite name="Historizing Service" timestamp="2021-02-09T07:13:24" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-history\test\test_historizing_service.js" time="0.0060" failures="0">
    <testcase name="Historizing Service should create a empty HistoryReadRequest" time="0.0000" classname="should create a empty HistoryReadRequest">
    </testcase>
    <testcase name="Historizing Service should create a HistoryReadRequest with historyReadDetails as a ReadEventDetails" time="0.0020" classname="should create a HistoryReadRequest with historyReadDetails as a ReadEventDetails">
    </testcase>
    <testcase name="Historizing Service should create a HistoryReadRequest with historyReadDetails as a ReadRawModifiedDetails" time="0.0010" classname="should create a HistoryReadRequest with historyReadDetails as a ReadRawModifiedDetails">
    </testcase>
    <testcase name="Historizing Service should create a HistoryReadRequest with historyReadDetails as a ReadProcessedDetails" time="0.0010" classname="should create a HistoryReadRequest with historyReadDetails as a ReadProcessedDetails">
    </testcase>
    <testcase name="Historizing Service should create a HistoryReadRequest with historyReadDetails as a ReadAtTimeDetails" time="0.0010" classname="should create a HistoryReadRequest with historyReadDetails as a ReadAtTimeDetails">
    </testcase>
    <testcase name="Historizing Service should create a HistoryReadRequest with nodesToRead" time="0.0010" classname="should create a HistoryReadRequest with nodesToRead">
    </testcase>
  </testsuite>
  <testsuite name="History Service" timestamp="2021-02-09T07:13:24" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-history\test\test_history_service.js" time="0.0010" failures="0">
    <testcase name="History Service should create a HistoryReadDetails" time="0.0000" classname="should create a HistoryReadDetails">
    </testcase>
    <testcase name="History Service should create a HistoryReadRequest" time="0.0000" classname="should create a HistoryReadRequest">
    </testcase>
    <testcase name="History Service should create a HistoryReadResult" time="0.0000" classname="should create a HistoryReadResult">
    </testcase>
    <testcase name="History Service should create a HistoryUpdateRequest" time="0.0000" classname="should create a HistoryUpdateRequest">
    </testcase>
    <testcase name="History Service should create a HistoryUpdateResponse" time="0.0010" classname="should create a HistoryUpdateResponse">
    </testcase>
    <testcase name="History Service should create a HistoryData" time="0.0000" classname="should create a HistoryData">
    </testcase>
  </testsuite>
  <testsuite name="Service NodeManagement" timestamp="2021-02-09T07:13:24" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-node-management\test\test_service_node_management.js" time="0.0000" failures="0">
    <testcase name="Service NodeManagement should create a AddNodesRequest" time="0.0000" classname="should create a AddNodesRequest">
    </testcase>
  </testsuite>
  <testsuite name="Query Service" timestamp="2021-02-09T07:13:24" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-query\test\test_service_query.js" time="0.0000" failures="0">
    <testcase name="Query Service should create a QueryFirstRequest" time="0.0000" classname="should create a QueryFirstRequest">
    </testcase>
  </testsuite>
  <testsuite name="Type coercion at construction time" timestamp="2021-02-09T07:13:24" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-read\test\test_nodeid_coercion.js" time="0.0000" failures="0">
    <testcase name="Type coercion at construction time should coerce a nodeId at construction " time="0.0000" classname="should coerce a nodeId at construction ">
    </testcase>
  </testsuite>
  <testsuite name="test service Read" timestamp="2021-02-09T07:13:24" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-read\test\test_service_read.js" time="0.0070" failures="0">
    <testcase name="test service Read should create a empty ReadRequest" time="0.0020" classname="should create a empty ReadRequest">
    </testcase>
    <testcase name="test service Read should create a ReadRequest and append ReadValueId to nodesToRead   " time="0.0010" classname="should create a ReadRequest and append ReadValueId to nodesToRead   ">
    </testcase>
    <testcase name="test service Read should create a ReadRequest" time="0.0010" classname="should create a ReadRequest">
    </testcase>
    <testcase name="test service Read should raise a exception if ReadRequest is created with a invalid attributeId" time="0.0010" classname="should raise a exception if ReadRequest is created with a invalid attributeId">
    </testcase>
    <testcase name="test service Read should create a ReadResponse" time="0.0020" classname="should create a ReadResponse">
    </testcase>
  </testsuite>
  <testsuite name="Read Service" timestamp="2021-02-09T07:13:24" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-read\test\test_service_read2.js" time="0.0010" failures="0">
    <testcase name="Read Service should create a ReadValueId" time="0.0000" classname="should create a ReadValueId">
    </testcase>
    <testcase name="Read Service should create a ReadRequest" time="0.0000" classname="should create a ReadRequest">
    </testcase>
    <testcase name="Read Service should create a ReadResponse" time="0.0010" classname="should create a ReadResponse">
    </testcase>
  </testsuite>
  <testsuite name="RegisterNode Service" timestamp="2021-02-09T07:13:24" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-register-node\test\test_service_register_node.js" time="0.0010" failures="0">
    <testcase name="RegisterNode Service should create a RegisterNodesRequest" time="0.0000" classname="should create a RegisterNodesRequest">
    </testcase>
    <testcase name="RegisterNode Service should create a RegisterNodesResponse" time="0.0000" classname="should create a RegisterNodesResponse">
    </testcase>
    <testcase name="RegisterNode Service should create a UnregisterNodesRequest" time="0.0010" classname="should create a UnregisterNodesRequest">
    </testcase>
    <testcase name="RegisterNode Service should create a UnregisterNodesResponse" time="0.0000" classname="should create a UnregisterNodesResponse">
    </testcase>
  </testsuite>
  <testsuite name="SecureChannel Service - ChannelSecurityToken" timestamp="2021-02-09T07:13:24" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-secure-channel\test\test_ChannelSecurityToken.js" time="0.1060" failures="0">
    <testcase name="SecureChannel Service - ChannelSecurityToken should instantiate a ChannelSecurityToken and have a valid default revisedLifetime" time="0.0000" classname="should instantiate a ChannelSecurityToken and have a valid default revisedLifetime">
    </testcase>
    <testcase name="SecureChannel Service - ChannelSecurityToken should ChannelSecurityToken have a valid createdAt date " time="0.0000" classname="should ChannelSecurityToken have a valid createdAt date ">
    </testcase>
    <testcase name="SecureChannel Service - ChannelSecurityToken testing hasTokenExpired" time="0.0000" classname="testing hasTokenExpired">
    </testcase>
    <testcase name="SecureChannel Service - ChannelSecurityToken a ChannelSecurityToken should expired after the revisedLifetime" time="0.1060" classname="a ChannelSecurityToken should expired after the revisedLifetime">
    </testcase>
  </testsuite>
  <testsuite name="MessageSecurityMode" timestamp="2021-02-09T07:13:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-secure-channel\test\test_message_security_mode.js" time="0.0010" failures="0">
    <testcase name="MessageSecurityMode should coerce a string into MessageSecurityMode" time="0.0010" classname="should coerce a string into MessageSecurityMode">
    </testcase>
  </testsuite>
  <testsuite name="testing OPCUA structures " timestamp="2021-02-09T07:13:25" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-secure-channel\test\test_opcua.js" time="0.0000" failures="0">
    <testcase name="testing OPCUA structures  should create a RequestHeader" time="0.0000" classname="should create a RequestHeader">
    </testcase>
    <testcase name="testing OPCUA structures  should create a ResponseHeader" time="0.0000" classname="should create a ResponseHeader">
    </testcase>
  </testsuite>
  <testsuite name="ServiceFault" timestamp="2021-02-09T07:13:25" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-secure-channel\test\test_service_fault.js" time="0.0030" failures="0">
    <testcase name="ServiceFault should decode a real ServiceFault" time="0.0030" classname="should decode a real ServiceFault">
    </testcase>
    <testcase name="ServiceFault should create a ServiceFault with a specific serviceResult" time="0.0000" classname="should create a ServiceFault with a specific serviceResult">
    </testcase>
  </testsuite>
  <testsuite name="SecureChannel Service" timestamp="2021-02-09T07:13:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-secure-channel\test\test_sevice_secure_channel.js" time="0.0000" failures="0">
    <testcase name="SecureChannel Service should instantiate a ChannelSecurityToken" time="0.0000" classname="should instantiate a ChannelSecurityToken">
    </testcase>
  </testsuite>
  <testsuite name="Session Service" timestamp="2021-02-09T07:13:25" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-session\test\test_service_session.js" time="0.0010" failures="0">
    <testcase name="Session Service should instantiate a CreateSessionRequest" time="0.0000" classname="should instantiate a CreateSessionRequest">
    </testcase>
    <testcase name="Session Service should instantiate a CreateSessionResponse" time="0.0000" classname="should instantiate a CreateSessionResponse">
    </testcase>
    <testcase name="Session Service should instantiate a ActivateSessionRequest" time="0.0000" classname="should instantiate a ActivateSessionRequest">
    </testcase>
    <testcase name="Session Service should instantiate a ActivateSessionResponse" time="0.0000" classname="should instantiate a ActivateSessionResponse">
    </testcase>
    <testcase name="Session Service should create a complex type with embedded type" time="0.0010" classname="should create a complex type with embedded type">
    </testcase>
  </testsuite>
  <testsuite name="test DeadBand Checker" timestamp="2021-02-09T07:13:25" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-subscription\test\test_deadband_checker.ts" time="0.0020" failures="0">
    <testcase name="test DeadBand Checker Scalar - DeadbandType.None - should detect difference between two Int scalar" time="0.0000" classname="Scalar - DeadbandType.None - should detect difference between two Int scalar">
    </testcase>
    <testcase name="test DeadBand Checker Scalar - DeadbandType.Absolute - should detect difference between two Int scalar" time="0.0000" classname="Scalar - DeadbandType.Absolute - should detect difference between two Int scalar">
    </testcase>
    <testcase name="test DeadBand Checker Scalar - DeadbandType.Percent - should detect difference between two Int scalar" time="0.0000" classname="Scalar - DeadbandType.Percent - should detect difference between two Int scalar">
    </testcase>
    <testcase name="test DeadBand Checker Array  - DeadbandType.None - should detect difference between two Int scalar" time="0.0000" classname="Array  - DeadbandType.None - should detect difference between two Int scalar">
    </testcase>
    <testcase name="test DeadBand Checker Array  - DeadbandType.Absolute - should detect difference between two Int scalar" time="0.0000" classname="Array  - DeadbandType.Absolute - should detect difference between two Int scalar">
    </testcase>
    <testcase name="test DeadBand Checker Scalar - DeadbandType.None - should detect difference between two Int64 scalar" time="0.0010" classname="Scalar - DeadbandType.None - should detect difference between two Int64 scalar">
    </testcase>
    <testcase name="test DeadBand Checker Scalar - DeadbandType.Absolute - should detect difference between two Int64 scalar" time="0.0000" classname="Scalar - DeadbandType.Absolute - should detect difference between two Int64 scalar">
    </testcase>
    <testcase name="test DeadBand Checker Scalar - DeadbandType.Percent - should handle edge case - percent 99" time="0.0010" classname="Scalar - DeadbandType.Percent - should handle edge case - percent 99">
    </testcase>
    <testcase name="test DeadBand Checker Scalar - DeadbandType.Percent - should handle edge case - percent 0" time="0.0000" classname="Scalar - DeadbandType.Percent - should handle edge case - percent 0">
    </testcase>
  </testsuite>
  <testsuite name="testing subscription objects" timestamp="2021-02-09T07:13:25" tests="20" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-subscription\test\test_subscription_service.js" time="0.0270" failures="0">
    <testcase name="testing subscription objects should encode and decode a CreateSubscriptionRequest" time="0.0010" classname="should encode and decode a CreateSubscriptionRequest">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a CreateSubscriptionResponse" time="0.0010" classname="should encode and decode a CreateSubscriptionResponse">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a CreateMonitoredItemsRequest" time="0.0010" classname="should encode and decode a CreateMonitoredItemsRequest">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a CreateMonitoredItemsResponse" time="0.0010" classname="should encode and decode a CreateMonitoredItemsResponse">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a MonitoringParameters" time="0.0010" classname="should encode and decode a MonitoringParameters">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a MonitoringParameters with EventFilter filter" time="0.0040" classname="should encode and decode a MonitoringParameters with EventFilter filter">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a DeleteMonitoredItemsRequest" time="0.0010" classname="should encode and decode a DeleteMonitoredItemsRequest">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a DeleteMonitoredItemsResponse" time="0.0020" classname="should encode and decode a DeleteMonitoredItemsResponse">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a SetPublishingModeRequest" time="0.0010" classname="should encode and decode a SetPublishingModeRequest">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a SetPublishingModeResponse" time="0.0020" classname="should encode and decode a SetPublishingModeResponse">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a PublishRequest" time="0.0010" classname="should encode and decode a PublishRequest">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a PublishResponse" time="0.0010" classname="should encode and decode a PublishResponse">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a PublishResponse with Error" time="0.0010" classname="should encode and decode a PublishResponse with Error">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a MonitoringParametes" time="0.0000" classname="should encode and decode a MonitoringParametes">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a RepublishRequest" time="0.0010" classname="should encode and decode a RepublishRequest">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a RepublishResponse" time="0.0010" classname="should encode and decode a RepublishResponse">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a DeleteSubscriptionsRequest" time="0.0010" classname="should encode and decode a DeleteSubscriptionsRequest">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a DeleteSubscriptionsResponse" time="0.0010" classname="should encode and decode a DeleteSubscriptionsResponse">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a ModifyMonitoredItemsRequest" time="0.0020" classname="should encode and decode a ModifyMonitoredItemsRequest">
    </testcase>
    <testcase name="testing subscription objects should encode and decode a ModifyMonitoredItemsResponse" time="0.0030" classname="should encode and decode a ModifyMonitoredItemsResponse">
    </testcase>
  </testsuite>
  <testsuite name="testing subscription services data structure from the field" timestamp="2021-02-09T07:13:25" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-subscription\test\test_subscription_service.js" time="0.0070" failures="0">
    <testcase name="testing subscription objects testing subscription services data structure from the field should decode a real CreateMonitoredItemsRequest " time="0.0040" classname="should decode a real CreateMonitoredItemsRequest ">
    </testcase>
    <testcase name="testing subscription objects testing subscription services data structure from the field should decode a real CreateMonitoredItemResponse" time="0.0030" classname="should decode a real CreateMonitoredItemResponse">
    </testcase>
  </testsuite>
  <testsuite name="CreateMonitoredItemsRequest with EventFilter parameters" timestamp="2021-02-09T07:13:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-subscription\test\test_subscription_service.js" time="0.0040" failures="0">
    <testcase name="CreateMonitoredItemsRequest with EventFilter parameters should decode this packet from PROSYS ANDROID app" time="0.0040" classname="should decode this packet from PROSYS ANDROID app">
    </testcase>
  </testsuite>
  <testsuite name="Subscription Service" timestamp="2021-02-09T07:13:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-subscription\test\test_subscription_service_base.js" time="0.0000" failures="0">
    <testcase name="Subscription Service should create a CreateSubscriptionRequest" time="0.0000" classname="should create a CreateSubscriptionRequest">
    </testcase>
  </testsuite>
  <testsuite name="#makeBrowsePath" timestamp="2021-02-09T07:13:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-translate-browse-path\test\test_issue_218.js" time="0.0000" failures="0">
    <testcase name="#makeBrowsePath should parse name containing spaces and ( or )" time="0.0000" classname="should parse name containing spaces and ( or )">
    </testcase>
  </testsuite>
  <testsuite name="makeRelativePath" timestamp="2021-02-09T07:13:25" tests="20" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-translate-browse-path\test\test_make_relative_path.js" time="0.0050" failures="0">
    <testcase name="makeRelativePath T1 should construct simple RelativePath for &apos;/&apos; " time="0.0000" classname="T1 should construct simple RelativePath for &apos;/&apos; ">
    </testcase>
    <testcase name="makeRelativePath T2 should construct simple RelativePath for &apos;.&apos; " time="0.0000" classname="T2 should construct simple RelativePath for &apos;.&apos; ">
    </testcase>
    <testcase name="makeRelativePath T3 should construct simple RelativePath for &apos;&lt;HasChild&gt;&apos; " time="0.0000" classname="T3 should construct simple RelativePath for &apos;&lt;HasChild&gt;&apos; ">
    </testcase>
    <testcase name="makeRelativePath T3 should construct simple RelativePath for &apos;&lt;!HasSubtype&gt;&apos; " time="0.0000" classname="T3 should construct simple RelativePath for &apos;&lt;!HasSubtype&gt;&apos; ">
    </testcase>
    <testcase name="makeRelativePath T4 should construct simple RelativePath for &apos;&lt;#HasChild&gt;&apos; " time="0.0000" classname="T4 should construct simple RelativePath for &apos;&lt;#HasChild&gt;&apos; ">
    </testcase>
    <testcase name="makeRelativePath T5 should construct simple RelativePath for &apos;&lt;!HasChild&gt;&apos; " time="0.0000" classname="T5 should construct simple RelativePath for &apos;&lt;!HasChild&gt;&apos; ">
    </testcase>
    <testcase name="makeRelativePath T6 should construct simple RelativePath for &apos;&lt;#!HasChild&gt;&apos; " time="0.0000" classname="T6 should construct simple RelativePath for &apos;&lt;#!HasChild&gt;&apos; ">
    </testcase>
    <testcase name="makeRelativePath T7 should construct simple RelativePath for &apos;/3:Truck&apos;" time="0.0010" classname="T7 should construct simple RelativePath for &apos;/3:Truck&apos;">
    </testcase>
    <testcase name="makeRelativePath T8 should construct simple RelativePath for &apos;/3:Truck.0:NodeVersion&apos; " time="0.0000" classname="T8 should construct simple RelativePath for &apos;/3:Truck.0:NodeVersion&apos; ">
    </testcase>
    <testcase name="makeRelativePath T9 should construct simple RelativePath for &apos;/2:Block&amp;.Output&apos;" time="0.0000" classname="T9 should construct simple RelativePath for &apos;/2:Block&amp;.Output&apos;">
    </testcase>
    <testcase name="makeRelativePath TA should construct simple RelativePath for &apos;&lt;1:ConnectedTo&gt;1:Boiler/1:HeatSensor&apos;" time="0.0020" classname="TA should construct simple RelativePath for &apos;&lt;1:ConnectedTo&gt;1:Boiler/1:HeatSensor&apos;">
    </testcase>
    <testcase name="makeRelativePath TB should construct simple RelativePath for &apos;&lt;1:ConnectedTo&gt;1:Boiler/&apos;" time="0.0000" classname="TB should construct simple RelativePath for &apos;&lt;1:ConnectedTo&gt;1:Boiler/&apos;">
    </testcase>
    <testcase name="makeRelativePath TC should construct simple RelativePath for &apos;&lt;0:HasChild&gt;2:Wheel&apos;" time="0.0000" classname="TC should construct simple RelativePath for &apos;&lt;0:HasChild&gt;2:Wheel&apos;">
    </testcase>
    <testcase name="makeRelativePath TD should construct simple RelativePath for &apos;&lt;!HasChild&gt;2:Wheel&apos;" time="0.0010" classname="TD should construct simple RelativePath for &apos;&lt;!HasChild&gt;2:Wheel&apos;">
    </testcase>
    <testcase name="makeRelativePath TE should construct simple RelativePath for &apos;&lt;0:HasChild&gt;&apos;" time="0.0000" classname="TE should construct simple RelativePath for &apos;&lt;0:HasChild&gt;&apos;">
    </testcase>
    <testcase name="makeRelativePath TF should construct simple RelativePath for &apos;&lt;Organizes&gt;Server.ServerStatus.CurrentTime&apos;" time="0.0000" classname="TF should construct simple RelativePath for &apos;&lt;Organizes&gt;Server.ServerStatus.CurrentTime&apos;">
    </testcase>
    <testcase name="makeRelativePath TG should construct simple RelativePath for &apos;&lt;Organizes&gt;Server2.ServerStatus.1.2&apos;" time="0.0000" classname="TG should construct simple RelativePath for &apos;&lt;Organizes&gt;Server2.ServerStatus.1.2&apos;">
    </testcase>
    <testcase name="makeRelativePath TH should construct simple RelativePath for &apos;/3:TOTO/1:Channel#1/2:TOTO&apos;" time="0.0010" classname="TH should construct simple RelativePath for &apos;/3:TOTO/1:Channel#1/2:TOTO&apos;">
    </testcase>
    <testcase name="makeRelativePath TI (issue#344) should construct simple RelativePath for &apos;/0:Objects/2:test-path&apos;" time="0.0000" classname="TI (issue#344) should construct simple RelativePath for &apos;/0:Objects/2:test-path&apos;">
    </testcase>
    <testcase name="makeRelativePath TJ should construct simple RelativePath for SessionDiagnostics.TotalRequestsCount.TotalCount" time="0.0000" classname="TJ should construct simple RelativePath for SessionDiagnostics.TotalRequestsCount.TotalCount">
    </testcase>
  </testsuite>
  <testsuite name="Test TranslateBrowsePath Service" timestamp="2021-02-09T07:13:25" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-translate-browse-path\test\test_service_translate_browse_path.js" time="0.0010" failures="0">
    <testcase name="Test TranslateBrowsePath Service should create a TranslateBrowsePathsToNodeIdsRequest" time="0.0000" classname="should create a TranslateBrowsePathsToNodeIdsRequest">
    </testcase>
    <testcase name="Test TranslateBrowsePath Service should create a TranslateBrowsePathsToNodeIdsResponse" time="0.0010" classname="should create a TranslateBrowsePathsToNodeIdsResponse">
    </testcase>
  </testsuite>
  <testsuite name="Write Service" timestamp="2021-02-09T07:13:25" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-write\test\test_service_write.js" time="0.0000" failures="0">
    <testcase name="Write Service should create a WriteValue" time="0.0000" classname="should create a WriteValue">
    </testcase>
    <testcase name="Write Service should create a WriteRequest" time="0.0000" classname="should create a WriteRequest">
    </testcase>
    <testcase name="Write Service should create a WriteResponse" time="0.0000" classname="should create a WriteResponse">
    </testcase>
  </testsuite>
  <testsuite name="WriteValue" timestamp="2021-02-09T07:13:25" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-write\test\test_service_write.js" time="0.0010" failures="0">
    <testcase name="WriteValue should create a default WriteValue" time="0.0000" classname="should create a default WriteValue">
    </testcase>
    <testcase name="WriteValue should create a write value with a DataValue containing a Extension Object" time="0.0010" classname="should create a write value with a DataValue containing a Extension Object">
    </testcase>
  </testsuite>
  <testsuite name="WriteRequest" timestamp="2021-02-09T07:13:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-service-write\test\test_service_write.js" time="0.0010" failures="0">
    <testcase name="WriteRequest should create a default WriteRequest" time="0.0010" classname="should create a default WriteRequest">
    </testcase>
  </testsuite>
  <testsuite name="testing status code manipulation" timestamp="2021-02-09T07:13:25" tests="26" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-status-code\test\test_status_code.js" time="0.0030" failures="0">
    <testcase name="testing status code manipulation should create BadNodeIdExists" time="0.0000" classname="should create BadNodeIdExists">
    </testcase>
    <testcase name="testing status code manipulation should create BadAttributeIdInvalid" time="0.0000" classname="should create BadAttributeIdInvalid">
    </testcase>
    <testcase name="testing status code manipulation should create GoodWithOverflowBit" time="0.0000" classname="should create GoodWithOverflowBit">
    </testcase>
    <testcase name="testing status code manipulation should encode and decode a status code" time="0.0000" classname="should encode and decode a status code">
    </testcase>
    <testcase name="testing status code manipulation statusCode should implement a special toString" time="0.0000" classname="statusCode should implement a special toString">
    </testcase>
    <testcase name="testing status code manipulation should create Uncertain_InitialValue" time="0.0000" classname="should create Uncertain_InitialValue">
    </testcase>
    <testcase name="testing status code manipulation GoodWithOverflowBit" time="0.0000" classname="GoodWithOverflowBit">
    </testcase>
    <testcase name="testing status code manipulation should be possible to set SemanticChanged bit on a status code" time="0.0000" classname="should be possible to set SemanticChanged bit on a status code">
    </testcase>
    <testcase name="testing status code manipulation should be possible to set the Overflow bit on a status code" time="0.0010" classname="should be possible to set the Overflow bit on a status code">
    </testcase>
    <testcase name="testing status code manipulation should be possible to set the Overflow and SemanticChanged bits on a status code" time="0.0000" classname="should be possible to set the Overflow and SemanticChanged bits on a status code">
    </testcase>
    <testcase name="testing status code manipulation should be possible to encode and decode a statusCode that have a extra information bit" time="0.0000" classname="should be possible to encode and decode a statusCode that have a extra information bit">
    </testcase>
    <testcase name="testing status code manipulation should fail to set a extra information bit on a standard StatusCode" time="0.0000" classname="should fail to set a extra information bit on a standard StatusCode">
    </testcase>
    <testcase name="testing status code manipulation should convert " time="0.0010" classname="should convert ">
    </testcase>
    <testcase name="testing status code manipulation should coerce a number to a status code" time="0.0000" classname="should coerce a number to a status code">
    </testcase>
    <testcase name="testing status code manipulation should coerce a string to a status code" time="0.0000" classname="should coerce a string to a status code">
    </testcase>
    <testcase name="testing status code manipulation should coerce a status code" time="0.0000" classname="should coerce a status code">
    </testcase>
    <testcase name="testing status code manipulation should coerce a {value} code" time="0.0000" classname="should coerce a {value} code">
    </testcase>
    <testcase name="testing status code manipulation toJSON full" time="0.0010" classname="toJSON full">
    </testcase>
    <testcase name="testing status code manipulation hasOverflowBit" time="0.0000" classname="hasOverflowBit">
    </testcase>
    <testcase name="testing status code manipulation hasSemanticChangedBit" time="0.0000" classname="hasSemanticChangedBit">
    </testcase>
    <testcase name="testing status code manipulation hasStructureChangedBit" time="0.0000" classname="hasStructureChangedBit">
    </testcase>
    <testcase name="testing status code manipulation equals" time="0.0000" classname="equals">
    </testcase>
    <testcase name="testing status code manipulation equals" time="0.0000" classname="equals">
    </testcase>
    <testcase name="testing status code manipulation isNot" time="0.0000" classname="isNot">
    </testcase>
    <testcase name="testing status code manipulation isNot" time="0.0000" classname="isNot">
    </testcase>
    <testcase name="testing status code manipulation valueOf" time="0.0000" classname="valueOf">
    </testcase>
  </testsuite>
  <testsuite name="ModifiableStatusCode" timestamp="2021-02-09T07:13:25" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-status-code\test\test_status_code.js" time="0.0010" failures="0">
    <testcase name="ModifiableStatusCode should be possible to create a modifiable StatusCode from a ModifiableStatusCode" time="0.0010" classname="should be possible to create a modifiable StatusCode from a ModifiableStatusCode">
    </testcase>
    <testcase name="ModifiableStatusCode should unset a flag by name" time="0.0000" classname="should unset a flag by name">
    </testcase>
    <testcase name="ModifiableStatusCode should set multiple flag by name" time="0.0000" classname="should set multiple flag by name">
    </testcase>
    <testcase name="ModifiableStatusCode test with extra bits 1" time="0.0000" classname="test with extra bits 1">
    </testcase>
    <testcase name="ModifiableStatusCode test with extra bits 2" time="0.0000" classname="test with extra bits 2">
    </testcase>
    <testcase name="ModifiableStatusCode test with extra bits 3" time="0.0000" classname="test with extra bits 3">
    </testcase>
    <testcase name="ModifiableStatusCode test with extra bits 4" time="0.0000" classname="test with extra bits 4">
    </testcase>
  </testsuite>
  <testsuite name="testing ClientTCP_transport" timestamp="2021-02-09T07:13:25" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-transport\test\test_client_tcp_transport.js" time="0.5710" failures="0">
    <testcase name="testing ClientTCP_transport TCS1 should create and connect to a client TCP" time="0.0040" classname="TCS1 should create and connect to a client TCP">
    </testcase>
    <testcase name="testing ClientTCP_transport TCS2 should report a time out error if trying to connect to a non responding server" time="0.5140" classname="TCS2 should report a time out error if trying to connect to a non responding server">
    </testcase>
    <testcase name="testing ClientTCP_transport should report an error if the server close the socket unexpectedly" time="0.0040" classname="should report an error if the server close the socket unexpectedly">
    </testcase>
    <testcase name="testing ClientTCP_transport should report an error if the server reports a protocol version mismatch" time="0.0050" classname="should report an error if the server reports a protocol version mismatch">
    </testcase>
    <testcase name="testing ClientTCP_transport should connect and forward subsequent message chunks after a valid HEL/ACK transaction" time="0.0060" classname="should connect and forward subsequent message chunks after a valid HEL/ACK transaction">
    </testcase>
    <testcase name="testing ClientTCP_transport should close the socket and emit a close event when disconnect() is called" time="0.0040" classname="should close the socket and emit a close event when disconnect() is called">
    </testcase>
    <testcase name="testing ClientTCP_transport should dispose the socket and emit a close event when socket is closed by the other end" time="0.0250" classname="should dispose the socket and emit a close event when socket is closed by the other end">
    </testcase>
    <testcase name="testing ClientTCP_transport should returns an error if url has invalid port" time="0.0090" classname="should returns an error if url has invalid port">
    </testcase>
  </testsuite>
  <testsuite name="Testing behavior of  SocketTransport  to emulate client/server communication in tests" timestamp="2021-02-09T07:13:25" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-transport\test\test_fake_socket.js" time="0.0050" failures="0">
    <testcase name="Testing behavior of  SocketTransport  to emulate client/server communication in tests server side should receive data send by the client only" time="0.0010" classname="server side should receive data send by the client only">
    </testcase>
    <testcase name="Testing behavior of  SocketTransport  to emulate client/server communication in tests client side should receive data send by the server only" time="0.0000" classname="client side should receive data send by the server only">
    </testcase>
    <testcase name="Testing behavior of  SocketTransport  to emulate client/server communication in tests server side should receive &apos;end&apos; event when connection ends  on the client side" time="0.0010" classname="server side should receive &apos;end&apos; event when connection ends  on the client side">
    </testcase>
    <testcase name="Testing behavior of  SocketTransport  to emulate client/server communication in tests client side should receive &apos;end&apos; event when connection ends  on the server side" time="0.0020" classname="client side should receive &apos;end&apos; event when connection ends  on the server side">
    </testcase>
    <testcase name="Testing behavior of  SocketTransport  to emulate client/server communication in tests client side should receive &apos;end&apos; event when connection ends  on the client side" time="0.0010" classname="client side should receive &apos;end&apos; event when connection ends  on the client side">
    </testcase>
    <testcase name="Testing behavior of  SocketTransport  to emulate client/server communication in tests server side should receive &apos;end&apos; event when connection ends  on the server side" time="0.0000" classname="server side should receive &apos;end&apos; event when connection ends  on the server side">
    </testcase>
  </testsuite>
  <testsuite name="Testing behavior of  DirectTransport  to emulate client/server communication in tests" timestamp="2021-02-09T07:13:25" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-transport\test\test_fake_socket.js" time="0.0000" failures="0">
    <testcase name="Testing behavior of  DirectTransport  to emulate client/server communication in tests server side should receive data send by the client only" time="0.0000" classname="server side should receive data send by the client only">
    </testcase>
    <testcase name="Testing behavior of  DirectTransport  to emulate client/server communication in tests client side should receive data send by the server only" time="0.0000" classname="client side should receive data send by the server only">
    </testcase>
    <testcase name="Testing behavior of  DirectTransport  to emulate client/server communication in tests server side should receive &apos;end&apos; event when connection ends  on the client side" time="0.0000" classname="server side should receive &apos;end&apos; event when connection ends  on the client side">
    </testcase>
    <testcase name="Testing behavior of  DirectTransport  to emulate client/server communication in tests client side should receive &apos;end&apos; event when connection ends  on the server side" time="0.0000" classname="client side should receive &apos;end&apos; event when connection ends  on the server side">
    </testcase>
    <testcase name="Testing behavior of  DirectTransport  to emulate client/server communication in tests client side should receive &apos;end&apos; event when connection ends  on the client side" time="0.0000" classname="client side should receive &apos;end&apos; event when connection ends  on the client side">
    </testcase>
    <testcase name="Testing behavior of  DirectTransport  to emulate client/server communication in tests server side should receive &apos;end&apos; event when connection ends  on the server side" time="0.0000" classname="server side should receive &apos;end&apos; event when connection ends  on the server side">
    </testcase>
  </testsuite>
  <testsuite name="MessageBuilderBase" timestamp="2021-02-09T07:13:25" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-transport\test\test_message_builder_base.js" time="0.0000" failures="0">
    <testcase name="MessageBuilderBase should assemble a message body composed of a single chunk " time="0.0000" classname="should assemble a message body composed of a single chunk ">
    </testcase>
    <testcase name="MessageBuilderBase should assemble a message body composed of a two chunks " time="0.0000" classname="should assemble a message body composed of a two chunks ">
    </testcase>
  </testsuite>
  <testsuite name="testing message encoding and decoding" timestamp="2021-02-09T07:13:25" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-transport\test\test_message_encoding.js" time="0.0000" failures="0">
    <testcase name="testing message encoding and decoding should encode and decode HelloMessage " time="0.0000" classname="should encode and decode HelloMessage ">
    </testcase>
  </testsuite>
  <testsuite name="testing parseEndpointUrl" timestamp="2021-02-09T07:13:25" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-transport\test\test_parseEndpointUrl.js" time="0.0020" failures="0">
    <testcase name="testing parseEndpointUrl should parse a endpoint " time="0.0000" classname="should parse a endpoint ">
    </testcase>
    <testcase name="testing parseEndpointUrl should parse this endpoint as well" time="0.0000" classname="should parse this endpoint as well">
    </testcase>
    <testcase name="testing parseEndpointUrl should parse this endpoint as well" time="0.0000" classname="should parse this endpoint as well">
    </testcase>
    <testcase name="testing parseEndpointUrl should raise an exception if Endpoint URL is malformed" time="0.0000" classname="should raise an exception if Endpoint URL is malformed">
    </testcase>
    <testcase name="testing parseEndpointUrl should parse a url containing a username and password" time="0.0020" classname="should parse a url containing a username and password">
    </testcase>
  </testsuite>
  <testsuite name="testing ServerTCP_transport" timestamp="2021-02-09T07:13:25" tests="10" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-transport\test\test_server_tcp_transport.js" time="3.0190" failures="0">
    <testcase name="testing ServerTCP_transport should close the communication if the client initiates the communication with a message which is not HEL" time="1.0030" classname="should close the communication if the client initiates the communication with a message which is not HEL">
    </testcase>
    <testcase name="testing ServerTCP_transport should bind a socket and process the HEL message by returning ACK" time="0.0010" classname="should bind a socket and process the HEL message by returning ACK">
    </testcase>
    <testcase name="testing ServerTCP_transport should bind a socket and process the HEL message by returning ERR if protocol version is not OK" time="1.0070" classname="should bind a socket and process the HEL message by returning ERR if protocol version is not OK">
    </testcase>
    <testcase name="testing ServerTCP_transport should bind a socket, process the HEL message and forward subsequent messageChunk" time="0.0010" classname="should bind a socket, process the HEL message and forward subsequent messageChunk">
    </testcase>
    <testcase name="testing ServerTCP_transport should handle HEL message broken in two chunks (bug#36)" time="0.0000" classname="should handle HEL message broken in two chunks (bug#36)">
    </testcase>
    <testcase name="testing ServerTCP_transport should handle broken HEL message in three chunks (bug#36)" time="0.0000" classname="should handle broken HEL message in three chunks (bug#36)">
    </testcase>
    <testcase name="testing ServerTCP_transport should handle broken HEL message in many small chunks (bug#36)" time="0.0000" classname="should handle broken HEL message in many small chunks (bug#36)">
    </testcase>
    <testcase name="testing ServerTCP_transport WXWX1 (issue#504)  server transport accept bufferSize greater than 8192 byes" time="0.0010" classname="WXWX1 (issue#504)  server transport accept bufferSize greater than 8192 byes">
    </testcase>
    <testcase name="testing ServerTCP_transport WXWX2 (issue#504) server transport should not accept bufferSize lower than 8192 byes" time="1.0050" classname="WXWX2 (issue#504) server transport should not accept bufferSize lower than 8192 byes">
    </testcase>
    <testcase name="testing ServerTCP_transport Test CLO message at transport end " time="0.0010" classname="Test CLO message at transport end ">
    </testcase>
  </testsuite>
  <testsuite name="Issue 688" timestamp="2021-02-09T07:13:28" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-types\test\test_issue688.js" time="0.0000" failures="0">
    <testcase name="Issue 688 should throw an exception when arguement of ReadValueId are invalid" time="0.0000" classname="should throw an exception when arguement of ReadValueId are invalid">
    </testcase>
    <testcase name="Issue 688 should coerce a ReadValueId" time="0.0000" classname="should coerce a ReadValueId">
    </testcase>
  </testsuite>
  <testsuite name="Testing node-opcua-test" timestamp="2021-02-09T07:13:28" tests="2" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-types\test\test_types.ts" time="0.0010" failures="0">
    <testcase name="Testing node-opcua-test AxisInformation" time="0.0010" classname="AxisInformation">
    </testcase>
    <testcase name="Testing node-opcua-test AxisInformation" time="0.0000" classname="AxisInformation">
    </testcase>
  </testsuite>
  <testsuite name="buffer_ellipsis" timestamp="2021-02-09T07:13:28" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-utils\test\test_buffer_ellipsis.js" time="0.0000" failures="0">
    <testcase name="buffer_ellipsis should create a buffer ellipse" time="0.0000" classname="should create a buffer ellipse">
    </testcase>
    <testcase name="buffer_ellipsis should create a buffer ellipse" time="0.0000" classname="should create a buffer ellipse">
    </testcase>
    <testcase name="buffer_ellipsis should create a buffer ellipse" time="0.0000" classname="should create a buffer ellipse">
    </testcase>
  </testsuite>
  <testsuite name="testing getFunctionParameterNames" timestamp="2021-02-09T07:13:28" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-utils\test\test_getFunctionParameterNames.js" time="0.0010" failures="0">
    <testcase name="testing getFunctionParameterNames #getFunctionParameterNames" time="0.0010" classname="#getFunctionParameterNames">
    </testcase>
  </testsuite>
  <testsuite name="replaceBufferWithHexDump" timestamp="2021-02-09T07:13:28" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-utils\test\test_replace_buffer_with_hex_dump.js" time="0.0010" failures="0">
    <testcase name="replaceBufferWithHexDump replaceBufferWithHexDump" time="0.0010" classname="replaceBufferWithHexDump">
    </testcase>
  </testsuite>
  <testsuite name="string_utils" timestamp="2021-02-09T07:13:28" tests="0" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-utils\test\test_string_utils.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="capitalizeFirstLetter" timestamp="2021-02-09T07:13:28" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-utils\test\test_string_utils.js" time="0.0020" failures="0">
    <testcase name="string_utils capitalizeFirstLetter should capitalize a lowercased first letter" time="0.0010" classname="should capitalize a lowercased first letter">
    </testcase>
    <testcase name="string_utils capitalizeFirstLetter should keep a capitalized first letter capitalized" time="0.0000" classname="should keep a capitalized first letter capitalized">
    </testcase>
    <testcase name="string_utils capitalizeFirstLetter should handle nulls" time="0.0010" classname="should handle nulls">
    </testcase>
  </testsuite>
  <testsuite name="lowerFirstLetter" timestamp="2021-02-09T07:13:28" tests="17" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-utils\test\test_string_utils.js" time="0.0010" failures="0">
    <testcase name="string_utils lowerFirstLetter should lowercase a capitalized first letter" time="0.0000" classname="should lowercase a capitalized first letter">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should keep a lowercased first letter lowercased" time="0.0000" classname="should keep a lowercased first letter lowercased">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should handle nulls" time="0.0000" classname="should handle nulls">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter HelloWorld -&gt; helloWorld" time="0.0000" classname="should lowerFirstLetter HelloWorld -&gt; helloWorld">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter XAxis -&gt; xAxis" time="0.0000" classname="should lowerFirstLetter XAxis -&gt; xAxis">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter EURange -&gt; euRange" time="0.0000" classname="should lowerFirstLetter EURange -&gt; euRange">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter DATE -&gt; DATE" time="0.0000" classname="should lowerFirstLetter DATE -&gt; DATE">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter XYZ -&gt; XYZ" time="0.0010" classname="should lowerFirstLetter XYZ -&gt; XYZ">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter AB -&gt; AB" time="0.0000" classname="should lowerFirstLetter AB -&gt; AB">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter Ab -&gt; ab" time="0.0000" classname="should lowerFirstLetter Ab -&gt; ab">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter A -&gt; a" time="0.0000" classname="should lowerFirstLetter A -&gt; a">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter T1ABC8 -&gt; T1ABC8" time="0.0000" classname="should lowerFirstLetter T1ABC8 -&gt; T1ABC8">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter F_ABC_D -&gt; F_ABC_D" time="0.0000" classname="should lowerFirstLetter F_ABC_D -&gt; F_ABC_D">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter ALM_Timeout -&gt; ALM_timeout" time="0.0000" classname="should lowerFirstLetter ALM_Timeout -&gt; ALM_timeout">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter SV_GasOn -&gt; SV_gasOn" time="0.0000" classname="should lowerFirstLetter SV_GasOn -&gt; SV_gasOn">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter DI_VAL_FlowImpl -&gt; DI_VAL_flowImpl" time="0.0000" classname="should lowerFirstLetter DI_VAL_FlowImpl -&gt; DI_VAL_flowImpl">
    </testcase>
    <testcase name="string_utils lowerFirstLetter should lowerFirstLetter XRange-&gt;xRange" time="0.0000" classname="should lowerFirstLetter XRange-&gt;xRange">
    </testcase>
  </testsuite>
  <testsuite name="watch dog" timestamp="2021-02-09T07:13:28" tests="9" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-utils\test\test_watchdog.js" time="0.0070" failures="0">
    <testcase name="watch dog should maintain a subscriber count" time="0.0000" classname="should maintain a subscriber count">
    </testcase>
    <testcase name="watch dog should not have a timer running if no subscriber" time="0.0000" classname="should not have a timer running if no subscriber">
    </testcase>
    <testcase name="watch dog should have the internal timer running after the first subscriber has registered" time="0.0000" classname="should have the internal timer running after the first subscriber has registered">
    </testcase>
    <testcase name="watch dog should stop the internal timer running after the last subscriber has unregistered" time="0.0000" classname="should stop the internal timer running after the last subscriber has unregistered">
    </testcase>
    <testcase name="watch dog should fail if the object subscribing to the WatchDog doesn&apos;t provide a &apos;watchdogReset&apos; method" time="0.0010" classname="should fail if the object subscribing to the WatchDog doesn&apos;t provide a &apos;watchdogReset&apos; method">
    </testcase>
    <testcase name="watch dog should install a &apos;keepAlive&apos; method on  the subscribing object during addSubscriber and remove it during removeSubscriber" time="0.0010" classname="should install a &apos;keepAlive&apos; method on  the subscribing object during addSubscriber and remove it during removeSubscriber">
    </testcase>
    <testcase name="watch dog should call the watchdogReset method of a subscriber when timeout has expired" time="0.0010" classname="should call the watchdogReset method of a subscriber when timeout has expired">
    </testcase>
    <testcase name="watch dog should visit subscribers on a regular basis" time="0.0030" classname="should visit subscribers on a regular basis">
    </testcase>
    <testcase name="watch dog should emit an event when it finds that some subscriber has reached the timeout period without sending a keepAlive signal" time="0.0010" classname="should emit an event when it finds that some subscriber has reached the timeout period without sending a keepAlive signal">
    </testcase>
  </testsuite>
  <testsuite name="method #adjustVariant" timestamp="2021-02-09T07:13:28" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_adjust_variant.ts" time="0.0030" failures="0">
    <testcase name="method #adjustVariant should adjust a Scalar/ByteString to a Byte/Array" time="0.0010" classname="should adjust a Scalar/ByteString to a Byte/Array">
    </testcase>
    <testcase name="method #adjustVariant should not adjust Scalar/ByteString to a Byte/Array when not required" time="0.0010" classname="should not adjust Scalar/ByteString to a Byte/Array when not required">
    </testcase>
    <testcase name="method #adjustVariant should adjust a  Byte/Array to Scalar/ByteString" time="0.0010" classname="should adjust a  Byte/Array to Scalar/ByteString">
    </testcase>
    <testcase name="method #adjustVariant should not adjust a  Byte/Array to Scalar/ByteString when not required" time="0.0000" classname="should not adjust a  Byte/Array to Scalar/ByteString when not required">
    </testcase>
  </testsuite>
  <testsuite name="Variant" timestamp="2021-02-09T07:13:28" tests="29" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.0360" failures="0">
    <testcase name="Variant should create a empty Variant" time="0.0010" classname="should create a empty Variant">
    </testcase>
    <testcase name="Variant should create a Scalar UInt32 Variant" time="0.0030" classname="should create a Scalar UInt32 Variant">
    </testcase>
    <testcase name="Variant should create a Scalar UInt64 Variant" time="0.0010" classname="should create a Scalar UInt64 Variant">
    </testcase>
    <testcase name="Variant should create a Scalar LocalizedText Variant 1/2" time="0.0010" classname="should create a Scalar LocalizedText Variant 1/2">
    </testcase>
    <testcase name="Variant should create a Scalar LocalizedText Variant 2/2" time="0.0010" classname="should create a Scalar LocalizedText Variant 2/2">
    </testcase>
    <testcase name="Variant should create a Scalar QualifiedName Variant 1/2" time="0.0020" classname="should create a Scalar QualifiedName Variant 1/2">
    </testcase>
    <testcase name="Variant should create a Scalar QualifiedName Variant 2/2" time="0.0020" classname="should create a Scalar QualifiedName Variant 2/2">
    </testcase>
    <testcase name="Variant should create a Scalar Date Variant" time="0.0020" classname="should create a Scalar Date Variant">
    </testcase>
    <testcase name="Variant should create a Scalar ByteString  Variant - null" time="0.0010" classname="should create a Scalar ByteString  Variant - null">
    </testcase>
    <testcase name="Variant should create a Scalar ByteString  Variant - empty buffer" time="0.0010" classname="should create a Scalar ByteString  Variant - empty buffer">
    </testcase>
    <testcase name="Variant should create a Scalar ByteString  Variant - 3 bytes" time="0.0010" classname="should create a Scalar ByteString  Variant - 3 bytes">
    </testcase>
    <testcase name="Variant should create a Scalar String  Variant" time="0.0010" classname="should create a Scalar String  Variant">
    </testcase>
    <testcase name="Variant should create a empty Array String Variant" time="0.0010" classname="should create a empty Array String Variant">
    </testcase>
    <testcase name="Variant should create a Array String Variant" time="0.0010" classname="should create a Array String Variant">
    </testcase>
    <testcase name="Variant should create a Array QualifiedName Variant" time="0.0010" classname="should create a Array QualifiedName Variant">
    </testcase>
    <testcase name="Variant should create a Array of GUID Variant" time="0.0000" classname="should create a Array of GUID Variant">
    </testcase>
    <testcase name="Variant should detect invalid SByte Variant" time="0.0010" classname="should detect invalid SByte Variant">
    </testcase>
    <testcase name="Variant should detect invalid Array&lt;Int32&gt; Variant" time="0.0000" classname="should detect invalid Array&lt;Int32&gt; Variant">
    </testcase>
    <testcase name="Variant should create a Variant as a Matrix (2x3) of UInt32 - Matrix given as a flat array" time="0.0020" classname="should create a Variant as a Matrix (2x3) of UInt32 - Matrix given as a flat array">
    </testcase>
    <testcase name="Variant should create a Variant as a Matrix (empty) of UInt32 (edge case)" time="0.0010" classname="should create a Variant as a Matrix (empty) of UInt32 (edge case)">
    </testcase>
    <testcase name="Variant should raise an exception when construction a Matrix with incorrect element size" time="0.0010" classname="should raise an exception when construction a Matrix with incorrect element size">
    </testcase>
    <testcase name="Variant should create a Array of ByteString Variant " time="0.0030" classname="should create a Array of ByteString Variant ">
    </testcase>
    <testcase name="Variant should create a Array UInt64 Variant" time="0.0010" classname="should create a Array UInt64 Variant">
    </testcase>
    <testcase name="Variant should create a Array of ByteString Variant" time="0.0000" classname="should create a Array of ByteString Variant">
    </testcase>
    <testcase name="Variant should create a Array of string" time="0.0010" classname="should create a Array of string">
    </testcase>
    <testcase name="Variant should create a Array of string with unicode characters" time="0.0020" classname="should create a Array of string with unicode characters">
    </testcase>
    <testcase name="Variant should create a Matrix of Int16" time="0.0030" classname="should create a Matrix of Int16">
    </testcase>
    <testcase name="Variant should create a Matrix of strings" time="0.0010" classname="should create a Matrix of strings">
    </testcase>
  </testsuite>
  <testsuite name="Variant - Analyser" timestamp="2021-02-09T07:13:28" tests="6" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="2.0730" failures="0">
    <testcase name="Variant - Analyser should analyze variant" time="0.0120" classname="should analyze variant">
    </testcase>
    <testcase name="Variant - Analyser ZZ1 should encode/decode variant" time="0.0000" classname="ZZ1 should encode/decode variant">
    </testcase>
    <testcase name="Variant - Analyser should encode/decode variant" time="0.0310" classname="should encode/decode variant">
    </testcase>
    <testcase name="Variant - Analyser should encode/decode a very large array of Float - 1" time="0.0760" classname="should encode/decode a very large array of Float - 1">
    </testcase>
    <testcase name="Variant - Analyser should encode/decode a very large array of Float" time="1.9270" classname="should encode/decode a very large array of Float">
    </testcase>
    <testcase name="Variant - Analyser should check the performance of encode/decode a very large array of Float" time="0.0270" classname="should check the performance of encode/decode a very large array of Float">
    </testcase>
  </testsuite>
  <testsuite name="benchmarking variant encode" timestamp="2021-02-09T07:13:31" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="benchmarking float Array encode/decode" timestamp="2021-02-09T07:13:31" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.8280" failures="0">
    <testcase name="benchmarking float Array encode/decode should check which is the faster way to encode decode a float" time="0.8280" classname="should check which is the faster way to encode decode a float">
    </testcase>
  </testsuite>
  <testsuite name="Variant with Advanced Array" timestamp="2021-02-09T07:13:32" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.0160" failures="0">
    <testcase name="Variant with Advanced Array should automatically detect that variant is an array when ArrayType is missing " time="0.0090" classname="should automatically detect that variant is an array when ArrayType is missing ">
    </testcase>
    <testcase name="Variant with Advanced Array should be possible to handle an Float array  with a Float32Array" time="0.0020" classname="should be possible to handle an Float array  with a Float32Array">
    </testcase>
    <testcase name="Variant with Advanced Array should be possible to encode/decode an subarray of Float32Array" time="0.0010" classname="should be possible to encode/decode an subarray of Float32Array">
    </testcase>
    <testcase name="Variant with Advanced Array should be possible to read a sub matrix of a array of byte strings" time="0.0010" classname="should be possible to read a sub matrix of a array of byte strings">
    </testcase>
    <testcase name="Variant with Advanced Array AA should be possible to read a sub matrix of a matrix of double" time="0.0030" classname="AA should be possible to read a sub matrix of a matrix of double">
    </testcase>
  </testsuite>
  <testsuite name="Variant with enumeration" timestamp="2021-02-09T07:13:32" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.0040" failures="0">
    <testcase name="Variant with enumeration should fail to create a variant from a enumeration item if dataType is not Int32" time="0.0020" classname="should fail to create a variant from a enumeration item if dataType is not Int32">
    </testcase>
    <testcase name="Variant with enumeration should create a variant from a enumeration item" time="0.0010" classname="should create a variant from a enumeration item">
    </testcase>
    <testcase name="Variant with enumeration should create a variant with builtin type &apos;Duration&apos;" time="0.0000" classname="should create a variant with builtin type &apos;Duration&apos;">
    </testcase>
    <testcase name="Variant with enumeration should create a variant with builtin type &apos;ByteString&apos;" time="0.0000" classname="should create a variant with builtin type &apos;ByteString&apos;">
    </testcase>
    <testcase name="Variant with enumeration should create a variant copy (with it&apos;s own array) " time="0.0000" classname="should create a variant copy (with it&apos;s own array) ">
    </testcase>
    <testcase name="Variant with enumeration should create a Extension object variant as a copy of " time="0.0000" classname="should create a Extension object variant as a copy of ">
    </testcase>
    <testcase name="Variant with enumeration should create a Extension object Array  variant as a copy of " time="0.0010" classname="should create a Extension object Array  variant as a copy of ">
    </testcase>
  </testsuite>
  <testsuite name="testing sameVariant Performance" timestamp="2021-02-09T07:13:32" tests="31" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.0340" failures="0">
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;String&gt;, null)" time="0.0010" classname="#sameVariant with Variant(Array&lt;String&gt;, null)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;UInt32&gt;, null)" time="0.0000" classname="#sameVariant with Variant(Array&lt;UInt32&gt;, null)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;String&gt;, value: Hello)" time="0.0020" classname="#sameVariant with Variant(Scalar&lt;String&gt;, value: Hello)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;String&gt;, value: HelloWorld)" time="0.0010" classname="#sameVariant with Variant(Scalar&lt;String&gt;, value: HelloWorld)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;Double&gt;, value: 42)" time="0.0010" classname="#sameVariant with Variant(Scalar&lt;Double&gt;, value: 42)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;Float&gt;, value: 42)" time="0.0010" classname="#sameVariant with Variant(Scalar&lt;Float&gt;, value: 42)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;Int32&gt;, value: 42)" time="0.0000" classname="#sameVariant with Variant(Scalar&lt;Int32&gt;, value: 42)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;UInt32&gt;, value: 42)" time="0.0020" classname="#sameVariant with Variant(Scalar&lt;UInt32&gt;, value: 42)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;Double&gt;, value: 43)" time="0.0000" classname="#sameVariant with Variant(Scalar&lt;Double&gt;, value: 43)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;Float&gt;, value: 43)" time="0.0010" classname="#sameVariant with Variant(Scalar&lt;Float&gt;, value: 43)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;Int32&gt;, value: 43)" time="0.0010" classname="#sameVariant with Variant(Scalar&lt;Int32&gt;, value: 43)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;UInt32&gt;, value: 43)" time="0.0000" classname="#sameVariant with Variant(Scalar&lt;UInt32&gt;, value: 43)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;UInt64&gt;, value: 43,100)" time="0.0000" classname="#sameVariant with Variant(Scalar&lt;UInt64&gt;, value: 43,100)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;Int64&gt;, value: 43,1000)" time="0.0010" classname="#sameVariant with Variant(Scalar&lt;Int64&gt;, value: 43,1000)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;String&gt;, l= 2, value=[Hello,World])" time="0.0010" classname="#sameVariant with Variant(Array&lt;String&gt;, l= 2, value=[Hello,World])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;Double&gt;, l= 2, value=[42,43])" time="0.0010" classname="#sameVariant with Variant(Array&lt;Double&gt;, l= 2, value=[42,43])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;Float&gt;, l= 2, value=[42,43])" time="0.0020" classname="#sameVariant with Variant(Array&lt;Float&gt;, l= 2, value=[42,43])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;Int32&gt;, l= 2, value=[42,43])" time="0.0010" classname="#sameVariant with Variant(Array&lt;Int32&gt;, l= 2, value=[42,43])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;UInt32&gt;, l= 2, value=[42,43])" time="0.0010" classname="#sameVariant with Variant(Array&lt;UInt32&gt;, l= 2, value=[42,43])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;Double&gt;, l= 2, value=[43,43])" time="0.0030" classname="#sameVariant with Variant(Array&lt;Double&gt;, l= 2, value=[43,43])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;Float&gt;, l= 2, value=[43,43])" time="0.0020" classname="#sameVariant with Variant(Array&lt;Float&gt;, l= 2, value=[43,43])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;Int32&gt;, l= 2, value=[43,43])" time="0.0010" classname="#sameVariant with Variant(Array&lt;Int32&gt;, l= 2, value=[43,43])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;UInt32&gt;, l= 2, value=[43,43])" time="0.0010" classname="#sameVariant with Variant(Array&lt;UInt32&gt;, l= 2, value=[43,43])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;Int32&gt;, l= 16, value=[43,43,1,2,3,4,5,6,7,8,...])" time="0.0010" classname="#sameVariant with Variant(Array&lt;Int32&gt;, l= 16, value=[43,43,1,2,3,4,5,6,7,8,...])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;Int32&gt;, l= 16, value=[43,43,1,2,3,4,5,6,7,8,...])" time="0.0010" classname="#sameVariant with Variant(Array&lt;Int32&gt;, l= 16, value=[43,43,1,2,3,4,5,6,7,8,...])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;Int32&gt;, l= 10000, value=[8308,8548,4998,8013,262,1364,7598,6416,2205,3488,...])" time="0.0020" classname="#sameVariant with Variant(Array&lt;Int32&gt;, l= 10000, value=[8308,8548,4998,8013,262,1364,7598,6416,2205,3488,...])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;UInt64&gt;, l= 2, value=[44,888,43,100])" time="0.0010" classname="#sameVariant with Variant(Array&lt;UInt64&gt;, l= 2, value=[44,888,43,100])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Array&lt;Int64&gt;, l= 2, value=[44,888,43,100])" time="0.0010" classname="#sameVariant with Variant(Array&lt;Int64&gt;, l= 2, value=[44,888,43,100])">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with Variant(Scalar&lt;ExtensionObject&gt;, value: &lt;null&gt;)" time="0.0010" classname="#sameVariant with Variant(Scalar&lt;ExtensionObject&gt;, value: &lt;null&gt;)">
    </testcase>
    <testcase name="testing sameVariant Performance #sameVariant with null" time="0.0010" classname="#sameVariant with null">
    </testcase>
    <testcase name="testing sameVariant Performance sameVariant should be very efficient " time="0.0020" classname="sameVariant should be very efficient ">
    </testcase>
  </testsuite>
  <testsuite name="testing variant Clone &amp; Copy Construct" timestamp="2021-02-09T07:13:35" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.0020" failures="0">
    <testcase name="testing variant Clone &amp; Copy Construct should copy construct a simple variant" time="0.0010" classname="should copy construct a simple variant">
    </testcase>
    <testcase name="testing variant Clone &amp; Copy Construct should copy construct a variant array" time="0.0000" classname="should copy construct a variant array">
    </testcase>
    <testcase name="testing variant Clone &amp; Copy Construct should copy construct a variant containing a extension object" time="0.0000" classname="should copy construct a variant containing a extension object">
    </testcase>
    <testcase name="testing variant Clone &amp; Copy Construct should copy construct a variant containing a extension object array" time="0.0000" classname="should copy construct a variant containing a extension object array">
    </testcase>
    <testcase name="testing variant Clone &amp; Copy Construct should clone a simple variant" time="0.0010" classname="should clone a simple variant">
    </testcase>
    <testcase name="testing variant Clone &amp; Copy Construct should clone a variant array" time="0.0000" classname="should clone a variant array">
    </testcase>
    <testcase name="testing variant Clone &amp; Copy Construct should clone a variant containing a extension object" time="0.0000" classname="should clone a variant containing a extension object">
    </testcase>
    <testcase name="testing variant Clone &amp; Copy Construct should clone a variant containing a extension object array" time="0.0000" classname="should clone a variant containing a extension object array">
    </testcase>
  </testsuite>
  <testsuite name="miscellaneous Variant tests" timestamp="2021-02-09T07:13:35" tests="7" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.0010" failures="0">
    <testcase name="miscellaneous Variant tests toString on Variant Null" time="0.0000" classname="toString on Variant Null">
    </testcase>
    <testcase name="miscellaneous Variant tests toString on Variant Date" time="0.0000" classname="toString on Variant Date">
    </testcase>
    <testcase name="miscellaneous Variant tests toString on Variant boolean" time="0.0000" classname="toString on Variant boolean">
    </testcase>
    <testcase name="miscellaneous Variant tests toString on Variant ByteString" time="0.0000" classname="toString on Variant ByteString">
    </testcase>
    <testcase name="miscellaneous Variant tests coerceVariantType on EnumerationItem" time="0.0010" classname="coerceVariantType on EnumerationItem">
    </testcase>
    <testcase name="miscellaneous Variant tests decodeVariant" time="0.0000" classname="decodeVariant">
    </testcase>
    <testcase name="miscellaneous Variant tests coerce" time="0.0000" classname="coerce">
    </testcase>
  </testsuite>
  <testsuite name="testing variant JSON conversion" timestamp="2021-02-09T07:13:35" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.0040" failures="0">
    <testcase name="testing variant JSON conversion should produce the expected output when converting Variant to JSON" time="0.0010" classname="should produce the expected output when converting Variant to JSON">
    </testcase>
    <testcase name="testing variant JSON conversion should construct a Variant from a JSON string generated by a Variant" time="0.0010" classname="should construct a Variant from a JSON string generated by a Variant">
    </testcase>
    <testcase name="testing variant JSON conversion should convert a Variant with ExtensionObject Array to JSON" time="0.0010" classname="should convert a Variant with ExtensionObject Array to JSON">
    </testcase>
    <testcase name="testing variant JSON conversion should convert a Variant with ExtensionObject to JSON" time="0.0010" classname="should convert a Variant with ExtensionObject to JSON">
    </testcase>
    <testcase name="testing variant JSON conversion dimensions shall be set to null if not specified " time="0.0000" classname="dimensions shall be set to null if not specified ">
    </testcase>
  </testsuite>
  <testsuite name="testing isValidVariant" timestamp="2021-02-09T07:13:35" tests="8" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.0010" failures="0">
    <testcase name="testing isValidVariant isValidVariant with scalar" time="0.0000" classname="isValidVariant with scalar">
    </testcase>
    <testcase name="testing isValidVariant isValidVariant with Array" time="0.0010" classname="isValidVariant with Array">
    </testcase>
    <testcase name="testing isValidVariant isValidVariant with Matrix" time="0.0000" classname="isValidVariant with Matrix">
    </testcase>
    <testcase name="testing isValidVariant variantToString 1" time="0.0000" classname="variantToString 1">
    </testcase>
    <testcase name="testing isValidVariant variantToString 2" time="0.0000" classname="variantToString 2">
    </testcase>
    <testcase name="testing isValidVariant variantToString 3" time="0.0000" classname="variantToString 3">
    </testcase>
    <testcase name="testing isValidVariant variantToString 4" time="0.0000" classname="variantToString 4">
    </testcase>
    <testcase name="testing isValidVariant variantToString 5" time="0.0000" classname="variantToString 5">
    </testcase>
  </testsuite>
  <testsuite name="Preserving  null in Arrays or Matrices" timestamp="2021-02-09T07:13:35" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant.js" time="0.0000" failures="0">
    <testcase name="Preserving  null in Arrays or Matrices it should preserve empty array ... String" time="0.0000" classname="it should preserve empty array ... String">
    </testcase>
    <testcase name="Preserving  null in Arrays or Matrices it should preserve null array ... String" time="0.0000" classname="it should preserve null array ... String">
    </testcase>
    <testcase name="Preserving  null in Arrays or Matrices it should preserve empty array ... UInt32 " time="0.0000" classname="it should preserve empty array ... UInt32 ">
    </testcase>
    <testcase name="Preserving  null in Arrays or Matrices it should preserve null array ... UInt32" time="0.0000" classname="it should preserve null array ... UInt32">
    </testcase>
  </testsuite>
  <testsuite name="testing return sameVariant for pull request" timestamp="2021-02-09T07:13:35" tests="98" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-variant\test\test_variant_sameVariant.js" time="0.0120" failures="0">
    <testcase name="testing return sameVariant for pull request testing same variants of type Boolean" time="0.0000" classname="testing same variants of type Boolean">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Boolean" time="0.0000" classname="testing different variants of type Boolean">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Boolean array" time="0.0000" classname="testing same variants of type Boolean array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Boolean array" time="0.0000" classname="testing different variants of type Boolean array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Boolean matrix" time="0.0000" classname="testing same variants of type Boolean matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Boolean matrix" time="0.0000" classname="testing different variants of type Boolean matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Boolean matrix different dimension, same size" time="0.0000" classname="testing different variants of type Boolean matrix different dimension, same size">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Byte" time="0.0000" classname="testing same variants of type Byte">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Byte" time="0.0000" classname="testing different variants of type Byte">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Byte array" time="0.0000" classname="testing same variants of type Byte array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Byte array" time="0.0000" classname="testing different variants of type Byte array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Byte matrix" time="0.0000" classname="testing same variants of type Byte matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Byte matrix" time="0.0000" classname="testing different variants of type Byte matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type SByte" time="0.0000" classname="testing same variants of type SByte">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type SByte" time="0.0010" classname="testing different variants of type SByte">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type SByte array" time="0.0000" classname="testing same variants of type SByte array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type SByte array" time="0.0000" classname="testing different variants of type SByte array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type SByte matrix" time="0.0000" classname="testing same variants of type SByte matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type SByte matrix" time="0.0000" classname="testing different variants of type SByte matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Int16" time="0.0000" classname="testing same variants of type Int16">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Int16" time="0.0000" classname="testing different variants of type Int16">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Int16 array" time="0.0000" classname="testing same variants of type Int16 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Int16 array" time="0.0000" classname="testing different variants of type Int16 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Int16 matrix" time="0.0010" classname="testing same variants of type Int16 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Int16 matrix" time="0.0000" classname="testing different variants of type Int16 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Int32" time="0.0000" classname="testing same variants of type Int32">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Int32" time="0.0000" classname="testing different variants of type Int32">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Int32 array" time="0.0000" classname="testing same variants of type Int32 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Int32 array" time="0.0000" classname="testing different variants of type Int32 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Int32 matrix" time="0.0000" classname="testing same variants of type Int32 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Int32 matrix" time="0.0000" classname="testing different variants of type Int32 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Int64" time="0.0000" classname="testing same variants of type Int64">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Int64" time="0.0010" classname="testing different variants of type Int64">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Int64 array" time="0.0000" classname="testing same variants of type Int64 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Int64 array" time="0.0000" classname="testing different variants of type Int64 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Int64 matrix" time="0.0000" classname="testing same variants of type Int64 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Int64 matrix" time="0.0000" classname="testing different variants of type Int64 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type UInt16" time="0.0000" classname="testing same variants of type UInt16">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type UInt16" time="0.0000" classname="testing different variants of type UInt16">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type UInt16 array" time="0.0000" classname="testing same variants of type UInt16 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type UInt16 array" time="0.0000" classname="testing different variants of type UInt16 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type UInt16 matrix" time="0.0010" classname="testing same variants of type UInt16 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type UInt16 matrix" time="0.0000" classname="testing different variants of type UInt16 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type UInt32" time="0.0000" classname="testing same variants of type UInt32">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type UInt32" time="0.0000" classname="testing different variants of type UInt32">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type UInt32 array" time="0.0000" classname="testing same variants of type UInt32 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type UInt32 array" time="0.0000" classname="testing different variants of type UInt32 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type UInt32 matrix" time="0.0000" classname="testing same variants of type UInt32 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type UInt32 matrix" time="0.0000" classname="testing different variants of type UInt32 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type UInt64" time="0.0000" classname="testing same variants of type UInt64">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type UInt64" time="0.0010" classname="testing different variants of type UInt64">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type UInt64 array" time="0.0000" classname="testing same variants of type UInt64 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type UInt64 array" time="0.0000" classname="testing different variants of type UInt64 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type UInt64 matrix" time="0.0000" classname="testing same variants of type UInt64 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type UInt64 matrix" time="0.0000" classname="testing different variants of type UInt64 matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Float" time="0.0000" classname="testing same variants of type Float">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Float" time="0.0000" classname="testing different variants of type Float">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Float array" time="0.0000" classname="testing same variants of type Float array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Float array" time="0.0000" classname="testing different variants of type Float array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Float matrix" time="0.0010" classname="testing same variants of type Float matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Float matrix" time="0.0000" classname="testing different variants of type Float matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Double" time="0.0000" classname="testing same variants of type Double">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Double" time="0.0000" classname="testing different variants of type Double">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Double array" time="0.0000" classname="testing same variants of type Double array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Double array" time="0.0010" classname="testing different variants of type Double array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type Double matrix" time="0.0000" classname="testing same variants of type Double matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type Double matrix" time="0.0010" classname="testing different variants of type Double matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type String" time="0.0000" classname="testing same variants of type String">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type String" time="0.0000" classname="testing different variants of type String">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type String array" time="0.0000" classname="testing same variants of type String array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type String array" time="0.0000" classname="testing different variants of type String array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type String matrix" time="0.0000" classname="testing same variants of type String matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type String matrix" time="0.0010" classname="testing different variants of type String matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type ByteString" time="0.0000" classname="testing same variants of type ByteString">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type ByteString" time="0.0000" classname="testing different variants of type ByteString">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type ByteString array" time="0.0010" classname="testing same variants of type ByteString array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type ByteString array" time="0.0000" classname="testing different variants of type ByteString array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing same variants of type ByteString matrix" time="0.0000" classname="testing same variants of type ByteString matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing different variants of type ByteString matrix" time="0.0000" classname="testing different variants of type ByteString matrix">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing difference variant matrix with different dimension" time="0.0000" classname="testing difference variant matrix with different dimension">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing  variants with empty array" time="0.0000" classname="testing  variants with empty array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing  variants with string array" time="0.0000" classname="testing  variants with string array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing  variants with SByte array" time="0.0000" classname="testing  variants with SByte array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing  variants with Byte array" time="0.0000" classname="testing  variants with Byte array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing  variants with UInt16 array" time="0.0000" classname="testing  variants with UInt16 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing  variants with Int16 array" time="0.0000" classname="testing  variants with Int16 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing  variants with UInt32 array" time="0.0010" classname="testing  variants with UInt32 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing  variants with Int32 array" time="0.0000" classname="testing  variants with Int32 array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing  variants with Float array" time="0.0000" classname="testing  variants with Float array">
    </testcase>
    <testcase name="testing return sameVariant for pull request testing  variants with Double array" time="0.0000" classname="testing  variants with Double array">
    </testcase>
    <testcase name="testing return sameVariant for pull request sameVariant with extension objects - 1" time="0.0000" classname="sameVariant with extension objects - 1">
    </testcase>
    <testcase name="testing return sameVariant for pull request sameVariant with extension objects - 2" time="0.0000" classname="sameVariant with extension objects - 2">
    </testcase>
    <testcase name="testing return sameVariant for pull request sameVariant with extension objects - 3" time="0.0000" classname="sameVariant with extension objects - 3">
    </testcase>
    <testcase name="testing return sameVariant for pull request sameVariant with array of Extension objects - 4" time="0.0000" classname="sameVariant with array of Extension objects - 4">
    </testcase>
    <testcase name="testing return sameVariant for pull request sameVariant with array of Extension objects - 5" time="0.0000" classname="sameVariant with array of Extension objects - 5">
    </testcase>
    <testcase name="testing return sameVariant for pull request sameVariant with array of Extension objects - 6" time="0.0010" classname="sameVariant with array of Extension objects - 6">
    </testcase>
    <testcase name="testing return sameVariant for pull request sameVariant with array of Extension objects - 7" time="0.0000" classname="sameVariant with array of Extension objects - 7">
    </testcase>
    <testcase name="testing return sameVariant for pull request sameVariant with array of Extension objects - 8" time="0.0000" classname="sameVariant with array of Extension objects - 8">
    </testcase>
  </testsuite>
  <testsuite name="Cloning XML Fragment" timestamp="2021-02-09T07:13:35" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-xml2json\test\test_clone_fragment.ts" time="0.0020" failures="0">
    <testcase name="Cloning XML Fragment should clone a fragment" time="0.0020" classname="should clone a fragment">
    </testcase>
  </testsuite>
  <testsuite name="Definition Parser" timestamp="2021-02-09T07:13:35" tests="3" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-xml2json\test\test_definition_parser.ts" time="0.0050" failures="0">
    <testcase name="Definition Parser should parse a definition bloc" time="0.0030" classname="should parse a definition bloc">
    </testcase>
    <testcase name="Definition Parser should parse a definition bloc 2" time="0.0010" classname="should parse a definition bloc 2">
    </testcase>
    <testcase name="Definition Parser should parse a definition bloc 2" time="0.0010" classname="should parse a definition bloc 2">
    </testcase>
  </testsuite>
  <testsuite name="Test ExtensionObject parsing (with definition)" timestamp="2021-02-09T07:13:35" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-xml2json\test\test_extension_object_parser.ts" time="0.0040" failures="0">
    <testcase name="Test ExtensionObject parsing (with definition) should parse a definition node and convert it to a parser" time="0.0040" classname="should parse a definition node and convert it to a parser">
    </testcase>
  </testsuite>
  <testsuite name="XMLToJSON" timestamp="2021-02-09T07:13:35" tests="5" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-xml2json\test\test_xml2json.ts" time="0.1270" failures="0">
    <testcase name="XMLToJSON should parse a simple xml data string" time="0.0020" classname="should parse a simple xml data string">
    </testcase>
    <testcase name="XMLToJSON should parse a UTF8 encoded xml file with a BOM" time="0.1080" classname="should parse a UTF8 encoded xml file with a BOM">
    </testcase>
    <testcase name="XMLToJSON should parse a escaped string" time="0.0170" classname="should parse a escaped string">
    </testcase>
    <testcase name="XMLToJSON should parse a array" time="0.0000" classname="should parse a array">
    </testcase>
    <testcase name="XMLToJSON should parse a array 2" time="0.0000" classname="should parse a array 2">
    </testcase>
  </testsuite>
  <testsuite name="It should parse XML doc into json (deprecated)" timestamp="2021-02-09T07:13:35" tests="4" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua-xml2json\test\test_xml2json_pojo_parser.ts" time="0.0050" failures="0">
    <testcase name="It should parse XML doc into json (deprecated) should parse a simple xml file to json" time="0.0010" classname="should parse a simple xml file to json">
    </testcase>
    <testcase name="It should parse XML doc into json (deprecated) should parse a xml file containing an array to json" time="0.0010" classname="should parse a xml file containing an array to json">
    </testcase>
    <testcase name="It should parse XML doc into json (deprecated) should mix both type of parser" time="0.0010" classname="should mix both type of parser">
    </testcase>
    <testcase name="It should parse XML doc into json (deprecated) loading more complex xml data" time="0.0020" classname="loading more complex xml data">
    </testcase>
  </testsuite>
  <testsuite name="OPCUA" timestamp="2021-02-09T07:13:35" tests="1" file="C:\sterfive\NodeOPCUA\node-opcua\packages\node-opcua\test\test_node-opcua.js" time="0.0040" failures="0">
    <testcase name="OPCUA should not export null properties" time="0.0040" classname="should not export null properties">
    </testcase>
  </testsuite>
</testsuites>