<UaProfiles xsi:noNamespaceSchemaLocation="uaprofiles.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <ProjectInfo ProjectType="ServerProject" ProjectProfile="Standard" ScriptVersion="401" Version="1.4.9.401"/>
 <Categories>
  <Category description="Profiles of this category specify a security policy. The URI of such profiles has to be part of an Endpoint Description returned from the GetEndpoint service." name="Security"/>
  <Category description="Profiles of this category specify a complete functional set for an OPC UA Server. The URI of such profiles has to be part of a Software Certificate returned with the CreateSession service response." name="Server"/>
  <Category description="Profiles of this category specify a specific protocol mapping. The URI of such profiles has to be part of an Endpoint Description." name="Transport"/>
 </Categories>
 <ConformanceGroups>
  <ConformanceGroup runOrder="1" description="Defines ConformanceUnits for various features of the OPC UA AddressSpace." name="Address Space Model">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support setting the NonatomicRead and NonatomicWrite flags in the AccessLevelEx Attribute for Variable Nodes to indicate whether Read or Write operations can be performed in atomic manner. If the flags are set to '1', atomicity cannot be assured." name="Address Space Atomicity" used="true">
     <InitTestCase description="" name="initialize.js" filename="Address Space Model/Address Space Atomicity/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Atomicity flags in the AccessLevelEx are used." name="001.js" filename="Address Space Model/Address Space Atomicity/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Ensure atomicity is the default behavior" name="002.js" filename="Address Space Model/Address Space Atomicity/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Ensure non-atomicity is handled as expected" name="003.js" filename="Address Space Model/Address Space Atomicity/Test Cases/003.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Address Space Model/Address Space Atomicity/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the NodeClasses with their Attributes and behaviour as defined in OPC UA Part 3. This includes for instance: Object, Object Type, Variable, Variable Type, References and Data Type" name="Address Space Base" used="true">
     <InitTestCase description="" name="initialize.js" filename="Address Space Model/Address Space Base/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walks through the address space checking each Node contains the mandatory attributes, references and properties. Number of nodes checked is defined by a constant at the top of the script." name="001.js" filename="Address Space Model/Address Space Base/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Root node has Objects, Types, and Views" name="002.js" filename="Address Space Model/Address Space Base/Test Cases/002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Address Space Model/Address Space Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="" name="Address Space Events" used="true">
     <InitTestCase description="" name="initialize.js" filename="Address Space Model/Address Space Events/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Search for EventNotifiers in address-space" name="000.js" filename="Address Space Model/Address Space Events/Test Cases/000.js" checkedState="0"/>
      <TestCase description="Subscribe for events via Server object" name="003.js" filename="Address Space Model/Address Space Events/Test Cases/003.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Address Space Model/Address Space Events/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support ComplexData with Data Dictionary." name="Address Space Complex Datatypes" used="true">
     <InitTestCase description="" name="initialize.js" filename="Address Space Model/Address Space Complex Datatypes/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Address Space Model/Address Space Complex Datatypes/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Address Space Model/Address Space Complex Datatypes/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support Method Nodes." name="Address Space Method" used="true">
     <InitTestCase description="" name="initialize.js" filename="Address Space Model/Address Space Method/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="GetMonitoredItemsMethod" name="001.js" filename="Address Space Model/Address Space Method/Test Cases/001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Address Space Model/Address Space Method/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports UserWriteMask indicating the write access availability for all attributes for the given user, including not supported attributes. This includes supporting multiple levels of access control for all nodes in the system." name="Address Space UserWriteMask Multilevel" used="true">
     <InitTestCase description="" name="initialize.js" filename="Address Space Model/Address Space UserWriteMask Multilevel/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Address Space Model/Address Space UserWriteMask Multilevel/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Address Space Model/Address Space UserWriteMask Multilevel/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Implements User Level access masks for base nodes, this include at least two user access masks. " name="Address Space User Level Security Base" used="true">
     <InitTestCase description="" name="initialize.js" filename="Address Space Model/Address Space User Level Security Base/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Address Space Model/Address Space User Level Security Base/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Address Space Model/Address Space User Level Security Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports UserWriteMask indicating the write access availability for all attributes for the given user, including not supported attributes. Support includes at least two levels of users." name="Address Space UserWriteAccess" used="true">
     <InitTestCase description="" name="initialize.js" filename="Address Space Model/Address Space UserWriteAccess/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Write: Write to a node where UserAccessLevel = CurrentWrite." name="004.js" filename="Address Space Model/Address Space UserWriteAccess/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Write: to read-only node, based on (optional) WriteMask attribute." name="Err-001.js" filename="Address Space Model/Address Space UserWriteAccess/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Write: to all attributes EXCEPT 'Value'; request valid encoding." name="Err-002.js" filename="Address Space Model/Address Space UserWriteAccess/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Write: to a node whose UserAccessLevel != Write. Expects Bad_NotWritable." name="Err-004.js" filename="Address Space Model/Address Space UserWriteAccess/Test Cases/Err-004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Address Space Model/Address Space UserWriteAccess/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports WriteMask indicating the write access availability for all attributes, including not supported attributes." name="Address Space WriteMask" used="true">
     <InitTestCase description="" name="initialize.js" filename="Address Space Model/Address Space WriteMask/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Write: Write to all writable attributes of a Node, using the writeMask as a guideline. [WriteAccessMask enum currently not match Part 3 Table 3 Definition]" name="004.js" filename="Address Space Model/Address Space WriteMask/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Write: Multiple valid attributes and 1 invalid attribute." name="Err-001.js" filename="Address Space Model/Address Space WriteMask/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Write: Write to Value and Display name for valid, unknown, and invalid nodeIds." name="Err-002.js" filename="Address Space Model/Address Space WriteMask/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Write: to Value and DisplayName, all NodeIds have invalid syntax." name="Err-003.js" filename="Address Space Model/Address Space WriteMask/Test Cases/Err-003.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Address Space Model/Address Space WriteMask/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="2" description="Defines Conformance Units for Aggregate testing." name="Aggregates">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Interpolative Aggregate Testing" name="Aggregate - Interpolative" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Interpolative/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Average Aggregate Testing" name="Aggregate - Average" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Average/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="TimeAverage Aggregate Testing" name="Aggregate - TimeAverage" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - TimeAverage/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="TimeAverage2 Aggregate Testing" name="Aggregate - TimeAverage2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - TimeAverage2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Total Aggregate Testing" name="Aggregate - Total" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Total/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Total2 Aggregate Testing" name="Aggregate - Total2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Total2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Minimum Aggregate Testing" name="Aggregate - Minimum" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Minimum/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Minimum2 Aggregate Testing" name="Aggregate - Minimum2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Minimum2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Maximum Aggregate Testing" name="Aggregate - Maximum" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Maximum/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Maximum2 Aggregate Testing" name="Aggregate - Maximum2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Maximum2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="MinimumActualTime Aggregate Testing" name="Aggregate - MinimumActualTime" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - MinimumActualTime/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="MinimumActualTime2 Aggregate Testing" name="Aggregate - MinimumActualTime2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - MinimumActualTime2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="MaximumActualTime Aggregate Testing" name="Aggregate - MaximumActualTime" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - MaximumActualTime/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="MaximumActualTime2 Aggregate Testing" name="Aggregate - MaximumActualTime2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - MaximumActualTime2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Range Aggregate Testing" name="Aggregate - Range" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Range/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Range2 Aggregate Testing" name="Aggregate - Range2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Range2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="AnnotationCount Aggregate Testing" name="Aggregate - AnnotationCount" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - AnnotationCount/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Count Aggregate Testing" name="Aggregate - Count" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Count/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="DurationInStateZero Aggregate Testing" name="Aggregate - DurationInStateZero" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - DurationInStateZero/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="DurationInStateNonZero Aggregate Testing" name="Aggregate - DurationInStateNonZero" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - DurationInStateNonZero/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="NumberOfTransitions Aggregate Testing" name="Aggregate - NumberOfTransitions" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - NumberOfTransitions/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Start Aggregate Testing" name="Aggregate - Start" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Start/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="End Aggregate Testing" name="Aggregate - End" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - End/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Delta Aggregate Testing" name="Aggregate - Delta" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - Delta/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="StartBound Aggregate Testing" name="Aggregate - StartBound" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - StartBound/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="EndBound Aggregate Testing" name="Aggregate - EndBound" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - EndBound/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="DeltaBounds Aggregate Testing" name="Aggregate - DeltaBounds" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - DeltaBounds/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="DurationGood Aggregate Testing" name="Aggregate - DurationGood" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - DurationGood/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="DurationBad Aggregate Testing" name="Aggregate - DurationBad" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - DurationBad/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="PercentGood Aggregate Testing" name="Aggregate - PercentGood" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - PercentGood/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="PercentBad Aggregate Testing" name="Aggregate - PercentBad" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - PercentBad/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="WorstQuality Aggregate Testing" name="Aggregate - WorstQuality" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - WorstQuality/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="WorstQuality2 Aggregate Testing" name="Aggregate - WorstQuality2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - WorstQuality2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="StandardDeviationSample Aggregate Testing" name="Aggregate - StandardDeviationSample" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - StandardDeviationSample/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="StandardDeviationPopulation Aggregate Testing" name="Aggregate - StandardDeviationPopulation" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - StandardDeviationPopulation/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="VarianceSample Aggregate Testing" name="Aggregate - VarianceSample" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - VarianceSample/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="VariancePopulation Aggregate Testing" name="Aggregate - VariancePopulation" used="true">
     <InitTestCase description="" name="initialize.js" filename="Aggregates/Aggregate - VariancePopulation/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Aggregate: StartTime is the same as EndTime" name="001-01.js" filename="Aggregates/Aggregate - Base/Test Cases/001-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval = 0" name="001-02.js" filename="Aggregates/Aggregate - Base/Test Cases/001-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Processing Interval greater than span of current values" name="001-03.js" filename="Aggregates/Aggregate - Base/Test Cases/001-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Processing Interval greater than span of current values" name="001-04.js" filename="Aggregates/Aggregate - Base/Test Cases/001-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple StartTime is the same as EndTime" name="002-01.js" filename="Aggregates/Aggregate - Base/Test Cases/002-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval = 0" name="002-02.js" filename="Aggregates/Aggregate - Base/Test Cases/002-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Processing Interval greater than span of current values" name="002-03.js" filename="Aggregates/Aggregate - Base/Test Cases/002-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Multiple Time Flows Backward Processing Interval greater than span of current values" name="002-04.js" filename="Aggregates/Aggregate - Base/Test Cases/002-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Use Defaults is False" name="003-01.js" filename="Aggregates/Aggregate - Base/Test Cases/003-01.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False" name="003-02.js" filename="Aggregates/Aggregate - Base/Test Cases/003-02.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Percentages at 50" name="003-03.js" filename="Aggregates/Aggregate - Base/Test Cases/003-03.js" checkedState="0"/>
      <TestCase description="Aggregate: TreatUncertainAsBad is False, Sloped Extrapolation is False" name="003-04.js" filename="Aggregates/Aggregate - Base/Test Cases/003-04.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward Use Defaults is False" name="004-01.js" filename="Aggregates/Aggregate - Base/Test Cases/004-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False" name="004-02.js" filename="Aggregates/Aggregate - Base/Test Cases/004-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Percentages at 50" name="004-03.js" filename="Aggregates/Aggregate - Base/Test Cases/004-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Time Flows Backward TreatUncertainAsBad is False, Sloped Extrapolation is False" name="004-04.js" filename="Aggregates/Aggregate - Base/Test Cases/004-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are before start of Data" name="005-01.js" filename="Aggregates/Aggregate - Base/Test Cases/005-01.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime are after end of Data" name="005-02.js" filename="Aggregates/Aggregate - Base/Test Cases/005-02.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is not found" name="005-03.js" filename="Aggregates/Aggregate - Base/Test Cases/005-03.js" checkedState="0"/>
      <TestCase description="Aggregate: EndTime where Ending Bound is not found" name="005-04.js" filename="Aggregates/Aggregate - Base/Test Cases/005-04.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Bad" name="005-05.js" filename="Aggregates/Aggregate - Base/Test Cases/005-05.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime where Starting Bound is Uncertain" name="005-06.js" filename="Aggregates/Aggregate - Base/Test Cases/005-06.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and EndTime that contains no data" name="006.js" filename="Aggregates/Aggregate - Base/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Aggregate: StartTime and Endtime where there are multiple values" name="007.js" filename="Aggregates/Aggregate - Base/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Aggregate: Numeric" name="008-01.js" filename="Aggregates/Aggregate - Base/Test Cases/008-01.js" checkedState="0"/>
      <TestCase description="Aggregate: Boolean" name="008-02.js" filename="Aggregates/Aggregate - Base/Test Cases/008-02.js" checkedState="0"/>
      <TestCase description="Aggregate: Non-Numeric" name="008-03.js" filename="Aggregates/Aggregate - Base/Test Cases/008-03.js" checkedState="0"/>
      <TestCase description="Aggregate: Invalid History Read Parameter" name="Err-001.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer Aggregate Types than NodeIds" name="Err-002.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Aggregate: Fewer NodeIds than Aggregate Types" name="Err-003.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Aggregate: Override Aggregate configuration" name="Err-004.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Aggregate: Incorrect Aggregate for bad Datatype" name="Err-005.js" filename="Aggregates/Aggregate - Base/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Aggregates/Aggregate - Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="3" description="Includes ConformanceUnits to Read or Write current or historical Attribute values." name="Attribute Services">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support the Read Service  to read one or more Attributes of one or more Nodes. This includes support of the IndexRange parameter to read a single element or a range of elements when the Attribute value is an array" name="Attribute Read" used="true">
     <InitTestCase description="" name="initialize.js" filename="Attribute Services/Attribute Read/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Read: VALUE attribute of a single node." name="001.js" filename="Attribute Services/Attribute Read/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Read: Multiple attributes from a single node, in a single call." name="002.js" filename="Attribute Services/Attribute Read/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Read all available attributes from a single (valid) node, in a single call." name="003.js" filename="Attribute Services/Attribute Read/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Read multiple attributes from a valid node with maxAge = 0." name="004.js" filename="Attribute Services/Attribute Read/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Read a data value with TimestampsToReturn = BOTH" name="006.js" filename="Attribute Services/Attribute Read/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Read a data value with timestampsToReturn = SOURCE. Lab: verify the source timestamp is returned." name="007.js" filename="Attribute Services/Attribute Read/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Read a data value with timestampsToReturn = SERVER. Lab: verify the Server’s timestamp is returned." name="008.js" filename="Attribute Services/Attribute Read/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Read a data value with timestampsToReturn = NEITHER" name="009.js" filename="Attribute Services/Attribute Read/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Read: BrowseName attribute from a valid node.&#x9;" name="010.js" filename="Attribute Services/Attribute Read/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Read: BrowseName attribute from multiple valid nodes." name="011.js" filename="Attribute Services/Attribute Read/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Read all available attributes from multiple valid nodes of each different node type, in a single call." name="012.js" filename="Attribute Services/Attribute Read/Test Cases/012.js" checkedState="0"/>
      <TestCase description="Read: Same attribute from same node multiple times." name="013.js" filename="Attribute Services/Attribute Read/Test Cases/013.js" checkedState="0"/>
      <TestCase description="Read: Data-type reads." name="014.js" filename="Attribute Services/Attribute Read/Test Cases/014.js" checkedState="0"/>
      <TestCase description="Read: MaxAge > Int32" name="016.js" filename="Attribute Services/Attribute Read/Test Cases/016.js" checkedState="0"/>
      <TestCase description="Read: Read a single attribute that is not 'Value'. Cycle through AccessLevel, BrowseName, DataType, DisplayName, Historizing, NodeClass, NodeId, UserAccessLevel, ValueRank INDIVIDUALLY." name="017.js" filename="Attribute Services/Attribute Read/Test Cases/017.js" checkedState="0"/>
      <TestCase description="Read: Read ServerStatus.State and verify == RUNNING_0." name="018.js" filename="Attribute Services/Attribute Read/Test Cases/018.js" checkedState="0"/>
      <TestCase description="Read: Arrays of each data type (basic types)" name="022.js" filename="Attribute Services/Attribute Read/Test Cases/022.js" checkedState="0"/>
      <TestCase description="Read: Arrays of each data-type to be read from multiple Nodes in a single call." name="023.js" filename="Attribute Services/Attribute Read/Test Cases/023.js" checkedState="0"/>
      <TestCase description="Read: Arrays, read one node of each data type specifying an IndexRange retrieving 2nd element only." name="024.js" filename="Attribute Services/Attribute Read/Test Cases/024.js" checkedState="0"/>
      <TestCase description="Read: Arrays of various data types from multiple Nodes (in a single call) using IndexRange 2-4." name="025.js" filename="Attribute Services/Attribute Read/Test Cases/025.js" checkedState="0"/>
      <TestCase description="Read: Arrays of various data types from multiple Nodes (in a single call) using IndexRange 'last 3 items'." name="026.js" filename="Attribute Services/Attribute Read/Test Cases/026.js" checkedState="0"/>
      <TestCase description="Read: The EventNotifier attribute. Expects Good orBad_AttributeIdInvalid." name="027.js" filename="Attribute Services/Attribute Read/Test Cases/027.js" checkedState="0"/>
      <TestCase description="Read attributes (not Value); sourceTimestamp=null; serverTimestamp is valid." name="028.js" filename="Attribute Services/Attribute Read/Test Cases/028.js" checkedState="0"/>
      <TestCase description="Read the Value attribute of a single Node where the Value attribute is of a different data-type and is an multi dimensional array." name="030.js" filename="Attribute Services/Attribute Read/Test Cases/030.js" checkedState="0"/>
      <TestCase description="Read the Value attribute of multiple nodes, each Node`s Value attribute is of a different data-type and is a multi-dimensionsal array." name="031.js" filename="Attribute Services/Attribute Read/Test Cases/031.js" checkedState="0"/>
      <TestCase description="Use of IndexRange for reading a single element of a multi-dimensional array, in this case the 2nd element of the 2nd dimension." name="032.js" filename="Attribute Services/Attribute Read/Test Cases/032.js" checkedState="0"/>
      <TestCase description="Use of IndexRange for reading a range of indexes of a multi-dimentional array, in this case a range is from 2-4 in the second dimension." name="033.js" filename="Attribute Services/Attribute Read/Test Cases/033.js" checkedState="0"/>
      <TestCase description="Use of IndexRange for reading a range of indexes of a multi-dimentionsal array where the last 3 elements of the last dimension in the array are read for each data type." name="034.js" filename="Attribute Services/Attribute Read/Test Cases/034.js" checkedState="0"/>
      <TestCase description="IndexRange's lower bound is within the array's range but exceeding the array`s upper bound for each support array data type." name="036.js" filename="Attribute Services/Attribute Read/Test Cases/036.js" checkedState="0"/>
      <TestCase description="Read: Invalid (non-existent) attribute on a valid node.  (Invalid attribute just happens to be &quot;executable&quot; in this case)" name="Err-001.js" filename="Attribute Services/Attribute Read/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Read: Multiple valid attributes and one invalid attribute, from a single valid node." name="Err-002.js" filename="Attribute Services/Attribute Read/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Read: Invalid attribute from a valid node, multiple times in the same service call." name="Err-003.js" filename="Attribute Services/Attribute Read/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Read: Valid attribute from an invaild (non existent) node." name="Err-004.js" filename="Attribute Services/Attribute Read/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Read: Valid attribute from a node id with invalid syntax: String Id: Empty/null" name="Err-005.js" filename="Attribute Services/Attribute Read/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="Read: Valid attribute from a node id with invalid syntax: Byte Id: Empty/null" name="Err-006.js" filename="Attribute Services/Attribute Read/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="Read: Valid attributes (ids: 1, 3, 4, 5) from a set of nodes containing valid nodes, non-existent nodes, and nodes with invalid node id syntaxes" name="Err-008.js" filename="Attribute Services/Attribute Read/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="Read: Valid attributes (ids: 1, 3, 4, 5) from multiple non-existent nodes" name="Err-009.js" filename="Attribute Services/Attribute Read/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="Read: Valid attributes (ids: 1, 3, 4, 5) from multiple nodes with invalid node id syntaxes" name="Err-010.js" filename="Attribute Services/Attribute Read/Test Cases/Err-010.js" checkedState="0"/>
      <TestCase description="Read: NodesToRead array is empty." name="Err-011.js" filename="Attribute Services/Attribute Read/Test Cases/Err-011.js" checkedState="0"/>
      <TestCase description="Read: IndexRange is out of bounds of the what the array supports. Each core data-type is tested. Expect &quot;Bad_IndexRangeNoData." name="Err-012.js" filename="Attribute Services/Attribute Read/Test Cases/Err-012.js" checkedState="0"/>
      <TestCase description="Read: IndexRange invalid syntax (negative number), for each data type. Expected operation result is Bad_IndexRangeInvalid." name="Err-013.js" filename="Attribute Services/Attribute Read/Test Cases/Err-013.js" checkedState="0"/>
      <TestCase description="Read: Negative MaxAge parameter. Returns Bad_MaxAgeInvalid." name="Err-014.js" filename="Attribute Services/Attribute Read/Test Cases/Err-014.js" checkedState="0"/>
      <TestCase description="Read: IndexRange used for not-applicable Attributes. Expect OperationLevel=Bad_IndexRangeNoData." name="Err-015.js" filename="Attribute Services/Attribute Read/Test Cases/Err-015.js" checkedState="0"/>
      <TestCase description="Read: a node that is write-only (and not readable)" name="Err-016.js" filename="Attribute Services/Attribute Read/Test Cases/Err-016.js" checkedState="0"/>
      <TestCase description="Read: Value attribute requesting invalid DataEncoding &quot;XML&quot;" name="Err-017.js" filename="Attribute Services/Attribute Read/Test Cases/Err-017.js" checkedState="0"/>
      <TestCase description="Read: Specify an invalid TimestampsToRead value. Expects Bad_TimestampsToReturnInvalid." name="Err-019.js" filename="Attribute Services/Attribute Read/Test Cases/Err-019.js" checkedState="0"/>
      <TestCase description="Read: IndexRange invalid syntax, for each data type. Expected operation result is Bad_IndexRangeInvalid." name="Err-022.js" filename="Attribute Services/Attribute Read/Test Cases/Err-022.js" checkedState="0"/>
      <TestCase description="Read: IndexRange invalid syntax (both digits are same), for each data type. Expected operation result is Bad_IndexRangeInvalid." name="Err-023.js" filename="Attribute Services/Attribute Read/Test Cases/Err-023.js" checkedState="0"/>
      <TestCase description="Read: IndexRange invalid (text is backwards) for each data-type." name="Err-024.js" filename="Attribute Services/Attribute Read/Test Cases/Err-024.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Attribute Services/Attribute Read/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the IndexRange to write a single element or a range of elements when the Attribute value is an array." name="Attribute Write Index" used="true">
     <InitTestCase description="" name="initialize.js" filename="Attribute Services/Attribute Write Index/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Write: IndexRange=&quot;1&quot; for each core data-type." name="001.js" filename="Attribute Services/Attribute Write Index/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Write: IndexRange=&quot;1:2&quot; for each core datatype as Array." name="002.js" filename="Attribute Services/Attribute Write Index/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Write: IndexRange=&quot;0:2&quot; to write to first 3 elements of an array, for each data type." name="003.js" filename="Attribute Services/Attribute Write Index/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Write: IndexRange equates to last 3 items of an array." name="004.js" filename="Attribute Services/Attribute Write Index/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Write: Array write the complete array, for each data-type." name="005.js" filename="Attribute Services/Attribute Write Index/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Write: Element outside bounds of array." name="006.js" filename="Attribute Services/Attribute Write Index/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Use of IndexRange for writing to one index of a multi-dimensional array where the index is the first element from second dimension of the multi-dimensional array are written." name="007.js" filename="Attribute Services/Attribute Write Index/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Use of IndexRange for writing to a range of indexes of a multi-dimensional array where the range is the first element from each dimension of the multi-dimensional array are written." name="008.js" filename="Attribute Services/Attribute Write Index/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Use of IndexRange for writing to a range of indexes of a multi-dimensional array where the first 3 elements of each dimension in the array." name="009.js" filename="Attribute Services/Attribute Write Index/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Use of IndexRange for writing to a range of indexes of a multi-dimensional array where the last 3 elements of each dimension in the array are written." name="010.js" filename="Attribute Services/Attribute Write Index/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Write: IndexRange is out of bounds, Int32 / 2." name="Err-001.js" filename="Attribute Services/Attribute Write Index/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Write: IndexRange is invalid (7:2) for a Node of each data type." name="Err-002.js" filename="Attribute Services/Attribute Write Index/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Write: IndexRange syntax invalid. Used for each data-type Node." name="Err-003.js" filename="Attribute Services/Attribute Write Index/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Write: IndexRange invalid syntax, where range is not actually specified as a range." name="Err-004.js" filename="Attribute Services/Attribute Write Index/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Write: IndexRange invalid using negative numbers. Do this for each data-type." name="Err-005.js" filename="Attribute Services/Attribute Write Index/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Attribute Services/Attribute Write Index/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support writing of StatusCode and Timestamps." name="Attribute Write StatusCode &amp; TimeStamp" used="true">
     <InitTestCase description="" name="initialize.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Write: Write a VQT, include VQ." name="001.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Write: Write a VQT, include VQT (source)." name="002.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Write: Write a VQT, include VQT (both)." name="003.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Write: Write a VQT, include VT (source) only." name="004.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Write: Write a VQT, include V only." name="005.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Write: Write a VQT, include VT (both) only." name="006.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Write: Write a VQT, include VQT (source) only." name="007.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Write: Write a VQT, include VT (server) only." name="008.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/008.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Write StatusCode to Value (but not value) and call Publish." name="009.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/009.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: DataChangeFilter of VQT." name="010.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/010.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Write VQT." name="011.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/011.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Attribute Services/Attribute Write StatusCode &amp; TimeStamp/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support alternate Data Encoding when reading value Attributes.&#xa;By default, every Server has to support the Data Encoding of the currently used Stack Profile (i.e. binary with UA Binary Encoding and XML with XML Encoding). This ConformanceUnit - when supp" name="Attribute Alternate Encoding" used="true">
     <InitTestCase description="" name="initialize.js" filename="Attribute Services/Attribute Alternate Encoding/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Read: Request &quot;default binary&quot; encoding." name="001.js" filename="Attribute Services/Attribute Alternate Encoding/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Read: Request DataEncoding of Xml." name="002.js" filename="Attribute Services/Attribute Alternate Encoding/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Read: Request unknown encoding for a node." name="Err-001.js" filename="Attribute Services/Attribute Alternate Encoding/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Read: Request encoding for non-Value attribute of a variable." name="Err-003.js" filename="Attribute Services/Attribute Alternate Encoding/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Request unsupported DataEncoding, e.g. &quot;modbus&quot;." name="Err-004.js" filename="Attribute Services/Attribute Alternate Encoding/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: DataEncoding namespace does not exist." name="Err-005.js" filename="Attribute Services/Attribute Alternate Encoding/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Request encoding for non-Value attribute." name="Err-006.js" filename="Attribute Services/Attribute Alternate Encoding/Test Cases/Err-006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Attribute Services/Attribute Alternate Encoding/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support reading and encoding ComplexData (structures)." name="Attribute Read Complex" used="true">
     <InitTestCase description="" name="initialize.js" filename="Attribute Services/Attribute Read Complex/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Attribute Services/Attribute Read Complex/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Attribute Services/Attribute Read Complex/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the Write Service to write values to one or more Attributes of one or more Nodes." name="Attribute Write Values" used="true">
     <InitTestCase description="" name="initialize.js" filename="Attribute Services/Attribute Write Values/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Write: Valid attribute of a valid Node. No Quality or Timestamps specified." name="001.js" filename="Attribute Services/Attribute Write Values/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Write: Value attribute, multiple nodes." name="002.js" filename="Attribute Services/Attribute Write Values/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Write: Write to a single node multiple times in the same call." name="003.js" filename="Attribute Services/Attribute Write Values/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Write: AccessLevel = CurrentWrite. Expects &quot;Good&quot;." name="004.js" filename="Attribute Services/Attribute Write Values/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Write: Write the minimum value for each supported Data Type." name="005.js" filename="Attribute Services/Attribute Write Values/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Write: Max value of each supported data type." name="006.js" filename="Attribute Services/Attribute Write Values/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Write: ByteString to a Byte[]. Expects success." name="007.js" filename="Attribute Services/Attribute Write Values/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Write: LocalizedText; write to all, some, and no parameters of this structure type." name="009.js" filename="Attribute Services/Attribute Write Values/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Write: Write values that are the 'subtype' of a Integer." name="010.js" filename="Attribute Services/Attribute Write Values/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Write: Write values that are the 'subtype' of a UInteger." name="011.js" filename="Attribute Services/Attribute Write Values/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Write: NaN to to all floats." name="012.js" filename="Attribute Services/Attribute Write Values/Test Cases/012.js" checkedState="0"/>
      <TestCase description="Write string in extended codepage." name="013.js" filename="Attribute Services/Attribute Write Values/Test Cases/013.js" checkedState="0"/>
      <TestCase description="Write to the Value attribute (without statusCode, sourceTimestamp, or serverTimestamp) of nodes that has a ValueRank of an array. Write the entire array." name="017.js" filename="Attribute Services/Attribute Write Values/Test Cases/017.js" checkedState="0"/>
      <TestCase description="Write to the Value attribute (without statusCode, sourceTimestamp, or serverTimestamp) of several nodes that has a ValueRank of array. Write the entire array." name="018.js" filename="Attribute Services/Attribute Write Values/Test Cases/018.js" checkedState="0"/>
      <TestCase description="Write to the Value attribute (without statusCode, sourceTimestamp, or serverTimestamp) of nodes which have a ValueRank of a multi-dimensional array. Write the entire multi-dimensional array." name="019.js" filename="Attribute Services/Attribute Write Values/Test Cases/019.js" checkedState="0"/>
      <TestCase description="Write to the Value attribute (without statusCode, sourceTimestamp, or serverTimestamp) of several nodes which have aValueRank of a multi-dimensional array. Write the entire multi-dimensional array." name="020.js" filename="Attribute Services/Attribute Write Values/Test Cases/020.js" checkedState="0"/>
      <TestCase description="Write: Empty nodesToWrite array." name="Err-001.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Write: Write to a valid attribute of an invalid Node." name="Err-002.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Write: Write to a valid node for a Node using an invalid syntax." name="Err-003.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Write: to Value and DisplayName attributes, on multiple invalid Nodes." name="Err-004.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Write: Invalid attribute." name="Err-005.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="Write: Invalid attribute to a valid node, multiple times in the same call." name="Err-006.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="Write: to a node whose AccessLevel is Read Only. Expect Bad_NotWritable." name="Err-007.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-007.js" checkedState="0"/>
      <TestCase description="Write: Write a value using the wrong data-type." name="Err-008.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="Write: Write a &lt;null> to each data-type." name="Err-009.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="Write: UInteger type receives values of incorrect sub-type." name="Err-010.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-010.js" checkedState="0"/>
      <TestCase description="Write: Integer receives values of incorrect sub-type." name="Err-011.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-011.js" checkedState="0"/>
      <TestCase description="Write: Integer receives value of incorrect sub-type." name="Err-012.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-012.js" checkedState="0"/>
      <TestCase description="Write: LocalizedText with non-existent Locale." name="Err-015.js" filename="Attribute Services/Attribute Write Values/Test Cases/Err-015.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Attribute Services/Attribute Write Values/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support writing and decoding ComplexData." name="Attribute Write Complex" used="true">
     <InitTestCase description="" name="initialize.js" filename="Attribute Services/Attribute Write Complex/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Attribute Services/Attribute Write Complex/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Attribute Services/Attribute Write Complex/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="4" description="Some Events are optional features for an OPC UA Server." name="Base Eventing">
   <ConformanceUnits>
    <ConformanceUnit category="" description="Support creation of MonitoredItems using a Notifier attribute" name="Monitor Events" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Eventing/Monitor Events/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Specify invalid logic, e.g. x=5 and x=6" name="007.js" filename="Base Eventing/Monitor Events/Test Cases/007.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Eventing/Monitor Events/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="5" description="Base Information. (optional)" name="Base Information">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="The Server supports the Server Object, ServerCapabilities and supports the OPC UA AddressSpace structure." name="Base Info Core Structure" used="true">
     <InitTestCase description="The Server supports defining user defined ObjectTypes, VariableTypes, ReferenceType and Datatypes. " name="initialize.js" filename="Base Information/Base Info Core Structure/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Server node." name="001.js" filename="Base Information/Base Info Core Structure/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Read BrowseName of system-level nodes." name="002.js" filename="Base Information/Base Info Core Structure/Test Cases/002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info Core Structure/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports defining user defined ObjectTypes, VariableTypes, ReferenceType and Datatypes. Supporting this conformance unit does not require that a Server exposes the OPC UA Object, Variable, Reference, or Data Types, unless the Server implements User types. If User types are defined than the full type-hierarchy has to be exposed as well." name="Base Info Custom Type System" used="true">
     <InitTestCase description="The Server supports defining user defined ObjectTypes, VariableTypes, ReferenceType and Datatypes. " name="initialize.js" filename="Base Information/Base Info Custom Type System/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Base Information/Base Info Custom Type System/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info Custom Type System/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports Diagnostic Objects and Variables." name="Base Info Diagnostics" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info Diagnostics/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Read ServerDiagnostics BrowseName" name="001.js" filename="Base Information/Base Info Diagnostics/Test Cases/001.js" checkedState="0"/>
      <TestCase description="ServerDiagnosticsType defined correctly" name="002.js" filename="Base Information/Base Info Diagnostics/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Check CurrentSessionCount and CumulatedSessionCount" name="003.js" filename="Base Information/Base Info Diagnostics/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Check SamplingIntervalDiagnosticsArray" name="004.js" filename="Base Information/Base Info Diagnostics/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Check SubscriptionDiagnosticsArray" name="005.js" filename="Base Information/Base Info Diagnostics/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Check SubscriptionDiagnosticsArray in real time" name="006-010.js" filename="Base Information/Base Info Diagnostics/Test Cases/006-010.js" checkedState="0"/>
      <TestCase description="Verify ModifyCount subscription diagnostic." name="011.js" filename="Base Information/Base Info Diagnostics/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Check RepublishMessageCount subscription diagnostic" name="012.js" filename="Base Information/Base Info Diagnostics/Test Cases/012.js" checkedState="0"/>
      <TestCase description="Check PublishRequestCount and DataChangeNotificationsCount subscription diagnostics" name="013.js" filename="Base Information/Base Info Diagnostics/Test Cases/013.js" checkedState="0"/>
      <TestCase description="Check DisabledMonitoredItemCount diagnostics property" name="014.js" filename="Base Information/Base Info Diagnostics/Test Cases/014.js" checkedState="0"/>
      <TestCase description="Check MonitoringQueueOverflowCount subscription diagnostic" name="015.js" filename="Base Information/Base Info Diagnostics/Test Cases/015.js" checkedState="0"/>
      <TestCase description="Check Current/CumulatedSubscriptionCount" name="016.js" filename="Base Information/Base Info Diagnostics/Test Cases/016.js" checkedState="0"/>
      <TestCase description="Repeat Current/CumulatedSubscriptionCount" name="017.js" filename="Base Information/Base Info Diagnostics/Test Cases/017.js" checkedState="0"/>
      <TestCase description="Check ServerDiagnotics.EnabledFlag." name="018-1.js" filename="Base Information/Base Info Diagnostics/Test Cases/018-1.js" checkedState="0"/>
      <TestCase description="Verify EnabledFlag toggle doesnt increase session count" name="018-2.js" filename="Base Information/Base Info Diagnostics/Test Cases/018-2.js" checkedState="0"/>
      <TestCase description="Static diagnostics return BadNotReadable  when EnabledFlag=false." name="018-3.js" filename="Base Information/Base Info Diagnostics/Test Cases/018-3.js" checkedState="0"/>
      <TestCase description="Test sessions are added SessionsDiagnosticsSummary" name="019.js" filename="Base Information/Base Info Diagnostics/Test Cases/019.js" checkedState="0"/>
      <TestCase description="Check (Security-)RejectedSessionCount" name="023.js" filename="Base Information/Base Info Diagnostics/Test Cases/023.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info Diagnostics/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports defining Variables that include the Engineering Units Property. This property makes use of the EUInformation data structure. This structure by default represents the UN/CEFACT 'Codes for Units of Measurement'. If a different EU representation is required then the EUInformation.namespaceUri will indicate the alternate namespace." name="Base Info Engineering Units" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info Engineering Units/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Base Information/Base Info Engineering Units/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info Engineering Units/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports the EventQueueOverflowEventType as defined in Part 4." name="Base Info EventQueueOverflowEventType" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info EventQueueOverflowEventType/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Base Information/Base Info EventQueueOverflowEventType/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info EventQueueOverflowEventType/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports obtaining substription information via getMonitoredItems Method on the Server object." name="Base Info GetMonitoredItems Method" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info GetMonitoredItems Method/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Method exists" name="001.js" filename="Base Information/Base Info GetMonitoredItems Method/Test Cases/001.js" checkedState="0"/>
      <TestCase description="2 Subscriptions; 2 Items; Call GetMonitoredItems" name="002.js" filename="Base Information/Base Info GetMonitoredItems Method/Test Cases/002.js" checkedState="0"/>
      <TestCase description="CreateSubscription with 0 items." name="003.js" filename="Base Information/Base Info GetMonitoredItems Method/Test Cases/003.js" checkedState="0"/>
      <TestCase description="2 Subscriptions; both checked." name="004.js" filename="Base Information/Base Info GetMonitoredItems Method/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Invalid SubscriptionId" name="005.js" filename="Base Information/Base Info GetMonitoredItems Method/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Call GetMonitoredItems specifying SubscriptionId belonging to another session." name="007.js" filename="Base Information/Base Info GetMonitoredItems Method/Test Cases/007.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info GetMonitoredItems Method/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports ModelChange Event and NodeVersion Property for all Nodes that the server allows Model changes for." name="Base Info Model Change" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info Model Change/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Generate multiple events to cause a queue (size=1) overflow." name="001.js" filename="Base Information/Base Info Model Change/Test Cases/001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info Model Change/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports the VariableType OptionSet." name="Base Info OptionSet" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info OptionSet/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Base Information/Base Info OptionSet/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info OptionSet/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports defining custom Object or Variables that include the use of OptionalPlaceholder or MandatoryPlaceholder modelling rules." name="Base Info Placeholder Modelling Rules" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info Placeholder Modelling Rules/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Base Information/Base Info Placeholder Modelling Rules/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info Placeholder Modelling Rules/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server exposes if generation of Progress events for long running service calls such as HistoricalRead or Query is supported. If it is listed as supported in ServerCapabilities, than the actual events are verified." name="Base Info Progress Events" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info Progress Events/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Base Information/Base Info Progress Events/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info Progress Events/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the standard Method ResendData (defined in UA Part 5) to get the latest value of the monitored items of a Subscription." name="Base Info ResendData Method" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info ResendData Method/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Validate the correctness of the ResendData method." name="000.js" filename="Base Information/Base Info ResendData Method/Test Cases/000.js" checkedState="0"/>
      <TestCase description="Verify DataChangeNotifications for all MonitoredItems of a Subscription are sent, when all MonitoredItems have the MonitoringMode Reporting." name="001.js" filename="Base Information/Base Info ResendData Method/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Verify DataChangeNotifications for all MonitoredItems of a Subscription are sent, when all MonitoredItems have the MonitoringMode Reporting but the PublishingInterval is not triggered yet." name="002.js" filename="Base Information/Base Info ResendData Method/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Verify DataChangeNotifications for all MonitoredItems of a Subscription are NOT sent, when all MonitoredItems have the MonitoringMode Sampling." name="003.js" filename="Base Information/Base Info ResendData Method/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Verify DataChangeNotifications for all MonitoredItems of a Subscription are NOT sent, when all MonitoredItems have the MonitoringMode Disabled." name="004.js" filename="Base Information/Base Info ResendData Method/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Verify DataChangeNotifications are only generated for MonitoredItems of a Subscription which have the MonitoringMode Reporting." name="005.js" filename="Base Information/Base Info ResendData Method/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Verify DataChangeNotifications for all MonitoredItems of a Subscription are sent, even if the number exceeds the MaxNotificationsPerPublish." name="006.js" filename="Base Information/Base Info ResendData Method/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Verify that the ResendData method does not trigger resending of events." name="007.js" filename="Base Information/Base Info ResendData Method/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Verify the server does only generate DataChangeNotifications for the given Subscription ID." name="008.js" filename="Base Information/Base Info ResendData Method/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Validate the server keeps operating when calling ResendData while specifying an empty Subscription." name="009.js" filename="Base Information/Base Info ResendData Method/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Verify that after calling ResendData only one value per MonitoredItem is reported." name="010.js" filename="Base Information/Base Info ResendData Method/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Invoke ResendData while specifying a non existent subscription" name="Err-001.js" filename="Base Information/Base Info ResendData Method/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Validate that the ResendData method cannot be invoked from another Session." name="Err-002.js" filename="Base Information/Base Info ResendData Method/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Call the ResendData method without having a Subscription in the server." name="Err-003.js" filename="Base Information/Base Info ResendData Method/Test Cases/Err-003.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info ResendData Method/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports the VariableType OptionSet." name="Base Info ValueAsText" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info ValueAsText/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Check ValueAsText property on ALL configured nodes" name="001.js" filename="Base Information/Base Info ValueAsText/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Subscribe to ValueAsText property while changing values" name="002.js" filename="Base Information/Base Info ValueAsText/Test Cases/002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info ValueAsText/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports PropertyChangeEvent for some Properties" name="Base Info Property Change" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info Property Change/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Base Information/Base Info Property Change/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info Property Change/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports publishing of the Server limitation in the ServerCapabilities, including MaxArrayLength, MaxStringLength, MaxNodePerRead, MaxNodesPerWrite, MaxNodesPerSubscription and MaxNodesPerBrowse." name="Base Info Server Capabilities" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info Server Capabilities/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Verify ServerCapabilities object" name="000.js" filename="Base Information/Base Info Server Capabilities/Test Cases/000.js" checkedState="0"/>
      <TestCase description="MinSupportedSampleRate" name="001.js" filename="Base Information/Base Info Server Capabilities/Test Cases/001.js" checkedState="0"/>
      <TestCase description="MaxBrowseContinuationPoints" name="002.js" filename="Base Information/Base Info Server Capabilities/Test Cases/002.js" checkedState="0"/>
      <TestCase description="MaxArrayLength" name="005.js" filename="Base Information/Base Info Server Capabilities/Test Cases/005.js" checkedState="0"/>
      <TestCase description="MaxStringLength" name="006.js" filename="Base Information/Base Info Server Capabilities/Test Cases/006.js" checkedState="0"/>
      <TestCase description="MaxByteStringLength" name="007.js" filename="Base Information/Base Info Server Capabilities/Test Cases/007.js" checkedState="0"/>
      <TestCase description="MaxNodesPerRead" name="008.js" filename="Base Information/Base Info Server Capabilities/Test Cases/008.js" checkedState="0"/>
      <TestCase description="MaxNodesPerWrite" name="011.js" filename="Base Information/Base Info Server Capabilities/Test Cases/011.js" checkedState="0"/>
      <TestCase description="MaxNodesPerMethodCall" name="014.js" filename="Base Information/Base Info Server Capabilities/Test Cases/014.js" checkedState="0"/>
      <TestCase description="MaxNodesPerBrowse" name="015.js" filename="Base Information/Base Info Server Capabilities/Test Cases/015.js" checkedState="0"/>
      <TestCase description="MaxNodesPerRegisterNodes" name="016.js" filename="Base Information/Base Info Server Capabilities/Test Cases/016.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info Server Capabilities/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports generating SystemStatusChangeEventType indicating shutdown of the Server (SourceNode=Server)." name="Base Info System Status" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info System Status/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Base Information/Base Info System Status/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info System Status/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server supports generating SystemStatusChangeEventType indicating changes to an underlying system (SourceNode=Server). This event can also be used to indicate that the OPC UA Server has underlying systems" name="Base Info System Status underlying system" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info System Status underlying system/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Base Information/Base Info System Status underlying system/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info System Status underlying system/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Server exposes a Type System with DataTypes, ReferenceTypes, ObjectTypes and VariableTypes including all of the OPC Foundation provided (namespace 0) types that are used by the Server,as defined in Part 5. Items that are defined in NameSpace 0 but are defined in other specification parts are tested as part of the other information models." name="Base Info Type System" used="true">
     <InitTestCase description="" name="initialize.js" filename="Base Information/Base Info Type System/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Level 1 folders exist" name="001.js" filename="Base Information/Base Info Type System/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Walks through the DataTypes folder, in the TypeSystem, verifying compliance to UA Parts 3 and 5." name="DataTypesValidation.js" filename="Base Information/Base Info Type System/Test Cases/DataTypesValidation.js" checkedState="0"/>
      <TestCase description="Walks through the EventTypes folder, in the TypeSystem, verifying compliance to UA Parts 3 and 5." name="EventTypesValidation.js" filename="Base Information/Base Info Type System/Test Cases/EventTypesValidation.js" checkedState="0"/>
      <TestCase description="Walks through the ObjectTypes folder, in the TypeSystem, verifying compliance to UA Parts 3 and 5." name="ObjectTypesValidation.js" filename="Base Information/Base Info Type System/Test Cases/ObjectTypesValidation.js" checkedState="0"/>
      <TestCase description="Walks through the ReferenceTypes folder, in the TypeSystem, verifying compliance to UA Parts 3 and 5." name="ReferenceTypesValidation.js" filename="Base Information/Base Info Type System/Test Cases/ReferenceTypesValidation.js" checkedState="0"/>
      <TestCase description="Walks through the VariableTypes folder, in the TypeSystem, verifying compliance to UA Parts 3 and 5." name="VariableTypesValidation.js" filename="Base Information/Base Info Type System/Test Cases/VariableTypesValidation.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Base Information/Base Info Type System/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="6" description="ConformanceUnits specific to Clients and Servers that deal with the representation and use of automation data as specified in Part 8 of the OPC UA specification." name="Data Access">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support AnalogItemType Variables with corresponding Properties." name="Data Access AnalogItemType" used="true">
     <InitTestCase description="" name="initialize.js" filename="Data Access/Data Access Analog/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Type is defined in the address-space." name="000.js" filename="Data Access/Data Access Analog/Test Cases/000.js" checkedState="0"/>
      <TestCase description="Read: Value attribute of an analog node of each of the following data type: Double, Float, Int16, UInt16, Int32, UInt32, Int64, UInt64. Perform each read separately." name="001.js" filename="Data Access/Data Access Analog/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Read: Value attribute of an analog node of each of the following data type: Double, Float, Int16, UInt16, Int32, UInt32, Int64, UInt64. Perform the reads in a single call." name="002.js" filename="Data Access/Data Access Analog/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Read: EURange property of an analog node." name="003.js" filename="Data Access/Data Access Analog/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Read: EURange property of multiple analog nodes." name="004.js" filename="Data Access/Data Access Analog/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Read: EURange property of an analog node. If the EURange exists, write values exceeding the lower bound and upper boound (i.e. lowerbound - 1/upperbound + 1 respectively)" name="005.js" filename="Data Access/Data Access Analog/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Write: The following 3 values to an analog node (test each supported type): EURange.Low, EURange.High, and a number in the middle of the EURange." name="006.js" filename="Data Access/Data Access Analog/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Write: No InstrumentRange; Write() the max value of datatype, min value of datatype, a value in the middle of the datatype range." name="007.js" filename="Data Access/Data Access Analog/Test Cases/007.js" checkedState="0"/>
      <TestCase description="DeadbandAbsolute of 10." name="008.js" filename="Data Access/Data Access Analog/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Write: To the EURange attribute." name="009.js" filename="Data Access/Data Access Analog/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Subscribe: Add monitored items of analog type (each supported datatype) to an enabled subscription. Wait for a publishing interval and call publish to verify the values received match the expected datatype of each node." name="010.js" filename="Data Access/Data Access Analog/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Subscribe: Add monitored items of analog type (each supported datatype) to an enabled subscription. Wait for a publishing interval and call publish to verify the values received match the expected datatype of each node." name="011.js" filename="Data Access/Data Access Analog/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Subscribe: Add monitored item (configured with an EURange and a PercentDeadband filter value of 10) for each supported data-type to an enabled subscription. Call publish. Perform two writes to each item: 1) Will pass the deadband, 2) Will not pass the deadband. Call publish after each write." name="012.js" filename="Data Access/Data Access Analog/Test Cases/012.js" checkedState="0"/>
      <TestCase description="Analog Types: Should operate with TranslateBrowsePathsToNodeIds." name="013.js" filename="Data Access/Data Access Analog/Test Cases/013.js" checkedState="0"/>
      <TestCase description="Analog Types: Should operate with TranslateBrowsePathsToNodeIds (multiple Analog nodes)." name="014.js" filename="Data Access/Data Access Analog/Test Cases/014.js" checkedState="0"/>
      <TestCase description="Browse: The available forward-references of an analog node." name="015.js" filename="Data Access/Data Access Analog/Test Cases/015.js" checkedState="0"/>
      <TestCase description="Browse: The available inverse-references of an analog node." name="016.js" filename="Data Access/Data Access Analog/Test Cases/016.js" checkedState="0"/>
      <TestCase description="Browse: The available references (both directions) of an analog node." name="017.js" filename="Data Access/Data Access Analog/Test Cases/017.js" checkedState="0"/>
      <TestCase description="Write to EngineeringUnits" name="018.js" filename="Data Access/Data Access Analog/Test Cases/018.js" checkedState="0"/>
      <TestCase description="Write a value equal to EURange.Low and then EURange.High." name="019.js" filename="Data Access/Data Access Analog/Test Cases/019.js" checkedState="0"/>
      <TestCase description="Write a value exceeding the InstrumentRange." name="020.js" filename="Data Access/Data Access Analog/Test Cases/020.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathToNodeIds requests InstrumentRange, EURange, and EngineeringUnits for all AnalogItems." name="021.js" filename="Data Access/Data Access Analog/Test Cases/021.js" checkedState="0"/>
      <TestCase description="Write: A complex structure (incorrect type) to an analog item." name="Err-001.js" filename="Data Access/Data Access Analog/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Write: To the EngineeringUnits property." name="Err-002.js" filename="Data Access/Data Access Analog/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Write: To the InstrumentRange property." name="Err-003.js" filename="Data Access/Data Access Analog/Test Cases/Err-003.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Data Access/Data Access Analog/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Provide Variables of DataItemType or one of its subtypes. Support the StatusCodes specified in the DataAccess part of the OPC UA specification. Support of optional Properties (e.g. &quot;InstrumentRange&quot;) shall be verified during certification testing and will" name="Data Access DataItems" used="true">
     <InitTestCase description="" name="initialize.js" filename="Data Access/Data Access DataItems/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Type is defined in the address-space." name="000.js" filename="Data Access/Data Access DataItems/Test Cases/000.js" checkedState="0"/>
      <TestCase description="DataItems: Should operate with TranslateBrowsePathsToNodeIds." name="001.js" filename="Data Access/Data Access DataItems/Test Cases/001.js" checkedState="0"/>
      <TestCase description="DataItems: Should operate with TranslateBrowsePathsToNodeIds (multiple DataItem nodes)." name="002.js" filename="Data Access/Data Access DataItems/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Read: Value attribute of data item nodes of each of the following data type: Byte, Double, Float, GUID, Int16, UInt16, Int32, UInt32, Int64, UInt64, SByte, String. " name="003.js" filename="Data Access/Data Access DataItems/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Write: The following 3 values to a dataitem node of each supported type: Min of datatype, Max of datatype, and a number in the middle of the datatype range." name="004.js" filename="Data Access/Data Access DataItems/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Write: To multiple dataitem nodes (of all supported datatypes) in a single call max value of the corresponding datatype." name="005.js" filename="Data Access/Data Access DataItems/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Write: To &quot;Definition&quot; property of a DataItem. Acquire the handle to the &quot;Definition&quot; nodeId using the TranslateBrowsePathsToNodeIds service." name="006.js" filename="Data Access/Data Access DataItems/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Write: To &quot;ValuePrecision&quot; property of a DataItem. Acquire the handle to the &quot;ValuePrecision&quot; nodeId using the TranslateBrowsePathsToNodeIds service." name="007.js" filename="Data Access/Data Access DataItems/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Write: To a dataitem node that has property “ValuePrecision”. Read back the value to determine that either the values are same or else differ within the range specified by the precision." name="008.js" filename="Data Access/Data Access DataItems/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Write: To a dataitem node that has property “ValuePrecision” a whole number integer (e.g. 1.0). Read back the value to determine that either the values are same or else differ within the range specified by the precision." name="009.js" filename="Data Access/Data Access DataItems/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Write: A value to a dataitem node (of type Float/Double) that matches its ValuePrecision. " name="010.js" filename="Data Access/Data Access DataItems/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Write: A value to a dataitem node (of type Float/Double) that exceeds its ValuePrecision. " name="011.js" filename="Data Access/Data Access DataItems/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Write: The current system time to a DataItem node (of type 'DateTime') that supports the ValuePrecision variable." name="012.js" filename="Data Access/Data Access DataItems/Test Cases/012.js" checkedState="0"/>
      <TestCase description="Subscribe: Add monitored items of DataItem type (each supported datatype) to an enabled subscription. Call publish to verify the values received match the expected values of each node." name="013.js" filename="Data Access/Data Access DataItems/Test Cases/013.js" checkedState="0"/>
      <TestCase description="Subscribe: Add monitored item for each supported data-type to an enabled subscription. Write the max value of the corresponding data-type. Call Publish." name="014.js" filename="Data Access/Data Access DataItems/Test Cases/014.js" checkedState="0"/>
      <TestCase description="Subscribe: Add monitored item (configured with an absolute dead filter value of 10) for each supported data-type to an enabled subscription. Call publish. Perform two writes to each item: 1) Will pass the deadband, 2) Will not pass the deadband. Call publish after each write." name="015.js" filename="Data Access/Data Access DataItems/Test Cases/015.js" checkedState="0"/>
      <TestCase description="Browse: The available forward-references of a DataItem node." name="016.js" filename="Data Access/Data Access DataItems/Test Cases/016.js" checkedState="0"/>
      <TestCase description="Browse: The available inverse-references of a DataItem node." name="017.js" filename="Data Access/Data Access DataItems/Test Cases/017.js" checkedState="0"/>
      <TestCase description="Browse: The available references (both directions) of a DataItem node." name="018.js" filename="Data Access/Data Access DataItems/Test Cases/018.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Get properties for all configured items." name="019.js" filename="Data Access/Data Access DataItems/Test Cases/019.js" checkedState="0"/>
      <TestCase description="Read: attributes Value, DataType, AccessLevel, and MinimumSamplingInterval." name="020.js" filename="Data Access/Data Access DataItems/Test Cases/020.js" checkedState="0"/>
      <TestCase description="Write: A  value using the wrong data-type to a dataitem node that has property &quot;Definition&quot;." name="Err-001.js" filename="Data Access/Data Access DataItems/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Write: A value using the wrong data-type to a dataitem node that has property &quot;ValuePrecision&quot;." name="Err-002.js" filename="Data Access/Data Access DataItems/Test Cases/Err-002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Data Access/Data Access DataItems/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support MultiStateDiscreteType Variables with corresponding Properties." name="Data Access MultiState" used="true">
     <InitTestCase description="" name="initialize.js" filename="Data Access/Data Access MultiState/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Type is defined in the address-space." name="000.js" filename="Data Access/Data Access MultiState/Test Cases/000.js" checkedState="0"/>
      <TestCase description="Read: A node of this type and check the EnumStrings variable exists." name="001.js" filename="Data Access/Data Access MultiState/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Read: Multiple nodes of this type in a single call." name="002.js" filename="Data Access/Data Access MultiState/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Write: to a Single node of this type, each value as supported by the enumeration length." name="003.js" filename="Data Access/Data Access MultiState/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Subscription: Subscribe to a node of this Type and then in a loop: write a Value, call Publish, compare received value vs written value." name="004.js" filename="Data Access/Data Access MultiState/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Subscription: Multiple nodes of this type. Writing values to each, calling Publish and comparing the values received match those written." name="005.js" filename="Data Access/Data Access MultiState/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Browse: EnumStrings variable." name="006.js" filename="Data Access/Data Access MultiState/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Browse: All Forward references." name="007.js" filename="Data Access/Data Access MultiState/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Browse: Browse a node of TwoStateDiscrete type requesting all Forward references." name="008.js" filename="Data Access/Data Access MultiState/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Browse: Browse a node of MultiState type requesting all Forward references." name="009.js" filename="Data Access/Data Access MultiState/Test Cases/009.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Request EnumValues and ValueAsText." name="010.js" filename="Data Access/Data Access MultiState/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Write: To EnumStrings property." name="011.js" filename="Data Access/Data Access MultiState/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Write: To ValueAsText property." name="012.js" filename="Data Access/Data Access MultiState/Test Cases/012.js" checkedState="0"/>
      <TestCase description="Write: A value that exceeds the range defined by EnumStrings property." name="Err-001.js" filename="Data Access/Data Access MultiState/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Write: Value as a string, e.g. &quot;2&quot;, but within bounds of EnumStrings length." name="Err-002.js" filename="Data Access/Data Access MultiState/Test Cases/Err-002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Data Access/Data Access MultiState/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support PercentDeadband filter when monitoring AnalogItemType Variables." name="Data Access PercentDeadBand" used="true">
     <InitTestCase description="" name="initialize.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: Specify a dataChange filter of DeadbandPercent of 0, monitoringMode is disabled." name="001.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies MonitoringMode = Sampling, Filter = PercentDeadband, DeadbandValue = 0. Calls Publish." name="002.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/002.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies MonitoringMode = Reporting, Filter = PercentDeadband,  DeadbandValue = 0. Issue 2 writes and call Publish for each write to verify that the written value is received.        " name="003.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/003.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies MonitoringMode = Reporting, QueueSize = 10, Filter = PercentDeadband, DeadbandValue = 10. Issues 5 writes within the 10% range and 5 outside of this range. Calls Publish to verify that only the dataChanges where the values are within the 10% fluctuation are received." name="004.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/004.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies MonitoringMode = Disabled, Filter = PercentDeadband, DeadbandValue = 0, Queue = 0. Calls Publish." name="005.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/005.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify 2 Nodes (from a subscription of 5) to use a deadband filter." name="006.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/006.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: 5 items, 2 are deadband = 99%. Write EURange.Low, EURange.High and somewhere in the middle." name="007.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/007.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Change existing DeadbandPercent to 0%. Check deadband functionality with Writes and calls to Publish." name="008.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/008.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Array types using DeadbandPercent=10%." name="009.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/009.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Array type using IndexRange=&quot;2:3&quot;." name="010.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/010.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: PercentDeadband of 10%." name="011.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/011.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: PercentDeadband-0; QueueSize=1; DiscardOldest=False. No QueueOverflow." name="014.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/014.js" checkedState="0"/>
      <TestCase description="Deadband testing with Filter of STATUS_0" name="015.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/015.js" checkedState="0"/>
      <TestCase description="Deadband testing with Filter of STATUS_VALUE_1" name="016.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/016.js" checkedState="0"/>
      <TestCase description="Deadband testing with Filter of STATUS_VALUE_TIMESTAMP_2" name="017.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/017.js" checkedState="0"/>
      <TestCase description="Deadband behavior for VQT is same as VQ" name="018.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/018.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify an attribute that is not VALUE. Expect Bad_FilterNotAllowed." name="Err-001.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Deadband value is 125% returns Bad_DeadbandFilterInvalid." name="Err-002.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Non-analog type results in Bad_FilterNotAllowed." name="Err-003.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Deadband on Types that are N/A such as Strings, Booleans etc." name="Err-004.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Deadband value of -1 expects Bad_DeadbandFilterInvalid." name="Err-005.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Data Access/Data Access PercentDeadBand/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support Semantic changes of AnalogItemType  items (EURange Property and/or EngineeringUnits Property). Support semantic change StatusCode bits where appropriate." name="Data Access Semantic Changes" used="true">
     <InitTestCase description="" name="initialize.js" filename="Data Access/Data Access Semantic Changes/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Write to EngineeringUnits." name="001.js" filename="Data Access/Data Access Semantic Changes/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Write to EngineeringUnits; do not acknowledge received Publish response." name="002.js" filename="Data Access/Data Access Semantic Changes/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Write to EURange." name="003.js" filename="Data Access/Data Access Semantic Changes/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Write to TwoStateDiscreteType.TrueState." name="004.js" filename="Data Access/Data Access Semantic Changes/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Write to TwoStateDiscreteType.FalseState." name="005.js" filename="Data Access/Data Access Semantic Changes/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Add an element to the MultiStateDiscreteType.EnumStrings array." name="006.js" filename="Data Access/Data Access Semantic Changes/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Remove an element from the MultiStateDiscreteType.EnumStrings array." name="007.js" filename="Data Access/Data Access Semantic Changes/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Subscribe to MultiStateDiscrete item and then change the value in the EnumStrings property." name="008.js" filename="Data Access/Data Access Semantic Changes/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Same as 008, but modifies multiple EnumStrings elements." name="009.js" filename="Data Access/Data Access Semantic Changes/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Multiple items, force a change in any property." name="010.js" filename="Data Access/Data Access Semantic Changes/Test Cases/010.js" checkedState="0"/>
      <TestCase description="2 sessions; subscription; check semanticsChanged bit." name="011.js" filename="Data Access/Data Access Semantic Changes/Test Cases/011.js" checkedState="0"/>
      <TestCase description="2-sessions; inverse behavior of 11." name="012.js" filename="Data Access/Data Access Semantic Changes/Test Cases/012.js" checkedState="0"/>
      <TestCase description="(SemanticChange) Change InstrumentRange, EURange, EngineeringUnits, or Title properties" name="013.js" filename="Data Access/Data Access Semantic Changes/Test Cases/013.js" checkedState="0"/>
      <TestCase description="(SemanticChange) YArrayItemType and XYArrayItemType property changes." name="014.js" filename="Data Access/Data Access Semantic Changes/Test Cases/014.js" checkedState="0"/>
      <TestCase description="(SemanticChange) ImageItemType property changes." name="015.js" filename="Data Access/Data Access Semantic Changes/Test Cases/015.js" checkedState="0"/>
      <TestCase description="(SemanticChange) CubeItemType property changes." name="016.js" filename="Data Access/Data Access Semantic Changes/Test Cases/016.js" checkedState="0"/>
      <TestCase description="(SemanticChange) NDimensionArrayType property changes." name="017.js" filename="Data Access/Data Access Semantic Changes/Test Cases/017.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Data Access/Data Access Semantic Changes/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support TwoStateDiscreteType Variables with corresponding Properties." name="Data Access TwoState" used="true">
     <InitTestCase description="" name="initialize.js" filename="Data Access/Data Access TwoState/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Type is defined in the address-space." name="000.js" filename="Data Access/Data Access TwoState/Test Cases/000.js" checkedState="0"/>
      <TestCase description="Read: The value of the Node, along with the TrueState and FalseState variables." name="001.js" filename="Data Access/Data Access TwoState/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Write: Multiple TwoStateDiscrete values." name="002.js" filename="Data Access/Data Access TwoState/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Write: Mutliple TwoStateDiscreteTypes, all values=FALSE." name="003.js" filename="Data Access/Data Access TwoState/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Write: Multiple TwoStateDiscrete types, alternating the Values (true, false, true, false...)" name="004.js" filename="Data Access/Data Access TwoState/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Subscription: Subscribe to a Node, write a Value, wait, call Publish, compare received value to Write. Do in loop." name="005.js" filename="Data Access/Data Access TwoState/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Subscription: Multiple nodes. Write. Call Publish. Compare values received. Do in a loop." name="006.js" filename="Data Access/Data Access TwoState/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Browsing: Query the Forward, then Inverse, then Both direction references!" name="007.js" filename="Data Access/Data Access TwoState/Test Cases/007.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Request both properties." name="008.js" filename="Data Access/Data Access TwoState/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Write: To TrueState and FalseState." name="009.js" filename="Data Access/Data Access TwoState/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Write: &quot;true&quot; to a TwoStateDiscrete. Expect BadTypeMismatch." name="Err-001.js" filename="Data Access/Data Access TwoState/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Write: &quot;TRUE&quot; to a TwoStateDiscrete. Expect BadTypeMismatch." name="Err-002.js" filename="Data Access/Data Access TwoState/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Write: Incorrect data-type [string]." name="Err-003.js" filename="Data Access/Data Access TwoState/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Write: Incorrect data-type [int]." name="Err-004.js" filename="Data Access/Data Access TwoState/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Write: Incorrect data-type [string]." name="Err-005.js" filename="Data Access/Data Access TwoState/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="Write: Incorrect data-type [int]." name="Err-006.js" filename="Data Access/Data Access TwoState/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="Write: Incorrect data-type [string]." name="Err-007.js" filename="Data Access/Data Access TwoState/Test Cases/Err-007.js" checkedState="0"/>
      <TestCase description="Write: Incorrect data-type [string]." name="Err-008.js" filename="Data Access/Data Access TwoState/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="Write: Incorrect data-type [string]." name="Err-009.js" filename="Data Access/Data Access TwoState/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="Write: Incorrect data-type [int]." name="Err-010.js" filename="Data Access/Data Access TwoState/Test Cases/Err-010.js" checkedState="0"/>
      <TestCase description="Write: Incorrect data-type [string]." name="Err-011.js" filename="Data Access/Data Access TwoState/Test Cases/Err-011.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Data Access/Data Access TwoState/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Provide Variables of ArrayItemType or one of its subtypes (YArayItemType, XYArrayItemType, ImageArrayType, CubeArrayType, NDimensionArrayType). The actual subtypes that supported will be listed. Support for this type include supporting all of the mandatory properties including AxisInformation." name="Data Access ArrayItemType" used="true">
     <InitTestCase description="" name="initialize.js" filename="Data Access/Data Access ArrayItemType/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Data Access/Data Access ArrayItemType/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Data Access/Data Access ArrayItemType/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports the Complex Number data type. This data type is available for any variable types that do not have other explict restrictions." name="Data Access ComplexNumber" used="true">
     <InitTestCase description="" name="initialize.js" filename="Data Access/Data Access ComplexNumber/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Data Access/Data Access ComplexNumber/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Data Access/Data Access ComplexNumber/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports the DoubleComplex Number data type. This data type is available for any variable types that do not have other explict restrictions." name="Data Access DoubleComplex Number" used="true">
     <InitTestCase description="" name="initialize.js" filename="Data Access/Data Access DoubleComplex Number/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Data Access/Data Access DoubleComplex Number/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Data Access/Data Access DoubleComplex Number/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="7" description="ConformanceUnits with focus on Server Endpoint Discovery" name="Discovery Services">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support the GetEndpoints Service to obtain all Endpoints of one Server.&#xa;This includes filtering based on Profiles." name="Discovery Get Endpoints" used="true">
     <InitTestCase description="" name="initialize.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="GetEndpoints: Use default parameters." name="001.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/001.js" checkedState="0"/>
      <TestCase description="GetEndpoints: Provide a list of supported locales." name="002.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/002.js" checkedState="0"/>
      <TestCase description="GetEndpoints: Provide a list of ProfileUris." name="003.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/003.js" checkedState="0"/>
      <TestCase description="GetEndpoints: Mix supported and unsupported locale ids." name="004.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/004.js" checkedState="0"/>
      <TestCase description="GetEndpoints: Provide a list of locales not conforming to RFC 3066." name="005.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/005.js" checkedState="0"/>
      <TestCase description="GetEndpoints: repeat test -001 100-times within 10-seconds." name="007.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/007.js" checkedState="0"/>
      <TestCase description="GetEndpoints: EndpointUrl contains unknown hostname" name="008.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/008.js" checkedState="0"/>
      <TestCase description="GetEndpoints: Multi-homed with multiple names." name="009.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/009.js" checkedState="0"/>
      <TestCase description="GetEndpoints: EndpointUrl contains a string that is not syntacticly a URL." name="010.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/010.js" checkedState="0"/>
      <TestCase description="GetEndpoints: unsupported profile URIs." name="011.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/011.js" checkedState="0"/>
      <TestCase description="GetEndpoints: Repeat test -010 100-times, in less than 10-seconds." name="012.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/012.js" checkedState="0"/>
      <TestCase description="GetEndpoints: ServerUri is identical in all areas (FindServers, GetEndpoints, Certificates etc.)" name="013.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/013.js" checkedState="0"/>
      <TestCase description="GetEndpoints: EndpointUrl=null" name="Err-001.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="GetEndpoints: AuthenticationToken in RequestHeader" name="Err-002.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/Err-002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Discovery Services/Discovery Get Endpoints/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Allow configuration of the Discovery Server URL where the Server will register itself" name="Discovery Configuration" used="true">
     <InitTestCase description="" name="initialize.js" filename="Discovery Services/Discovery Configuration/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Discovery Services/Discovery Configuration/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Discovery Services/Discovery Configuration/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="" name="Discovery Register" used="true">
     <InitTestCase description="" name="initialize.js" filename="Discovery Services/Discovery Register/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Discovery Services/Discovery Register/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Discovery Services/Discovery Register/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="" name="Discovery Register2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Discovery Services/Discovery Register2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Discovery Services/Discovery Register2/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Discovery Services/Discovery Register2/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Accept RegisterServers requests to maintain a list of Servers used for the FindServers Service." name="Discovery Accept Registrations" used="true">
     <InitTestCase description="" name="initialize.js" filename="Discovery Services/Discovery Accept Registrations/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Discovery Services/Discovery Accept Registrations/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Discovery Services/Discovery Accept Registrations/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="The Discovery Server must only accept RegisterServer requests if they are provided via a Securechannel. (Security mode can not be NONE)" name="Discovery Accept Registrations Security" used="true">
     <InitTestCase description="" name="initialize.js" filename="Discovery Services/Discovery Accept Registrations Security/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Discovery Services/Discovery Accept Registrations Security/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Discovery Services/Discovery Accept Registrations Security/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the FindServers Service only for itself." name="Discovery Find Servers Self" used="true">
     <InitTestCase description="" name="initialize.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="FindServers: Default parameters." name="001.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/001.js" checkedState="0"/>
      <TestCase description="FindServers: Provide endpoint description Url with an unknown hostname." name="002.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/002.js" checkedState="0"/>
      <TestCase description="FindServers: Repeat test in a loop of 100 iterations." name="004.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/004.js" checkedState="0"/>
      <TestCase description="FindServers: Provide a list of locales not conforming to RFC 3066." name="005.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/005.js" checkedState="0"/>
      <TestCase description="FindServers: EndpointUrl is a string but not syntactically a URL." name="008.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/008.js" checkedState="0"/>
      <TestCase description="FindServers: repeat -014 100-times within 10-seconds." name="009.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/009.js" checkedState="0"/>
      <TestCase description="FindServers: multi-homed PC returns endpoints based on IP/hostname filter." name="010.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/010.js" checkedState="0"/>
      <TestCase description="FindServers: EndpointUrl = null." name="Err-001.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="FindServers: Include AuthenticationToken in header." name="Err-002.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/Err-002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Discovery Services/Discovery Find Servers Self/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the FindServers Service with filter requests." name="Discovery Find Servers Filter" used="true">
     <InitTestCase description="" name="initialize.js" filename="Discovery Services/Discovery Find Servers Filter/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="FindServers: Filter by server URI." name="001.js" filename="Discovery Services/Discovery Find Servers Filter/Test Cases/001.js" checkedState="0"/>
      <TestCase description="FindServers: Filter by multiple locations." name="002.js" filename="Discovery Services/Discovery Find Servers Filter/Test Cases/002.js" checkedState="0"/>
      <TestCase description="FindServers: Mix supported and unsupported locale ids." name="003.js" filename="Discovery Services/Discovery Find Servers Filter/Test Cases/003.js" checkedState="0"/>
      <TestCase description="FindServers: Unmatched server URI." name="004.js" filename="Discovery Services/Discovery Find Servers Filter/Test Cases/004.js" checkedState="0"/>
      <TestCase description="FindServers: Unsupported locale id." name="005.js" filename="Discovery Services/Discovery Find Servers Filter/Test Cases/005.js" checkedState="0"/>
      <TestCase description="FindServers: Provide a list of supported locales." name="006.js" filename="Discovery Services/Discovery Find Servers Filter/Test Cases/006.js" checkedState="0"/>
      <TestCase description="FindServers: repeat -008 100-times within 10-seconds." name="007.js" filename="Discovery Services/Discovery Find Servers Filter/Test Cases/007.js" checkedState="0"/>
      <TestCase description="FindServers: repeat test -008 10,000-times; within 60-seconds." name="008.js" filename="Discovery Services/Discovery Find Servers Filter/Test Cases/008.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Discovery Services/Discovery Find Servers Filter/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Allow configuration of the Discovery Server URL where the Server will register itself.&#xa;Allow complete disabling of registration with a Discovery Server." name="Discovery Configuration" used="true">
     <InitTestCase description="" name="initialize.js" filename="Discovery Services/Discovery Configuration/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Discovery Services/Discovery Configuration/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Discovery Services/Discovery Configuration/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="8" description="Methods represent the function calls of Objects. Methods are invoked and return only after completion (successful or unsuccessful)." name="Method Services">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support the Call Service to call (invoke) a Method." name="Method Call" used="true">
     <InitTestCase description="" name="initialize.js" filename="Method Services/Method Call/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="No arguments, i.e. void method( void )" name="001.js" filename="Method Services/Method Call/Test Cases/001.js" checkedState="0"/>
      <TestCase description="In arguments, i.e. void method( in[] )" name="002.js" filename="Method Services/Method Call/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Out arguments, i.e. void method( out[] )" name="003.js" filename="Method Services/Method Call/Test Cases/003.js" checkedState="0"/>
      <TestCase description="In and Out arguments, i.e. void method( in[], out[] )" name="004.js" filename="Method Services/Method Call/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Invoke all methods on a Node that contains multiple Methods" name="005.js" filename="Method Services/Method Call/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Same method multiple times in single Call" name="006.js" filename="Method Services/Method Call/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Server.GetMonitoredItems during a subscription." name="016.js" filename="Method Services/Method Call/Test Cases/016.js" checkedState="0"/>
      <TestCase description="Invalid NodeId" name="Err-001.js" filename="Method Services/Method Call/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Valid NodeId; Invalid Method NodeId." name="Err-002.js" filename="Method Services/Method Call/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Omit required parameters" name="Err-003.js" filename="Method Services/Method Call/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Call method specify wrong argument types" name="Err-004.js" filename="Method Services/Method Call/Test Cases/Err-004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Method Services/Method Call/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="9" description="Clients define MonitoredItems to subscribe to data and Events. Each MonitoredItem identifies the item to be monitored and the Subscription to use to send Notifications." name="Monitored Item Services">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support alternate encoding when monitoring value Attributes.&#xa;By default, every Server has to support the encoding of the currently used Stack Profile ( i.e. binary with UA Binary Encoding and XML with XML Encoding). This ConformanceUnit - when supported" name="Monitor Alternate Encoding" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Alternate Encoding/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Request Default Binary." name="001.js" filename="Monitored Item Services/Monitor Alternate Encoding/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Encoding is Default XML." name="002.js" filename="Monitored Item Services/Monitor Alternate Encoding/Test Cases/002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Alternate Encoding/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the following MonitoredItem Services: CreateMonitoredItems, ModifyMonitoredItems, DeleteMonitoredItems, SetMonitoringMode." name="Monitor Basic" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Basic/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: Create a monitored item with the nodeId set to that of a non-Variable node and the attributeId set to a non-Value attribute. Call Publish." name="001.js" filename="Monitored Item Services/Monitor Basic/Test Cases/001.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify a single monitored item." name="002.js" filename="Monitored Item Services/Monitor Basic/Test Cases/002.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Single item; ReturnTimestamp=Source." name="003.js" filename="Monitored Item Services/Monitor Basic/Test Cases/003.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Single item; ReturnTimestamp=Server." name="004.js" filename="Monitored Item Services/Monitor Basic/Test Cases/004.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Single item; ReturnTimestamp=Both." name="005.js" filename="Monitored Item Services/Monitor Basic/Test Cases/005.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Single item; ReturnTimestamp=Neither." name="006.js" filename="Monitored Item Services/Monitor Basic/Test Cases/006.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify single monitoredItem, change queue length to 0." name="007.js" filename="Monitored Item Services/Monitor Basic/Test Cases/007.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify the samplingInterval to 10 msec for one item." name="009.js" filename="Monitored Item Services/Monitor Basic/Test Cases/009.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Change the SamplingInterval for all items, vary the scanrate." name="010.js" filename="Monitored Item Services/Monitor Basic/Test Cases/010.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify the QueueSize of the first item to zero." name="011.js" filename="Monitored Item Services/Monitor Basic/Test Cases/011.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify the QueueSize of the first item to maxInt." name="012.js" filename="Monitored Item Services/Monitor Basic/Test Cases/012.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: large loop of create/delete." name="014.js" filename="Monitored Item Services/Monitor Basic/Test Cases/014.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Script deletes all monitored items from a subscription." name="015.js" filename="Monitored Item Services/Monitor Basic/Test Cases/015.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Specifies a valid subscriptionId and multiple monitoredItemIds." name="016.js" filename="Monitored Item Services/Monitor Basic/Test Cases/016.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Specify valid item." name="017.js" filename="Monitored Item Services/Monitor Basic/Test Cases/017.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Modify the monitoring mode of 10 items (initial monitoring mode: reporting) with multiple items being set to each of the three modes (Disabled, Reporting, Sampling). Call publish before and after changing the mode and verify that datachange notifications are received only for the reporting items." name="018.js" filename="Monitored Item Services/Monitor Basic/Test Cases/018.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Change the ClientHandle for the first item to a very large number. " name="019.js" filename="Monitored Item Services/Monitor Basic/Test Cases/019.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Set monitoring mode to disabled for an already disabled monitor item. Call publish each time to verify that no notifications are received." name="020.js" filename="Monitored Item Services/Monitor Basic/Test Cases/020.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Set monitoring mode to sampling for a disabled monitor item. Call publish each time to verify that no notifications are received." name="021.js" filename="Monitored Item Services/Monitor Basic/Test Cases/021.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Set monitoring mode to reporting for a disabled monitor item. Call publish once when the monitoring mode is disabled and once when it has been changed to reporting. Verify that data is only received the second time." name="022.js" filename="Monitored Item Services/Monitor Basic/Test Cases/022.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Set monitoring mode to disabled for a sampling monitor item. Call publish each time to verify that no notifications are received." name="023.js" filename="Monitored Item Services/Monitor Basic/Test Cases/023.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Set monitoring mode to sampling for an already sampling monitor item. Call publish each time to verify that no notifications are received." name="024.js" filename="Monitored Item Services/Monitor Basic/Test Cases/024.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Set monitoring mode to reporting for a sampling monitor item. Call publish once when the monitoring mode is sampling and once when it has been changed to reporting. Verify that data is only received the second time." name="025.js" filename="Monitored Item Services/Monitor Basic/Test Cases/025.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Set monitoring mode to disabled for a reporting monitor item. Call publish once when the monitoring mode is reporting and once when it has been changed to disabled. Verify that data is only received the first time." name="026.js" filename="Monitored Item Services/Monitor Basic/Test Cases/026.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Set monitoring mode to sampling for a reporting monitor item. Call publish once when the monitoring mode is reporting and once when it has been changed to sampling. Verify that data is only received the first time." name="027.js" filename="Monitored Item Services/Monitor Basic/Test Cases/027.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Set monitoring mode to reporting for an already reporting monitor item. Call publish each time to verify notifications are received." name="028.js" filename="Monitored Item Services/Monitor Basic/Test Cases/028.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: 1 item, invalid subscritionId." name="Err-001.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: multiple items, invalid subscritionId." name="Err-002.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Multiple Invalid NodeIds." name="Err-003.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Invalid NodeId" name="Err-004.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Unknown NodeId." name="Err-005.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Invalid AttributeId." name="Err-006.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a Monitored Item using an Array node while specifying an invalid IndexRange specified using an incorrect syntax of “5:2” (which is backwards)." name="Err-007.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-007.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies an invalid IndexRange of “2-4” (hyphen is an incorrect character) for an array item." name="Err-008.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies an invalid IndexRange of “2:2” (not a range) for an array item." name="Err-009.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify an invalid samplingInterval (-10 ms)" name="Err-010.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-010.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify an invalid IndexRange of “-4:-2” (negative) for an array item." name="Err-011.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-011.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a monitored item using an ByteStringArray and StringArray node while specifying invalid IndexRange as: “[0:0],[2:1]”." name="Err-012.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-012.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a monitored item using an ByteStringArray and StringArray node while specifying invalid IndexRange as: “0-0,2-1”." name="Err-013.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-013.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify an invalid (out of bounds) IndexRange for a ByteStringArray node." name="Err-014-0.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-014-0.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify an invalid (out of bounds) IndexRange for a StringArray node." name="Err-014-1.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-014-1.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: TimestampsToReturn = a value not in the enum." name="Err-015.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-015.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: ItemsToCreate[] is empty." name="Err-016.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-016.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Specify an invalid subscriptionId." name="Err-017.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-017.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Specify an invalid monitoredItemId." name="Err-018.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-018.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: All invalid monitoredItemIds." name="Err-019.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-019.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Change the ClientHandle for the first item to a number already in use by another MonitoredItem. " name="Err-020.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-020.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Specify some valid and some invalid monitoredItemIds." name="Err-021.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-021.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Request unsupported filter, e.g. PercentDeadband." name="Err-022.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-022.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify the items in one subscription but specify the monitoredItemId of an item from another subscription." name="Err-023.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-023.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: ItemsToModify is empty." name="Err-024.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-024.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Specify a value for 'TimestampsToReturn' that is not in the enum." name="Err-025.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-025.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Specify invalid monitoredItemId." name="Err-026.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-026.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Specify multiple invalid monitoredItemIds." name="Err-027.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-027.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Specify multiple monitoredItemIds, some valid and some invalid Ids." name="Err-028.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-028.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Specify invalid subscriptionId." name="Err-029.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-029.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: MonitoredItemIds is empty." name="Err-030.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-030.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Set monitoring mode of at least one monitoreditemId belonging to a different subscription." name="Err-031.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-031.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Specify invalid subscriptionId." name="Err-032.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-032.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Specify Invalid monitoredItemId." name="Err-033.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-033.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Specify a valid subscriptionId and multiple invalid monitoredItemIds." name="Err-034.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-034.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Specify a valid subscriptionId, and multiple monitoredItemIds of which some are valid and some are invalid." name="Err-035.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-035.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Script specifies empty monitoredItemIds[]." name="Err-037.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-037.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Delete items from one Subscription, and make sure they other Subscription is not affected." name="Err-038.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-038.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies an invalid IndexRange of “-2:0” (negative) for an array item." name="Err-039.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-039.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies an invalid IndexRange of “0x2:0xF” (hex) for an array item." name="Err-040.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-040.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify 2d IndexRange &quot;2:3,1:2&quot; on a single dimension Array. Script checks ValueRank and ArrayDimensions." name="Err-041.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-041.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Request deadband when server doesnt support them." name="Err-042.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-042.js" checkedState="0"/>
      <TestCase description="Call ModifyMonitoredItems for a MonitoredItem in a subscription which was already created in another session." name="Err-043.js" filename="Monitored Item Services/Monitor Basic/Test Cases/Err-043.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Basic/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 2 MonitoredItems per Subscription.&#xa;This number has to be supported for at least half of the required Subscriptions for half of the required Sessions." name="Monitor Items 2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Items 2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: max items defined by this unit." name="001.js" filename="Monitored Item Services/Monitor Items 2/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Request more items than supported." name="Err-001.js" filename="Monitored Item Services/Monitor Items 2/Test Cases/Err-001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Items 2/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 10 MonitoredItems per Subscription." name="Monitor Items 10" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Items 10/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: 10 items." name="001.js" filename="Monitored Item Services/Monitor Items 10/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create 10 monitored items per subscription, with 3 subscriptions." name="002.js" filename="Monitored Item Services/Monitor Items 10/Test Cases/002.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify 10 items and revise their samplingIntervals." name="003.js" filename="Monitored Item Services/Monitor Items 10/Test Cases/003.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify 10 items where: 1) Sampling period alternates 5000 &amp; 500 msec. 2) MonitoringMode is 'Reporting' for first half of items and 'Disabled' for the remaining items. 3) QueueSize increments by 2 for each item. 4) DiscardOldest is True for first half of items and False for the remaining items." name="004.js" filename="Monitored Item Services/Monitor Items 10/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Create more items than supported by this unit." name="Err-001.js" filename="Monitored Item Services/Monitor Items 10/Test Cases/Err-001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Items 10/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 100 MonitoredItems per Subscription.&#xa;This number has to be supported for at least half of the required Subscriptions for half of the required Sessions." name="Monitor Items 100" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Items 100/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: 100 nodes" name="001.js" filename="Monitored Item Services/Monitor Items 100/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Add 100 items to 3 subscriptions." name="002.js" filename="Monitored Item Services/Monitor Items 100/Test Cases/002.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify 100 items." name="003.js" filename="Monitored Item Services/Monitor Items 100/Test Cases/003.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: request more items than supported." name="Err-001.js" filename="Monitored Item Services/Monitor Items 100/Test Cases/Err-001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Items 100/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 500 MonitoredItems per Subscription.&#xa;This number has to be supported for at least half of the required Subscriptions for half of the required Sessions." name="Monitor Items 500" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Items 500/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: Add 500 items to a subscription." name="001.js" filename="Monitored Item Services/Monitor Items 500/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Add 500 items per subscription, 3 subscriptions total." name="002.js" filename="Monitored Item Services/Monitor Items 500/Test Cases/002.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify 500 items." name="003.js" filename="Monitored Item Services/Monitor Items 500/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Add more items to a subscription than supported." name="Err-001.js" filename="Monitored Item Services/Monitor Items 500/Test Cases/Err-001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Items 500/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 5000 MonitoredItems per Subscription. Supported for at least half of the required Subscriptions for half of the required Sessions." name="Monitor Items 5000" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Items 5000/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: Add 5000 items to a subscription." name="001.js" filename="Monitored Item Services/Monitor Items 5000/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Add 5000 items per subscription, with 3 subscriptions." name="002.js" filename="Monitored Item Services/Monitor Items 5000/Test Cases/002.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify 5000 items." name="003.js" filename="Monitored Item Services/Monitor Items 5000/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Add more items to a subscription than the server can support." name="Err-001.js" filename="Monitored Item Services/Monitor Items 5000/Test Cases/Err-001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Items 5000/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="This ConformanceUnit does not require queueing when multiple value changes occur during a publish period.&#xa;I.e. the latest change will be sent in the Notification." name="Monitor QueueSize_1" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor QueueSize_1/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: QueueSize=Max UInt32; expects revision." name="001.js" filename="Monitored Item Services/Monitor QueueSize_1/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies queueSize = 1 and discardOldest = true. Writes 5 unique values and calls publish." name="002.js" filename="Monitored Item Services/Monitor QueueSize_1/Test Cases/002.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: QueueSize=1; DiscardOldest=false; Write numerous values and verify queueSize by calling Publish()." name="003.js" filename="Monitored Item Services/Monitor QueueSize_1/Test Cases/003.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Monitor all attributes except Value." name="004.js" filename="Monitored Item Services/Monitor QueueSize_1/Test Cases/004.js" checkedState="0"/>
      <TestCase description="ModifySubscription: modify a subscription so MaxNotificationsPerPublish=1; monitoredItem queueSize=1." name="005.js" filename="Monitored Item Services/Monitor QueueSize_1/Test Cases/005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor QueueSize_1/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 2 queue entries for MonitoredItems.&#xa;Servers often will adapt the queue size to the number of currently MonitoredItems. However, it is expected that Servers support this minimum queue size for at least one third of the supported Monitored" name="Monitor MinQueueSize_02" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: QueueSize=Max UInt32; expects revision." name="001.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateSubscription: 1 monitored item; subscription behaves as expected." name="002.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/002.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: QueueSize=2. Issue numerous writes and then call Publish() to verify the values received match what is expected." name="003.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/003.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: QueueSize=2; DiscardOldest=False; Issue numerous writes, and verify queueSize by calling Publish()." name="004.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/004.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Change the mode to Disabled, from Reporting. Verify the result by calling Publish." name="005.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/005.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Change the ClientHandle for the first item to another unique number." name="006.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/006.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify multiple monitoredItems, change queue length for all items, the first half at 0 the remainder at 2. " name="007.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/007.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Specify 25 items to modify, where: 1) Sampling period alternates 5000 &amp; 500 msec. 2) MonitoringMode is 'Reporting' for first half of items and 'Disabled' for the remaining items. 3) QueueSize increments by 2 for each item.4) DiscardOldest is True for first half of items and False for the remaining items." name="008.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/008.js" checkedState="0"/>
      <TestCase description="ModifySubscription: Revise MaxNotificationsPerPublish to 10 (from 0). DiscardOldest=FALSE." name="009.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/009.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Change ClientHandle." name="010.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Overflow the queue due to ModifyMonitoredItems" name="011.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Repeat 011 but with DiscardOldest=false" name="012.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/012.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor MinQueueSize_02/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 5 queue entries for MonitoredItems.&#xa;Servers often will adapt the queue size to the number of currently MonitoredItems. However, it is expected that Servers support this minimum queue size for at least one third of the supported Monitored" name="Monitor MinQueueSize_05" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor MinQueueSize_05/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: RequestedQueueSize=MaxUInt32." name="001.js" filename="Monitored Item Services/Monitor MinQueueSize_05/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: QueueSize=3" name="002.js" filename="Monitored Item Services/Monitor MinQueueSize_05/Test Cases/002.js" checkedState="0"/>
      <TestCase description="QueueSize=5; DiscardOldest=true. Test overflow." name="003.js" filename="Monitored Item Services/Monitor MinQueueSize_05/Test Cases/003.js" checkedState="0"/>
      <TestCase description="QueueSize=5; DiscardOldest=false. Test overflow." name="004.js" filename="Monitored Item Services/Monitor MinQueueSize_05/Test Cases/004.js" checkedState="0"/>
      <TestCase description="CreateSubscription: maxNotifications=1; queueSize=3" name="005.js" filename="Monitored Item Services/Monitor MinQueueSize_05/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Overflow the queue due to ModifyMonitoredItems" name="006.js" filename="Monitored Item Services/Monitor MinQueueSize_05/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Repeat 007 but with DiscardOldest=false" name="007.js" filename="Monitored Item Services/Monitor MinQueueSize_05/Test Cases/007.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor MinQueueSize_05/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 10 queue entries for MonitoredItems.&#xa;Servers often will adapt the queue size to the number of currently MonitoredItems. However, it is expected that Servers support this minimum queue size for at least one third of the supported Monitored" name="Monitor MinQueueSize_10" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor MinQueueSize_10/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: RequestedQueueSize=MaxUInt32." name="001.js" filename="Monitored Item Services/Monitor MinQueueSize_10/Test Cases/001.js" checkedState="0"/>
      <TestCase description="QueueSize=10; DiscardOldest=true. Test overflow." name="002.js" filename="Monitored Item Services/Monitor MinQueueSize_10/Test Cases/002.js" checkedState="0"/>
      <TestCase description="QueueSize=10; DiscardOldest=false. Test overflow." name="003.js" filename="Monitored Item Services/Monitor MinQueueSize_10/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Overflow the queue due to ModifyMonitoredItems" name="004.js" filename="Monitored Item Services/Monitor MinQueueSize_10/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Repeat 005 but with DiscardOldest=false" name="005.js" filename="Monitored Item Services/Monitor MinQueueSize_10/Test Cases/005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor MinQueueSize_10/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="This ConformanceUnit is for events. The server is to allowcate as large a queue as it is capable of and return it as the revisedQueueSize. This required in Part 4 for event subscriptions." name="Monitor QueueSize_ServerMax" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor QueueSize_ServerMax/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Monitored Item Services/Monitor QueueSize_ServerMax/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor QueueSize_ServerMax/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support creation of MonitoredItems for Attribute value changes. This includes support of the IndexRange to select a single element or a range of elements when the Attribute value is an array." name="Monitor Value Change" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: Call using &quot;default&quot; parameters (defined in Test Lab Part 8 document section 5.9.1)" name="001.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Disabled; Filter=null; Queue=1." name="002.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/002.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Disabled; Filter=Off; Queue=0." name="004.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/004.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Sampling; Filter=Off; Queue=1." name="005.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/005.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Sampling; Filter=Off; Queue=0." name="006.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/006.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Reporting; Filter=Off." name="007.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/007.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Reporting; Filter=Off; Queue=0." name="008.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/008.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Reporting; Filter=Off; Queue=1; Timestamp=Source." name="009.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/009.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Reporting; Filter=Off; Queue=1; Timestamp=Server." name="010.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/010.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Reporting; Filter=Off; Queue=1; Timestamp=Both." name="011.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/011.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Reporting; Filter=Off; Queue=1; Timestamps=Neither." name="012.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/012.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Arrays of each type are verified with a call to Publish()." name="013.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/013.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Arrays with IndexRange &quot;2:4&quot; are verified with Publish() and Writes() invoked to validate dataChanges occur when relevent." name="014.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/014.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Arrays using IndexRange of 'last 3 elements' are verified with calls to Publish(), with Writes() being invoked also to verify dataChanges are sent when applicable." name="015.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/015.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: User does not have access." name="016.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/016.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies a samplingInterval of 0 ms." name="017.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/017.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies samplingInterval of -1 ms." name="018.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/018.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies samplingInterval of max duration (max real value)." name="019.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/019.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItem: IndexRange varied on a ByteStringArray." name="020.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/020.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script creates multiple monitored items, with both valid and invalid nodeIds" name="021.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/021.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: -1 Scanrate" name="022.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/022.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a MonitoredItem of type ByteString, specify an IndexRange of “1”." name="023.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/023.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a MonitoredItem of type String, specify an IndexRange of “1”." name="024.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/024.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a MonitoredItem of type ByteString, specify an IndexRange of “2:3”." name="025.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/025.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a MonitoredItem of type String, specify an IndexRange of “2:3”." name="026.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/026.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a MonitoredItem of type ByteString, specify an IndexRange that would retrieve the last 3 characters of the string." name="027.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/027.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a MonitoredItem of type String, specify an IndexRange that would retrieve the last 3 characters of the string." name="028.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/028.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a MonitoredItem of type ByteStringArray, specify an IndexRange of “1:2,2:3”." name="029.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/029.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a MonitoredItem of type StringArray, specify an IndexRange of “0:2,0:2”." name="030.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/030.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a MonitoredItem of type ByteStringArray, specify an IndexRange of “1,2”." name="031.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/031.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a MonitoredItem of type StringArray, specify an IndexRange of “1,2”." name="032.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/032.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: DeadbandType=None &amp; Trigger=StatusValue; Write StatusCode to Value (but not value) and call Publish." name="033.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/033.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: DeadbandType=None &amp; Trigger=Status; Write to StatusCode and Value and call Publish." name="034.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/034.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Writing of V, VQ and then the same values (no change)." name="035.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/035.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Using IndexRange, change the size of the array and verify with Publish." name="036.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/036.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Non-variable node, non-Value attribute." name="037.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/037.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: IndexRange varies on 2d string array." name="038.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/038.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: SamplingInterval=0." name="039.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/039.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: ByteString first 3 elements" name="040.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/040.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify an item which is an multi-dimensional array. Do this for all supported data types." name="041.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/041.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify an item which is a multi-dimensional array and use the IndexRange parameter to specify which element(s) within the array should constitute a value change. The IndexRange in this case is the first index of all dimensions. Do this for all supported data types." name="042.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/042.js" checkedState="0"/>
      <TestCase description="Create a MonitoredItem of every supported array data type, while specifying an IndexRange where the lower bound is inside the array size but the upper bound is outside of the array size. In such a scenario the server is required to provide the partial result it has." name="043.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/043.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Script specifies an invalid IndexRange outside the bounds of the array item." name="Err-001.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Create a monitored item with index range where the specified attribute is not an array or structure for various data types." name="Err-002.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/Err-002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Value Change/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support for complex Event filters, where complex is defined as supporting the complex filter operands" name="Monitor Complex Event Filter" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Complex Event Filter/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Monitored Item Services/Monitor Complex Event Filter/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Complex Event Filter/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support Deadband Filter" name="Monitor Items Deadband Filter" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: Mode=Disabled; Filter=On; Queue=0." name="001.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Sampling; Filter=On; Queue=1." name="002.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/002.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Sampling; Filter=On; Queue=0." name="003.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/003.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Reporting; Filter=On." name="004.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/004.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Mode=Reporting; Filter=On; Queue=0." name="005.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/005.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify a deadbandAbsolute for monitoredItems while varying the Attribute. We expect non-Value items to fail." name="006.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/006.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify a filter using deadbandAbsolute of 2 or 2.22. Write values and call Publish() to verify the deadband is being obeyed." name="007.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/007.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify a filter using deadbandAbsolute of 1 or 0.25. Write values and call Publish() to verify the deadband is being obeyed." name="008.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/008.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify a filter using deadbandAbsolute of 250 or 220.5. Write values and call Publish() to verify the deadband is being obeyed." name="009.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/009.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Deadbands against first-element of Arrays." name="010.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/010.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: First-element of Array." name="011.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/011.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: IndexRange &quot;middle-two&quot; on Arrays." name="012.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/012.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: DeadbandAbsolute; array items; indexRange=&quot;1:3&quot;; vary writes." name="013.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/013.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: DeadbandAbsolute=10 on Scalar arrays varying IndexRange." name="014.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/014.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: DeadbandAbsolute=10; Array types; change size of array." name="015.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/015.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: IndexRange=&quot;full&quot;" name="016.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/016.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Deadbands on Arrays" name="018.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/018.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: Specify an attribute (NOT the .Value attribute) to monitor for change, and specify a filter criteria: Absolute deadband and Percent deadband." name="Err-001.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: DeadbandAbsolute on non-Numeric Nodes returns Bad_FilterNotAllowed." name="Err-002.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: DeadbandAbsolute specified on a String Node where the value of the string is actually a number. Result = Bad_FilterNotAllowed." name="Err-003.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Modify an attribute (not the .Value attribute)  and specify a filter." name="Err-004.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: DeadbandAbsolute on a String node that contains a numeric Value. Bad_FilterNotAllowed expected." name="Err-005.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="ModifyMonitoredItems: Unsupported deadband check (Percent)" name="Err-006.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/Err-006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Items Deadband Filter/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the SetTriggering Service to create and/or delete triggering links for a triggering item." name="Monitor Triggering" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="SetTriggering: Specify a single subscriptionId, with 1 trigger (linked to 2 monitoredItems)." name="001.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/001.js" checkedState="0"/>
      <TestCase description="SetTriggering: Add 2 LinksToAdd." name="002.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/002.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specifies 1 LinkToRemove." name="003.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/003.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specifies multiple LinksToRemove." name="004.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/004.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specify multiple linksToAdd[] and linksToRemove[] at the same time." name="005.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/005.js" checkedState="0"/>
      <TestCase description="SetTriggering: Filter uses DeadbandAbsolute of 5 and 0.501 and then invokes Write() to check the deadband is filtering correctly." name="006.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/006.js" checkedState="0"/>
      <TestCase description="SetTriggering: Create an infinite loop scenario where: Item1->Item2; and Item2->Item1. Call Publish() several times to verify the callback count == 1." name="007.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/007.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specify multiple valid linksToAdd and linksToRemove, and 1 item that is in both linksToAdd and linksToRemove." name="008.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/008.js" checkedState="0"/>
      <TestCase description="SetTriggering: TriggeringNode=Reporting; Linked=Sampling." name="009.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/009.js" checkedState="0"/>
      <TestCase description="SetTriggering: TriggeredItem=Enabled; 1 item Added=Reporting; Write to TriggeredItem. Call Publish(). Expect both items in Publish() results." name="010.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/010.js" checkedState="0"/>
      <TestCase description="SetTriggering: TriggeredItem=Enabled; 4 items Added, 2xDisabled and 2xReporting; Write to TriggeredItem. Call Publish(). Expect triggeringItem &amp; disabled linkedItems in Publish() results." name="011.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/011.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specify the same item in both linksToAdd and linksToRemove." name="012.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/012.js" checkedState="0"/>
      <TestCase description="SetTriggering: TriggeredItem=Reporting; 1 item Added=Reporting; Write to TriggeredItem. Call Publish(). Expect all items in Publish() results." name="013.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/013.js" checkedState="0"/>
      <TestCase description="SetTriggering: Trigger mode=Sampling; LinkedItems mode=Reporting." name="014.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/014.js" checkedState="0"/>
      <TestCase description="SetTriggering: TriggeringItem=Reporting; 1 linksToAdd=same item as triggeringItem." name="015.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/015.js" checkedState="0"/>
      <TestCase description="SetTriggering: TriggeredItem=Disabled; 1 item Added=Reporting; Write to TriggeredItem. Call Publish(). Expect linkedItem in Publish() results." name="016.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/016.js" checkedState="0"/>
      <TestCase description="SetTriggering: TriggeredItem=Disabled; 4 items Added, 2xDisabled and 2xReporting; Write to TriggeredItem. Call Publish(). Expect disabled linkedItems in Publish() results." name="017.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/017.js" checkedState="0"/>
      <TestCase description="SetTriggering: TriggeringItem=Disabled; 1 linksToAdd=same item as triggeringItem." name="018.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/018.js" checkedState="0"/>
      <TestCase description="SetTriggering: TriggeredItem=Disabled; 1 item Added=Disabled; Write to TriggeredItem. Call Publish(). Expect triggeringItem in Publish() results." name="019.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/019.js" checkedState="0"/>
      <TestCase description="SetTriggering: Deadband testing of Linked items." name="020.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/020.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Script deletes an item that is configured for triggering. Verified by invoking setTriggering(), which is expected to FAIL." name="021.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/021.js" checkedState="0"/>
      <TestCase description="DeleteMonitoredItems: Specify valid Ids for a monitored item that has been linked to a triggerItemId." name="022.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/022.js" checkedState="0"/>
      <TestCase description="SetTriggering: test that a deleted trigger is indeed deleted." name="023.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/023.js" checkedState="0"/>
      <TestCase description="SetTriggering: Remove a link specifying a NodeId that was previously deleted from the subscription." name="024.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/024.js" checkedState="0"/>
      <TestCase description="Use non-numeric nodes to create a trigger and linked items (Mode=Sampling). Write to the triggering item and check the linked items are returned as appropriate." name="025.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/025.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specify invalid subscriptionId." name="Err-001.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specifies invalid TriggeringItemId." name="Err-002.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specify invalid linkToAdd." name="Err-003.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specifies some valid and invalid LinksToAdd." name="Err-004.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specifies invalid LinksToRemove." name="Err-005.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="SetTriggering: Specifies some valid and invalid LinksToRemove." name="Err-006.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="SetTriggering: Remove the same link twice." name="Err-007.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-007.js" checkedState="0"/>
      <TestCase description="SetTriggering: LinksToAdd and LinksToRemove are both empty." name="Err-008.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="SetTriggering: Script specifies items from different subscriptions for triggeringItemId and linksToAdd[]. The subscriptionID used for triggering is of the subscription that the triggeringItemId belongs to." name="Err-009.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="SetTriggering: Script specifies items from different subscriptions for triggeringItemId and linksToAdd[]. The subscriptionID used for triggering is of the subscription that the linksToAdd belongs to." name="Err-010.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-010.js" checkedState="0"/>
      <TestCase description="SetTriggering: Script specifies items from different subscriptions for triggeringItemId and linksToRemove[]. The subscriptionID used for triggering is of the subscription that the triggeringItemId belongs to." name="Err-011.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/Err-011.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Triggering/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support creation of MonitoredItems for a &quot;Notifier Attribute&quot; for the purpose of Event Notification." name="Monitor Events" used="true">
     <InitTestCase description="" name="initialize.js" filename="Monitored Item Services/Monitor Events/Test Cases/initialize.js" checkedState="1"/>
     <TestCases>
      <TestCase description="CreateMonitoredItems: Monitors the SERVER object for events. Invokes Write() to cause events to occur." name="001.js" filename="Monitored Item Services/Monitor Events/Test Cases/001.js" checkedState="1"/>
      <TestCase description="CreateMonitoredItems: Monitor the SERVER object specifying a filter of a specific NodeId (node is an Array) and the invoke Write() calls to write values to the array object -outside of IndexRange- verifying events are NOT being received." name="002.js" filename="Monitored Item Services/Monitor Events/Test Cases/002.js" checkedState="1"/>
      <TestCase description="CreateMonitoredItems: Monitor the server object while specifying an Event filter that defines a specific node. Write() to various nodes including the one in the filter. Call Publish(), we expect only the event to be received for the node specified in the filter." name="003.js" filename="Monitored Item Services/Monitor Events/Test Cases/003.js" checkedState="1"/>
      <TestCase description="CreateMonitoredItems: Specify an event filter on a Node that does not support Events." name="Err-001.js" filename="Monitored Item Services/Monitor Events/Test Cases/Err-001.js" checkedState="1"/>
      <TestCase description="" name="example.js" filename="Monitored Item Services/Monitor Events/Test Cases/example.js" checkedState="1"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Monitored Item Services/Monitor Events/Test Cases/cleanup.js" checkedState="1"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="10" description="Bundles ConformanceUnits for all Services to add and delete AddressSpace Nodes and References." name="Node Management Services">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support the DeleteReferences Service to delete one or more References of a Node." name="Node Management Delete Ref" used="true">
     <InitTestCase description="" name="initialize.js" filename="Node Management Services/Node Management Delete Ref/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="" name="test.js" filename="Node Management Services/Node Management Delete Ref/Test Cases/test.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Node Management Services/Node Management Delete Ref/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the AddReferences Service to add one or more References to one or more Nodes." name="Node Management Add Ref" used="true">
     <InitTestCase description="" name="initialize.js" filename="Node Management Services/Node Management Add Ref/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="" name="test.js" filename="Node Management Services/Node Management Add Ref/Test Cases/test.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Node Management Services/Node Management Add Ref/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the DeleteNodes Service to delete one or more Nodes from the AddressSpace." name="Node Management Delete Node" used="true">
     <InitTestCase description="" name="initialize.js" filename="Node Management Services/Node Management Delete Node/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="NodesToDelete is empty" name="Err-001.js" filename="Node Management Services/Node Management Delete Node/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Specify more nodes than the server reports" name="Err-002.js" filename="Node Management Services/Node Management Delete Node/Test Cases/Err-002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Node Management Services/Node Management Delete Node/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the AddNodes service to add one or more Nodes into the AddressSpace." name="Node Management Add Node" used="true">
     <InitTestCase description="" name="initialize.js" filename="Node Management Services/Node Management Add Node/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Add a node using typical parameters" name="001.js" filename="Node Management Services/Node Management Add Node/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Vary BrowseName and ReferenceTypeId (based on settings)" name="002.js" filename="Node Management Services/Node Management Add Node/Test Cases/002.js" checkedState="0"/>
      <TestCase description="AddNode varying the NodeClass." name="003.js" filename="Node Management Services/Node Management Add Node/Test Cases/003.js" checkedState="0"/>
      <TestCase description="empty NodesToAdd parameter" name="Err-001.js" filename="Node Management Services/Node Management Add Node/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Add more nodes than reported in ServerCapabilities" name="Err-002.js" filename="Node Management Services/Node Management Add Node/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="ParentNodeId unknown" name="Err-003.js" filename="Node Management Services/Node Management Add Node/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="ReferenceTypeId is unknown" name="Err-004.js" filename="Node Management Services/Node Management Add Node/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Use incorrect Reference type" name="Err-005.js" filename="Node Management Services/Node Management Add Node/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="Specify RequestdeNewNodeId even if not supported" name="Err-006.js" filename="Node Management Services/Node Management Add Node/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="Specify a RequestedNewNodeId and NamespaceIndex is 0." name="Err-007.js" filename="Node Management Services/Node Management Add Node/Test Cases/Err-007.js" checkedState="0"/>
      <TestCase description="RequestedNodeId already in use" name="Err-008.js" filename="Node Management Services/Node Management Add Node/Test Cases/Err-008.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Node Management Services/Node Management Add Node/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="11" description="Covers all transport and encoding combinations that are specified in Part 6 of the OPC UA specification." name="Protocol and Encoding">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Allow administration of the Endpoints and the port number used by the Endpoints." name="Protocol Configuration" used="true">
     <InitTestCase description="" name="initialize.js" filename="Protocol and Encoding/Protocol Configuration/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Protocol and Encoding/Protocol Configuration/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Protocol and Encoding/Protocol Configuration/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Transport" description="Support &quot;SOAP/HTTP&quot; transport with UA Binary Encoding and with WS Secure Conversation." name="Protocol Soap Binary WS Security" used="true">
     <InitTestCase description="" name="initialize.js" filename="Protocol and Encoding/Protocol Soap Binary WS Security/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Protocol and Encoding/Protocol Soap Binary WS Security/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Protocol and Encoding/Protocol Soap Binary WS Security/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Transport" description="Support the UA TCP transport protocol with UA Binary Encoding and with UA Secure Conversation." name="Protocol TCP Binary UA Security" used="true">
     <InitTestCase description="" name="initialize.js" filename="Protocol and Encoding/Protocol TCP Binary UA Security/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Protocol and Encoding/Protocol TCP Binary UA Security/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Protocol and Encoding/Protocol TCP Binary UA Security/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Transport" description="Support &quot;SOAP/HTTP&quot; transport with XML Encoding and with WS Secure Conversation." name="Protocol Soap Xml WS Security" used="true">
     <InitTestCase description="" name="initialize.js" filename="Protocol and Encoding/Protocol Soap Xml WS Security/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Protocol and Encoding/Protocol Soap Xml WS Security/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Protocol and Encoding/Protocol Soap Xml WS Security/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="12" description="The design of OPC UA ensures that vendors can create redundant Clients and redundant Servers in a consistent manner. Redundancy may be used for high availability, fault tolerance and load balancing." name="Redundancy">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support transparent Server redundancy." name="Redundancy Server Transparent" used="true">
     <InitTestCase description="" name="initialize.js" filename="Redundancy/Redundancy Server Transparent/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Redundancy/Redundancy Server Transparent/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Redundancy/Redundancy Server Transparent/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support Server-based redundancy." name="Redundancy Server" used="true">
     <InitTestCase description="" name="initialize.js" filename="Redundancy/Redundancy Server/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Redundancy/Redundancy Server/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Redundancy/Redundancy Server/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="13" description="Security related ConformanceUnits that can be profiled." name="Security">
   <ConformanceUnits>
    <ConformanceUnit category="Security" description="A suite of algorithms that does NOT provide any security settings&#xa;SymmetricSignatureAlgorithm&#x9;-&#xa;SymmetricEncryptionAlgorithm&#x9;-&#xa;AsymmetricSignatureAlgorithm&#x9;-&#xa;SymmetricKeyWrapAlgorithm&#x9;-&#xa;AsymmetricEncryptionAlgorithm&#x9;-&#xa;KeyDerivationAlgorithm&#x9;PSha1&#x9;(h" name="Security None" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security None/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Insecure channel. Provide certificates &amp; nonce. Expects channel to open." name="001.js" filename="Security/Security None/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Insecure channel. Provide nonce, no certificates. Expects channel to open." name="002.js" filename="Security/Security None/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Insecure channel. Provide Nonce, but no certificates. Expect channel to open." name="003.js" filename="Security/Security None/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Insecure channel. Do not pass certificate or nonce. Expect secure channel to open." name="004.js" filename="Security/Security None/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Provide an invalid Certificate (random ByteString). Expects channel to open." name="005.js" filename="Security/Security None/Test Cases/005.js" checkedState="0"/>
      <TestCase description="DoS attempt by consuming Channels" name="006.js" filename="Security/Security None/Test Cases/006.js" checkedState="0"/>
      <TestCase description="DoS attack #2; consume SecureChannels, but CreateSessions in some." name="007.js" filename="Security/Security None/Test Cases/007.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security None/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="User name password combination. Specific encryption of the password is required if no Message encryption is used." name="Security User Name Password" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security User Name Password/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Insecure channel. Authenticate with success." name="001.js" filename="Security/Security User Name Password/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Secure channel. Authenticate with success." name="002.js" filename="Security/Security User Name Password/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Insecure channel; Empty username and password. Expect Bad_IdentityTokenInvalid." name="003.js" filename="Security/Security User Name Password/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Insecure channel. Non-existent user. Expecting Bad_IdentityTokenRejected." name="004.js" filename="Security/Security User Name Password/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Insecure channel. Valid username, password empty (serverNonce added). Expected result, Good or Bad_IdentityTokenRejected." name="005.js" filename="Security/Security User Name Password/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Insecure channel. Valid username, password empty (serverNonce missing). Expected result, Good or Bad_IdentityTokenRejected." name="006.js" filename="Security/Security User Name Password/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Insecure channel. Password is wrong. Expected Bad_IdentityTokenRejected." name="007.js" filename="Security/Security User Name Password/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Insecure channel. Username doesnt exist. Expects Bad_IdentityTokenRejected." name="008.js" filename="Security/Security User Name Password/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Insecure channel. policyId does not match server value. Expects Bad_IdentityTokenInvalid." name="009.js" filename="Security/Security User Name Password/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Insecure channel. encryptionAlgorithm does not match server value. Expects Bad_IdentityTokenInvalid." name="010.js" filename="Security/Security User Name Password/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Secure channel. encryptionAlgorithm=&quot;&quot;. Expects Bad_IdentityTokenInvalid." name="011.js" filename="Security/Security User Name Password/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Insecure channel. Valid username/password; user has no access. Expects Bad_UserAccessDenied." name="012.js" filename="Security/Security User Name Password/Test Cases/012.js" checkedState="0"/>
      <TestCase description="Call GetEndpoints and verify that each provided PolicyId for UserIdentificationTokens is unique." name="015.js" filename="Security/Security User Name Password/Test Cases/015.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security User Name Password/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Support the OPC defined xml schema for importing and export security configuration information." name="Security Administration - XML Schema" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Administration - XML Schema/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security Administration - XML Schema/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Administration - XML Schema/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="A public/private key pair. Must be able to be adminstrativly disabled" name="Security User X509" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security User X509/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Valid certificate for a valid connection" name="001.js" filename="Security/Security User X509/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Valid certificate for not-trusted user." name="002.js" filename="Security/Security User X509/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Not yet valid certificate; trusted" name="004.js" filename="Security/Security User X509/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Expired certificate" name="005.js" filename="Security/Security User X509/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Revoked user X509 cert." name="006.js" filename="Security/Security User X509/Test Cases/006.js" checkedState="0"/>
      <TestCase description="ApplicationInstanceCertificate instead." name="007.js" filename="Security/Security User X509/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Specify different PolicyId" name="008.js" filename="Security/Security User X509/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Invalid user certificate." name="009.js" filename="Security/Security User X509/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Specify a valid certificate that has been issued by a local (i.e. not commercial CA like Verisign /Comodo etc.) certificate authority that is not trusted." name="010.js" filename="Security/Security User X509/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Specify a valid certificate that has been issued by a local (i.e. not commercial CA like Verisign /Comodo etc.) certificate authority that is trusted." name="011.js" filename="Security/Security User X509/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Specify a valid, trusted certificate that has been issued by a local (i.e. not commercial CA like Verisign /Comodo etc.) certificate authority that is not trusted but known." name="013.js" filename="Security/Security User X509/Test Cases/013.js" checkedState="0"/>
      <TestCase description="Specify a valid, not trusted certificate that has been issued by a local (i.e. not commercial CA like Verisign /Comodo etc.) certificate authority that is not trusted but known." name="014.js" filename="Security/Security User X509/Test Cases/014.js" checkedState="0"/>
      <TestCase description="Specify a not trusted certificate that has been revoked, and a server-specified policyId." name="015.js" filename="Security/Security User X509/Test Cases/015.js" checkedState="0"/>
      <TestCase description="Specify a valid/trusted user certificate and provide an empty UserIdentitySignature." name="016.js" filename="Security/Security User X509/Test Cases/016.js" checkedState="0"/>
      <TestCase description="Specify a valid/trusted user certificate and provide an invalid UserIdentitySignature." name="017.js" filename="Security/Security User X509/Test Cases/017.js" checkedState="0"/>
      <TestCase description="Specify a valid/trusted user certificate and provide an UserIdentitySignature created using an invalid Algorithm." name="018.js" filename="Security/Security User X509/Test Cases/018.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security User X509/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Certificate will be validated as specified in OPC UA Part 4. This includes among others structure and signature examination. Allowing for some validation errors to be suppressed by administration directive." name="Security Certificate Validation" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Certificate Validation/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Insecure channel. Activate a session. Validate certificate per specification. Expects successful connection and valid certificate." name="001.js" filename="Security/Security Certificate Validation/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Connect using a client certificate signed by a not trusted but known CA where there is no revocation list available." name="002.js" filename="Security/Security Certificate Validation/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Attempt a secure session and send an empty clientCertificate." name="004.js" filename="Security/Security Certificate Validation/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Secure channel. Untrusted certificate. Expects BadSecurityChecksFailed." name="005.js" filename="Security/Security Certificate Validation/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Secure channel. Expired certificate. Expects Good or BadCertificateTimeInvalid" name="007.js" filename="Security/Security Certificate Validation/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Secure channel. Not-yet-valid certificate. Expects Good or BadCertificateTimeInvalid." name="008.js" filename="Security/Security Certificate Validation/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Secure channel. Issuer is unknown. Expects BadSecurityChecksFailed." name="009.js" filename="Security/Security Certificate Validation/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Secure channel. Certificate signed with wrong key. Expects BadSecurityChecksFailed." name="010.js" filename="Security/Security Certificate Validation/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Using an insecure connection (Security=None), activate a session while sending a certificate that has been revoked." name="013.js" filename="Security/Security Certificate Validation/Test Cases/013.js" checkedState="0"/>
      <TestCase description="Attempt a secure Channel and send a CA certificate." name="029.js" filename="Security/Security Certificate Validation/Test Cases/029.js" checkedState="0"/>
      <TestCase description="Connect with expired/untrusted certificate" name="033.js" filename="Security/Security Certificate Validation/Test Cases/033.js" checkedState="0"/>
      <TestCase description="Secure channel. Issued certificate. Expects Good" name="037.js" filename="Security/Security Certificate Validation/Test Cases/037.js" checkedState="0"/>
      <TestCase description="Encrypted channel using Revoked certificate" name="038.js" filename="Security/Security Certificate Validation/Test Cases/038.js" checkedState="0"/>
      <TestCase description="Connect using an (trusted) issued certificate of a CA that has no revocation list available." name="042.js" filename="Security/Security Certificate Validation/Test Cases/042.js" checkedState="0"/>
      <TestCase description="Connect using an (untrusted) issued certificate of a CA that has no revocation list available." name="043.js" filename="Security/Security Certificate Validation/Test Cases/043.js" checkedState="0"/>
      <TestCase description="Connect using an (trusted) issued certificate of a CA that is not trusted but available." name="044.js" filename="Security/Security Certificate Validation/Test Cases/044.js" checkedState="0"/>
      <TestCase description="Connect using an (untrusted) issued certificate of a CA that is not trusted but available." name="045.js" filename="Security/Security Certificate Validation/Test Cases/045.js" checkedState="0"/>
      <TestCase description="Attempt a secure channel and send a (not trusted) certificate that was issued by an unknown (not trusted) CertificateAuthority." name="046.js" filename="Security/Security Certificate Validation/Test Cases/046.js" checkedState="0"/>
      <TestCase description="Connect using a Revoked certificate that is not trusted." name="047.js" filename="Security/Security Certificate Validation/Test Cases/047.js" checkedState="0"/>
      <TestCase description="Connect using a trusted client certificate." name="048.js" filename="Security/Security Certificate Validation/Test Cases/048.js" checkedState="0"/>
      <TestCase description="Connect using a trusted client certificate (sha1-1024)." name="049.js" filename="Security/Security Certificate Validation/Test Cases/049.js" checkedState="0"/>
      <TestCase description="Connect using a trusted client certificate (sha1-2048)." name="050.js" filename="Security/Security Certificate Validation/Test Cases/050.js" checkedState="0"/>
      <TestCase description="Connect using a trusted client certificate (sha2-2048)." name="051.js" filename="Security/Security Certificate Validation/Test Cases/051.js" checkedState="0"/>
      <TestCase description="Connect using a trusted client certificate (sha2-4096)." name="052.js" filename="Security/Security Certificate Validation/Test Cases/052.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Certificate Validation/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Allow the plant administrator to assign a plant specific instance Certificate and allow configuration of a plant specific CA for acceptance of Certificates" name="Security Certificate Administration" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Certificate Administration/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="" name="manual.js" filename="Security/Security Certificate Administration/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Certificate Administration/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="The CreateSession and ActivateSession service allow for a NULL/empty signiture and do not require Application Certificates or a Nonce.  This Conformance Unit is only valid for select security policies." name="Security None CreateSession ActivateSession" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security None CreateSession ActivateSession/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Insecure channel. Activate session while providing certificates/nonces. Expects connection success." name="001.js" filename="Security/Security None CreateSession ActivateSession/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Insecure channel. Activate session while providing a Nonce but no certificate. Expects connection success." name="002.js" filename="Security/Security None CreateSession ActivateSession/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Insecure channel. Activate session while providing a certificate, but no Nonce. Expects connection success." name="003.js" filename="Security/Security None CreateSession ActivateSession/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Insecure channel. Activate a session, but do not pass certificates or nonce. Expects connection success." name="004.js" filename="Security/Security None CreateSession ActivateSession/Test Cases/004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security None CreateSession ActivateSession/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="The CreateSession and ActivateSession backwards compatibility to 1.01" name="Security None CreateSession ActivateSession 1.01" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security None CreateSession ActivateSession 1.01/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="1.01 Client passes a Certificate" name="001.js" filename="Security/Security None CreateSession ActivateSession 1.01/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Send expired client certificate" name="002.js" filename="Security/Security None CreateSession ActivateSession 1.01/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Send certificate for different computer" name="003.js" filename="Security/Security None CreateSession ActivateSession 1.01/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Send corrupted certificate" name="004.js" filename="Security/Security None CreateSession ActivateSession 1.01/Test Cases/004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security None CreateSession ActivateSession 1.01/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="A suite of algorithms that uses RSA15 as Key-Wrap-algorithm and 128-Bit for encryption algorithms.&#xa;SymmetricSignatureAlgorithm&#x9;HmacSha1&#x9;(http://www.w3.org/2000/09/xmldsig#hmac-sha1)&#xa;SymmetricEncryptionAlgorithm&#x9;Aes128&#x9;(http://www.w3.org/2001/04/xmlenc#a" name="Security Basic 128Rsa15" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Basic 128Rsa15/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Create secure channel using Basic 128Rsa15; Sign only. Expects success." name="001.js" filename="Security/Security Basic 128Rsa15/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Create secure channel using Basic 128Rsa15 Sign&amp;Encrypt. Expects success." name="002.js" filename="Security/Security Basic 128Rsa15/Test Cases/002.js" checkedState="0"/>
      <TestCase description="DoS attempt by consuming Channels" name="004.js" filename="Security/Security Basic 128Rsa15/Test Cases/004.js" checkedState="0"/>
      <TestCase description="DoS attack #2; consume SecureChannels, but CreateSessions in some." name="005.js" filename="Security/Security Basic 128Rsa15/Test Cases/005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Basic 128Rsa15/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="A suite of algorithms that uses SHA256 as Key-Wrap-algorithm and 256-Bit for encryption algorithms.&#xa;SymmetricSignatureAlgorithm&#x9;HmacSha256&#x9;(http://www.w3.org/2001/04/xmldsig-more#rsa-sha256)&#xa;SymmetricEncryptionAlgorithm&#x9;Aes256&#x9;(http://www.w3.org/2001/04/xmlenc#sha256" name="Security Basic 256Sha256" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Basic 256Sha256/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Create secure channel using Basic 256Sha256; Sign only. Expects success." name="001.js" filename="Security/Security Basic 256Sha256/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Create secure channel using Basic 256Sha256 Sign&amp;Encrypt. Expects success." name="002.js" filename="Security/Security Basic 256Sha256/Test Cases/002.js" checkedState="0"/>
      <TestCase description="DoS attempt by consuming Channels" name="004.js" filename="Security/Security Basic 256Sha256/Test Cases/004.js" checkedState="0"/>
      <TestCase description="DoS attack #2; consume SecureChannels, but CreateSessions in some." name="005.js" filename="Security/Security Basic 256Sha256/Test Cases/005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Basic 256Sha256/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="A suite of algorithms that uses SHA256 as Key-Wrap-algorithm and AES128-CBC for encryption algorithms.&#xa;SymmetricSignatureAlgorithm&#x9;Hmac-Sha2-256&#x9;(http://www.w3.org/2001/04/xmldsig-more#hmac-sha2-256)&#xa;SymmetricEncryptionAlgorithm&#x9;Aes128&#x9;(http://www.w3.org/2001/04/xmlenc#aes128-cbc" name="Security Aes128-Sha256-RsaOaep" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Aes128-Sha256-RsaOaep/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Create secure channel using Aes128-Sha256-RsaOaep; Sign only. Expects success." name="001.js" filename="Security/Security Aes128-Sha256-RsaOaep/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Create secure channel using Aes128-Sha256-RsaOaep Sign&amp;Encrypt. Expects success." name="002.js" filename="Security/Security Aes128-Sha256-RsaOaep/Test Cases/002.js" checkedState="0"/>
      <TestCase description="DoS attempt by consuming Channels" name="004.js" filename="Security/Security Aes128-Sha256-RsaOaep/Test Cases/004.js" checkedState="0"/>
      <TestCase description="DoS attack #2; consume SecureChannels, but CreateSessions in some." name="005.js" filename="Security/Security Aes128-Sha256-RsaOaep/Test Cases/005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Aes128-Sha256-RsaOaep/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="A suite of algorithms that uses SHA256 as Key-Wrap-algorithm and AES256-CBC for encryption algorithms.&#xa;SymmetricSignatureAlgorithm&#x9;Hmac-Sha2-256&#x9;(http://www.w3.org/2001/04/xmldsig-more#hmac-sha2-256)&#xa;SymmetricEncryptionAlgorithm&#x9;Aes256&#x9;(http://www.w3.org/2001/04/xmlenc#aes256-cbc" name="Security Aes256-Sha256-RsaPss" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Aes256-Sha256-RsaPss/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Create secure channel using Aes256-Sha256-RsaPss; Sign only. Expects success." name="001.js" filename="Security/Security Aes256-Sha256-RsaPss/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Create secure channel using Aes256-Sha256-RsaPss Sign&amp;Encrypt. Expects success." name="002.js" filename="Security/Security Aes256-Sha256-RsaPss/Test Cases/002.js" checkedState="0"/>
      <TestCase description="DoS attempt by consuming Channels" name="004.js" filename="Security/Security Aes256-Sha256-RsaPss/Test Cases/004.js" checkedState="0"/>
      <TestCase description="DoS attack #2; consume SecureChannels, but CreateSessions in some." name="005.js" filename="Security/Security Aes256-Sha256-RsaPss/Test Cases/005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Aes256-Sha256-RsaPss/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Allow configuration of the following  Security related items.&#xa;    * select the proper User identification policy (User Name/Password or X509 or Kerberos)&#xa;    * enable/disable the Security Policy &quot;None&quot; or other policies&#xa;   * set the permitted certifica" name="Security Administration" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Administration/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security Administration/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Administration/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="The server supports being able to be configured for no application authentication." name="Security - No Application Authentication" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security - No Application Authentication/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security - No Application Authentication/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security - No Application Authentication/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="A suite of algorithms that 256-Bit for encryption algorithms&#xa;SymmetricSignatureAlgorithm&#x9;HmacSha1&#x9;(http://www.w3.org/2000/09/xmldsig#hmac-sha1)&#xa;SymmetricEncryptionAlgorithm&#x9;Aes256&#x9;(http://www.w3.org/2001/04/xmlenc#aes256-cbc)&#xa;AsymmetricSignatureAlgorit" name="Security Basic 256" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Basic 256/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Create secure channel using Basic 256; Sign only. Expects success." name="001.js" filename="Security/Security Basic 256/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Create secure channel using Basic 256 Sign&amp;Encrypt. Expects success." name="002.js" filename="Security/Security Basic 256/Test Cases/002.js" checkedState="0"/>
      <TestCase description="DoS attempt by consuming Channels" name="004.js" filename="Security/Security Basic 256/Test Cases/004.js" checkedState="0"/>
      <TestCase description="DoS attack #2; consume SecureChannels, but CreateSessions in some." name="005.js" filename="Security/Security Basic 256/Test Cases/005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Basic 256/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="The ability to accept or ignore application certificates." name="Security User Anonymous" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security User Anonymous/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Insecure channel. Login anonymously. Expects success." name="001.js" filename="Security/Security User Anonymous/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Secure channel. Login anonymously. Expects success." name="002.js" filename="Security/Security User Anonymous/Test Cases/002.js" checkedState="0"/>
      <TestCase description="[VERIFY]Establish a session using anonymous against an endpoint that does not support the anonymous identity token. Expects Bad_IdentityTokenRejected." name="003.js" filename="Security/Security User Anonymous/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Over an insecure channel; call ActivateSession() specifying a ClientSignature." name="Err-001.js" filename="Security/Security User Anonymous/Test Cases/Err-001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security User Anonymous/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Support Kerberos Tokens." name="Security User IssuedToken Kerberos" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security User IssuedToken Kerberos/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security User IssuedToken Kerberos/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security User IssuedToken Kerberos/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Support Kerberos Tokens on Windows." name="Security User IssuedToken Kerberos Windows" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security User IssuedToken Kerberos Windows/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security User IssuedToken Kerberos Windows/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security User IssuedToken Kerberos Windows/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Encryption required by security algorithms." name="Security Encryption Required" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Encryption Required/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security Encryption Required/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Encryption Required/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Signing required by security algorithms." name="Security Signing Required" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Signing Required/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security Signing Required/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Signing Required/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Clock Synchronization." name="Security Time Synch - Configuration" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Time Synch - Configuration/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security Time Synch - Configuration/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Time Synch - Configuration/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Clock Synchronization." name="Security Time Synch - NTP/OS Based Support" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Time Synch - NTP/OS Based Support/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security Time Synch - NTP/OS Based Support/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Time Synch - NTP/OS Based Support/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Clock Synchronization." name="Security Time Synch - UA Based Support" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Time Synch - UA Based Support/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security Time Synch - UA Based Support/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Time Synch - UA Based Support/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="Default application instance certificate." name="Security Default ApplicationInstanceCertificate" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security Default ApplicationInstanceCertificate/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security Default ApplicationInstanceCertificate/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security Time Synch - UA Based Support/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Security" description="The Server supports being able to be configured for no application authentication, just User authentication and normal encryption/signing:&#xd;&#xa;– Configure server to accept all certificates&#xd;&#xa;– Certificates are just used for message security (signing and encryption)&#xd;&#xa;– Users level is used for authentication " name="Security No Application Authentication" used="true">
     <InitTestCase description="" name="initialize.js" filename="Security/Security No Application Authentication/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Security/Security No Application Authentication/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Security/Security No Application Authentication/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="14" description="An (OPC UA) Session is an application layer connection." name="Session Services">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support minimum 1 Session (total for all Clients)." name="Session Minimum 1" used="true">
     <InitTestCase description="" name="initialize.js" filename="Session Services/Session Minimum 1/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Create 2 sessions." name="001.js" filename="Session Services/Session Minimum 1/Test Cases/001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Session Services/Session Minimum 1/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support minimum 2 parallel Sessions (total for all Clients)." name="Session Minimum 2 Parallel" used="true">
     <InitTestCase description="" name="initialize.js" filename="Session Services/Session Minimum 2 Parallel/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateSession: 2 sessions, activated and then closed." name="001.js" filename="Session Services/Session Minimum 2 Parallel/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Create more sessions than the server supports." name="002.js" filename="Session Services/Session Minimum 2 Parallel/Test Cases/002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Session Services/Session Minimum 2 Parallel/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support minimum 10 parallel Sessions (total for all Clients)." name="Session Minimum 10 Parallel" used="true">
     <InitTestCase description="" name="initialize.js" filename="Session Services/Session Minimum 10 Parallel/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateSession: Creates 10 concurrent sessions." name="001.js" filename="Session Services/Session Minimum 10 Parallel/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateSession: Create multiple (5) sessions each with the same Name." name="002.js" filename="Session Services/Session Minimum 10 Parallel/Test Cases/002.js" checkedState="0"/>
      <TestCase description="CreateSession: create more sessions than server can handle." name="003.js" filename="Session Services/Session Minimum 10 Parallel/Test Cases/003.js" checkedState="0"/>
      <TestCase description="CreateSubscription: Creates 2 sessions, with 2 subscriptions per session.&#xa;The sister-script for 2 subscriptions in 1 session can be found in Subscription Minimum 02." name="004.js" filename="Session Services/Session Minimum 10 Parallel/Test Cases/004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Session Services/Session Minimum 10 Parallel/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support minimum 50 parallel Sessions (total for all Clients)." name="Session Minimum 50 Parallel" used="true">
     <InitTestCase description="" name="initialize.js" filename="Session Services/Session Minimum 50 Parallel/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateSession: Create 50 concurrent connections per CU  &quot;Session Minimum 50 Parallel&quot;" name="001.js" filename="Session Services/Session Minimum 50 Parallel/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateSession: create more sessions than server can handle (attempts 60)" name="002.js" filename="Session Services/Session Minimum 50 Parallel/Test Cases/002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Session Services/Session Minimum 50 Parallel/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support minimum 500 parallel Sessions (total for all Clients)." name="Session Minimum 500 Parallel" used="true">
     <InitTestCase description="" name="initialize.js" filename="Session Services/Session Minimum 500 Parallel/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateSession: create 500 sessions." name="001.js" filename="Session Services/Session Minimum 500 Parallel/Test Cases/001.js" checkedState="0"/>
      <TestCase description="More sessions than the server is documented as supporting." name="002.js" filename="Session Services/Session Minimum 500 Parallel/Test Cases/002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Session Services/Session Minimum 500 Parallel/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Implement basic Service behaviour. This includes in particular:&#xa; - checking the authentication token&#xa; - returning the requestHandle in responses&#xa; - returning available diagnostic information as requested with the 'returnDiagnostics' parameter&#xa; - respe" name="Session General Service Behaviour" used="true">
     <InitTestCase description="" name="initialize.js" filename="Session Services/Session General Service Behaviour/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateSession: Default Parameters." name="001.js" filename="Session Services/Session General Service Behaviour/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateSession: SessionTimeout testing with RevisedSessionTimeout checking." name="002.js" filename="Session Services/Session General Service Behaviour/Test Cases/002.js" checkedState="0"/>
      <TestCase description="CreateSession: RequestHeader.AuthenticationToken contains a valid NodeId." name="003.js" filename="Session Services/Session General Service Behaviour/Test Cases/003.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Session Services/Session General Service Behaviour/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the Session Service Set (CreateSession, ActivateSession, CloseSession) except the use of ActivateSession to change the Session user.  This includes correct handling of all parameters that are provided.&#xa;&#xa;Note that for the CreateSession and Activa" name="Session Base" used="true">
     <InitTestCase description="" name="initialize.js" filename="Session Services/Session Base/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateSession: RequestedSessionTimeout = 0; the RevisedSessionTimeout != 0." name="001.js" filename="Session Services/Session Base/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateSession: Create and Activate a session and stall the session to cause it to timeout." name="002.js" filename="Session Services/Session Base/Test Cases/002.js" checkedState="0"/>
      <TestCase description="CreateSession: Server diagnostics shows an entry for the client session (if supported)." name="003.js" filename="Session Services/Session Base/Test Cases/003.js" checkedState="0"/>
      <TestCase description="ActivateSession: Default parameters." name="004.js" filename="Session Services/Session Base/Test Cases/004.js" checkedState="0"/>
      <TestCase description="ActivateSession: Specify numerous LocaleIds in a ranked order." name="005.js" filename="Session Services/Session Base/Test Cases/005.js" checkedState="0"/>
      <TestCase description="ActivateSession: Call activateSession on a session that has been transferred to a different Channel." name="008.js" filename="Session Services/Session Base/Test Cases/008.js" checkedState="0"/>
      <TestCase description="ActivateSession: Provide no software certificates." name="009.js" filename="Session Services/Session Base/Test Cases/009.js" checkedState="0"/>
      <TestCase description="CloseSession: Default parameters." name="010.js" filename="Session Services/Session Base/Test Cases/010.js" checkedState="0"/>
      <TestCase description="CloseSession: Call CloseSession 100x in a loop." name="011.js" filename="Session Services/Session Base/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Test MAX # of supported sessions" name="012.js" filename="Session Services/Session Base/Test Cases/012.js" checkedState="0"/>
      <TestCase description="No SessionName specified" name="013.js" filename="Session Services/Session Base/Test Cases/013.js" checkedState="0"/>
      <TestCase description="ActivateSession: Empty ClientSignature." name="015.js" filename="Session Services/Session Base/Test Cases/015.js" checkedState="0"/>
      <TestCase description="CreateSession: Create 2 Sessions. Use the same nonce twice!" name="Err-001.js" filename="Session Services/Session Base/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="CreateSession: Invalid ClientNonce length" name="Err-002.js" filename="Session Services/Session Base/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="CreateSession: Send ClientCertificate for wrong application (attempted spoofing)." name="Err-003.js" filename="Session Services/Session Base/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="CreateSession: Create the session but do not activate it before calling another service." name="Err-004.js" filename="Session Services/Session Base/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="CreateSession: Invalid (too short) NonceId." name="Err-005.js" filename="Session Services/Session Base/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="ActivateSession: Specify a UserIdentityToken type that is not supported." name="Err-009.js" filename="Session Services/Session Base/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="ActivateSession: Specify user login credentials that do not have sufficient privileges." name="Err-010.js" filename="Session Services/Session Base/Test Cases/Err-010.js" checkedState="0"/>
      <TestCase description="CloseSession: Close an already-closed session." name="Err-013.js" filename="Session Services/Session Base/Test Cases/Err-013.js" checkedState="0"/>
      <TestCase description="CloseSession: Close a session that was never created." name="Err-014.js" filename="Session Services/Session Base/Test Cases/Err-014.js" checkedState="0"/>
      <TestCase description="Over a secure channel; call ActivateSession() specifying an empty ClientSignature." name="Err-022.js" filename="Session Services/Session Base/Test Cases/Err-022.js" checkedState="0"/>
      <TestCase description="Open an unsecure SecureChannel and create a Session using SecurityPolicy#None." name="Err-023.js" filename="Session Services/Session Base/Test Cases/Err-023.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Session Services/Session Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support use of ActivateSession to change the Session user." name="Session Change User" used="true">
     <InitTestCase description="" name="initialize.js" filename="Session Services/Session Change User/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Specify different user credentials when activating an already active session. Call Publish." name="001.js" filename="Session Services/Session Change User/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Specify the same user credentials on a session that the user already owns, using the same channel. " name="002.js" filename="Session Services/Session Change User/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Change the owner of a session but specify invalid/incorrect credentials (e.g. good username, empty password)." name="004.js" filename="Session Services/Session Change User/Test Cases/004.js" checkedState="0"/>
      <TestCase description="ActivateSession: Activate an already active session while specifying different user login credentials" name="006.js" filename="Session Services/Session Change User/Test Cases/006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Session Services/Session Change User/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the Cancel Service to cancel outstanding requests." name="Session Cancel" used="true">
     <InitTestCase description="" name="initialize.js" filename="Session Services/Session Cancel/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Cancel: Default parameters." name="001.js" filename="Session Services/Session Cancel/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Cancel: Cancel a completed call." name="003.js" filename="Session Services/Session Cancel/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Cancel: Specify an invalid/non-existent RequestHandle." name="004.js" filename="Session Services/Session Cancel/Test Cases/004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Session Services/Session Cancel/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="15" description="Subscriptions are used to report Notifications to the Client." name="Subscription Services">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support the following Subscription Services: CreateSubscription, ModifySubscription, DeleteSubscriptions, Publish, Republish, SetPublishingMode." name="Subscription Basic" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Basic/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateSubscription: Default parameter values." name="001.js" filename="Subscription Services/Subscription Basic/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedPublishingInterval is set to 1." name="002.js" filename="Subscription Services/Subscription Basic/Test Cases/002.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedPublishingInterval = 0." name="003.js" filename="Subscription Services/Subscription Basic/Test Cases/003.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedPublishingInterval is max size of an Int." name="004.js" filename="Subscription Services/Subscription Basic/Test Cases/004.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedLifetimeCounter=0; RequestedMaxKeepAliveCount=0." name="005.js" filename="Subscription Services/Subscription Basic/Test Cases/005.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedLifetimeCounter=3; RequestedMaxKeepAliveCount=1" name="006.js" filename="Subscription Services/Subscription Basic/Test Cases/006.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedLifetimeCount = RequestedMaxKeepAliveCount." name="007.js" filename="Subscription Services/Subscription Basic/Test Cases/007.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedLifetimeCounter is less than requestedMaxKeepAliveCount." name="008.js" filename="Subscription Services/Subscription Basic/Test Cases/008.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedLiftimeCount is less than 3x the requestedMaxKeepAliveCount." name="009.js" filename="Subscription Services/Subscription Basic/Test Cases/009.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedLiftimeCount is Max UInt32 and requestedMaxKeepAliveCount is (Max UInt32 / 3)." name="010.js" filename="Subscription Services/Subscription Basic/Test Cases/010.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedLiftimeCount is Max UInt32 and requestedMaxKeepAliveCount is (Max UInt32 / 2)." name="011.js" filename="Subscription Services/Subscription Basic/Test Cases/011.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedLifetimeCount and RequestedMaxKeepAliveCount are Max UInt32." name="012.js" filename="Subscription Services/Subscription Basic/Test Cases/012.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedLifetimeCount and RequestedMaxKeepAliveCount are both Max UInt32." name="013.js" filename="Subscription Services/Subscription Basic/Test Cases/013.js" checkedState="0"/>
      <TestCase description="CreateSubscription: PublishingEnabled=FALSE. Verify publishing does not begin!" name="014.js" filename="Subscription Services/Subscription Basic/Test Cases/014.js" checkedState="0"/>
      <TestCase description="CreateSubscription: no items, wait, call Publish (twice) and expect KeepAlive." name="015.js" filename="Subscription Services/Subscription Basic/Test Cases/015.js" checkedState="0"/>
      <TestCase description="CreateSubscription: Subscription should not expire before its lifetime ends." name="016.js" filename="Subscription Services/Subscription Basic/Test Cases/016.js" checkedState="0"/>
      <TestCase description="CreateSubscription: 0 monitoredItems; checking for keepalives." name="017.js" filename="Subscription Services/Subscription Basic/Test Cases/017.js" checkedState="0"/>
      <TestCase description="CreateSubscription: no monitored items; checking keepalives." name="018.js" filename="Subscription Services/Subscription Basic/Test Cases/018.js" checkedState="0"/>
      <TestCase description="CreateSubscription: no monitored items; keep alive checking." name="019.js" filename="Subscription Services/Subscription Basic/Test Cases/019.js" checkedState="0"/>
      <TestCase description="CreateSubscription: PublishingEnabled=false. SequenceNumber=1." name="020.js" filename="Subscription Services/Subscription Basic/Test Cases/020.js" checkedState="0"/>
      <TestCase description="CreateSubscription: 0 monitored items, various wait intervals, checking for KeepAlives." name="021.js" filename="Subscription Services/Subscription Basic/Test Cases/021.js" checkedState="0"/>
      <TestCase description="CreateSubscription: 1 monitored item, various timing intervals checking for values." name="022.js" filename="Subscription Services/Subscription Basic/Test Cases/022.js" checkedState="0"/>
      <TestCase description="ModifySubscription: Default parameter values." name="023.js" filename="Subscription Services/Subscription Basic/Test Cases/023.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedPublishingInterval=7ms greater than RevisedPublishingInterval from CreateSubscription." name="024.js" filename="Subscription Services/Subscription Basic/Test Cases/024.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedPublishingInterval is 7ms less than RevisedPublishingInterval from CreateSubscription." name="025.js" filename="Subscription Services/Subscription Basic/Test Cases/025.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedPublishingInterval matches RevisedPublishingInterval from CreateSubscription." name="026.js" filename="Subscription Services/Subscription Basic/Test Cases/026.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedPublishingInterval=1; Server returns fastest possible value != 0." name="027.js" filename="Subscription Services/Subscription Basic/Test Cases/027.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedPublishingInterval=0; Server revises the value." name="028.js" filename="Subscription Services/Subscription Basic/Test Cases/028.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedPublishingInterval=Max Int32." name="029.js" filename="Subscription Services/Subscription Basic/Test Cases/029.js" checkedState="0"/>
      <TestCase description="ModifySubscription: Adjusts the LifetimeCounter and MaxKeepAliveCount parameters multiple times to cause a conflict of the 3x multiplier rule." name="030.js" filename="Subscription Services/Subscription Basic/Test Cases/030.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedLifetimeCounter is 0 and requestedMaxKeepAliveCount is 0." name="031.js" filename="Subscription Services/Subscription Basic/Test Cases/031.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedLifetimeCounter is 3 and requestedMaxKeepAliveCount is 1. Server revises to minimum (fastest) supported values." name="032.js" filename="Subscription Services/Subscription Basic/Test Cases/032.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedLifetimeCounter equals requestedMaxKeepAliveCount. Server revises to minimum (fastest) supported values." name="033.js" filename="Subscription Services/Subscription Basic/Test Cases/033.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedLifetimeCounter is less than requestedMaxKeepAliveCount." name="034.js" filename="Subscription Services/Subscription Basic/Test Cases/034.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedLifetimeCounter is less than 3x the requestedMaxKeepAliveCount." name="035.js" filename="Subscription Services/Subscription Basic/Test Cases/035.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedLifetimeCounter is max UInt32 and requestedMaxKeepAliveCount is (max UInt32)/3." name="036.js" filename="Subscription Services/Subscription Basic/Test Cases/036.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedLifetimeCounter is max UInt32 and requestedMaxKeepAliveCount is (max UInt32)/2." name="037.js" filename="Subscription Services/Subscription Basic/Test Cases/037.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedLifetimeCounter is max UInt32/2 and requestedMaxKeepAliveCount is max UInt32." name="038.js" filename="Subscription Services/Subscription Basic/Test Cases/038.js" checkedState="0"/>
      <TestCase description="ModifySubscription: RequestedLifetimeCounter is max UInt32 and requestedMaxKeepAliveCount is max UInt32." name="039.js" filename="Subscription Services/Subscription Basic/Test Cases/039.js" checkedState="0"/>
      <TestCase description="ModifySubscription: Modify the MaxNotificationsPerPublish." name="040.js" filename="Subscription Services/Subscription Basic/Test Cases/040.js" checkedState="0"/>
      <TestCase description="ModifySubscription: modify the MaxNotificationsPerPublish to 10 (from 0). DiscardOldest=TRUE." name="041.js" filename="Subscription Services/Subscription Basic/Test Cases/041.js" checkedState="0"/>
      <TestCase description="Republish: requests are sent out-of-order." name="042.js" filename="Subscription Services/Subscription Basic/Test Cases/042.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Disables an enabled Subscription." name="043.js" filename="Subscription Services/Subscription Basic/Test Cases/043.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Enables a disabled subscription." name="044.js" filename="Subscription Services/Subscription Basic/Test Cases/044.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Enable an already enabled subscription." name="045.js" filename="Subscription Services/Subscription Basic/Test Cases/045.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Disable an already disabled subscription." name="046.js" filename="Subscription Services/Subscription Basic/Test Cases/046.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: specify same subscription 5 times." name="047.js" filename="Subscription Services/Subscription Basic/Test Cases/047.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Specify the same subscriptionId multiple times." name="048.js" filename="Subscription Services/Subscription Basic/Test Cases/048.js" checkedState="0"/>
      <TestCase description="Publish: Default parameters." name="049.js" filename="Subscription Services/Subscription Basic/Test Cases/049.js" checkedState="0"/>
      <TestCase description="Publish: Acknowledge a valid sequence number from a valid subscription." name="050.js" filename="Subscription Services/Subscription Basic/Test Cases/050.js" checkedState="0"/>
      <TestCase description="Publish: Acknowldge multiple valid sequence numbers from a valid subscription." name="051.js" filename="Subscription Services/Subscription Basic/Test Cases/051.js" checkedState="0"/>
      <TestCase description="Publish: Acknowldge multiple valid sequenceNumbers from multiple valid subscriptions." name="052.js" filename="Subscription Services/Subscription Basic/Test Cases/052.js" checkedState="0"/>
      <TestCase description="Publish: Acknowledge a sequenceNumber of 0." name="053.js" filename="Subscription Services/Subscription Basic/Test Cases/053.js" checkedState="0"/>
      <TestCase description="Publish: Verify scanrates yield an expected number of dataChanges." name="054.js" filename="Subscription Services/Subscription Basic/Test Cases/054.js" checkedState="0"/>
      <TestCase description="Publish: Acknowledge valid and invalid sequence numbers from a Valid subscription." name="055.js" filename="Subscription Services/Subscription Basic/Test Cases/055.js" checkedState="0"/>
      <TestCase description="Republish: Default parameters." name="056.js" filename="Subscription Services/Subscription Basic/Test Cases/056.js" checkedState="0"/>
      <TestCase description="Republish: Retrieves the last 3 updates." name="057.js" filename="Subscription Services/Subscription Basic/Test Cases/057.js" checkedState="0"/>
      <TestCase description="Republish: Ignore the initial data-change; wait long time, call Republish." name="058.js" filename="Subscription Services/Subscription Basic/Test Cases/058.js" checkedState="0"/>
      <TestCase description="Republish: Request missing sequence in-between acknowledged sequences." name="059.js" filename="Subscription Services/Subscription Basic/Test Cases/059.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Default parameters." name="060.js" filename="Subscription Services/Subscription Basic/Test Cases/060.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Do not call DeleteMonitoredItems first. Test items deleted by calling ModifyMonitoredItems." name="061.js" filename="Subscription Services/Subscription Basic/Test Cases/061.js" checkedState="0"/>
      <TestCase description="Republish: Request sequenceNumber from the future." name="062.js" filename="Subscription Services/Subscription Basic/Test Cases/062.js" checkedState="0"/>
      <TestCase description="CreateSubscription: Test timeout extends with each service call (no Publish)" name="063.js" filename="Subscription Services/Subscription Basic/Test Cases/063.js" checkedState="0"/>
      <TestCase description="RequestHeader.TimeoutHint smaller than Subscription.KeepAlive" name="067.js" filename="Subscription Services/Subscription Basic/Test Cases/067.js" checkedState="0"/>
      <TestCase description="CreateSubscription: Negative requestedPublishingInterval." name="Err-001.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="CreateSubscription: Create the MAX # of subscriptions allowed in the server + 1." name="Err-002.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="CreateSubscription: RequestedPublishingInterval NaN." name="Err-003.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="CreateSubscription: Subscription should expire after its lifetime has passed without use." name="Err-004.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="ModifySubscription: Invalid SubscriptionId." name="Err-005.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="ModifySubscription: SubscriptionId=0." name="Err-006.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="ModifySubscription: Publishing interval is a negative number. Expected Bad_InvalidArgument." name="Err-007.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-007.js" checkedState="0"/>
      <TestCase description="ModifySubscription: Specify a negative publishing interval." name="Err-008.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Disable an invalid subscription." name="Err-009.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Enable publishing for an invalid subscription." name="Err-010.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-010.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Set Enabled=TRUE for a subscription that does not exist. Further, no subscriptions have been created for the session." name="Err-011.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-011.js" checkedState="0"/>
      <TestCase description="Publish: No subscription defined." name="Err-012.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-012.js" checkedState="0"/>
      <TestCase description="Publish: SubscriptionId=0; expect results[0] = Bad_SubscriptionIdInvalid." name="Err-013.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-013.js" checkedState="0"/>
      <TestCase description="Publish: Acknowldge the same sequenceNumber twice, in the same call." name="Err-014.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-014.js" checkedState="0"/>
      <TestCase description="Publish: Acknowledge same sequence number twice." name="Err-015.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-015.js" checkedState="0"/>
      <TestCase description="Publish: Acknowledge multiple invalid SequenceNumbers, expect Results[*]=Bad_SequenceNumberUnknown." name="Err-016.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-016.js" checkedState="0"/>
      <TestCase description="Publish: Acknowledge multiple invalid sequenceNumbers from multiple valid subscriptions." name="Err-017.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-017.js" checkedState="0"/>
      <TestCase description="Republish: No subscription has been created." name="Err-018.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-018.js" checkedState="0"/>
      <TestCase description="Republish: SubscriptionId = 0." name="Err-019.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-019.js" checkedState="0"/>
      <TestCase description="Republish: Invalid subscriptionId." name="Err-020.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-020.js" checkedState="0"/>
      <TestCase description="Republish: RetransmitSequenceNumber = 0." name="Err-021.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-021.js" checkedState="0"/>
      <TestCase description="Republish: Invalid RetransmitSequenceNumber." name="Err-022.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-022.js" checkedState="0"/>
      <TestCase description="Republish: Request an already-acknowledged SequenceNumber." name="Err-023.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-023.js" checkedState="0"/>
      <TestCase description="Republish: Call Republish on a DELETED Subscription." name="Err-024.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-024.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Invalid SubscriptionId." name="Err-025.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-025.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Delete an already deleted Subscription." name="Err-026.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-026.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Delete multiple subscriptions that have already been deleted." name="Err-027.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-027.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Empty subscriptionIds array." name="Err-028.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-028.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Creates subscriptions until Bad_TooManyOperations is received, or, quits after 1,000 subscriptions." name="Err-029.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-029.js" checkedState="0"/>
      <TestCase description="CreateMonitoredItems: ByteStringArray with IndexRange outside of bounds. Call Publish()." name="Err-030.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-030.js" checkedState="0"/>
      <TestCase description="ModifySubscription: Call ModifySubscription specifying a valid SubscriptionId of another session." name="Err-031.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-031.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Call SetPublishingMode specifying a valid SubscriptionId of another session." name="Err-032.js" filename="Subscription Services/Subscription Basic/Test Cases/Err-032.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Basic/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support setting Subscriptions in durable mode. This mode requires that collected data and events are stored and delivered even if a Client was disconnected for a longer time or the Server was restarted." name="Subscription Durable" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Durable/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Check the SetSubscriptionDurable if method exists in the Server object and that it exists as defined in the specifications." name="000.js" filename="Subscription Services/Subscription Durable/Test Cases/000.js" checkedState="0"/>
      <TestCase description="Invoke SetSubscriptionDurable and set default values for all parameters." name="001.js" filename="Subscription Services/Subscription Durable/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Specify a lifetimeInHours that is the max size of a UInt32." name="002.js" filename="Subscription Services/Subscription Durable/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Specify a lifetimeInHours that is zero." name="003.js" filename="Subscription Services/Subscription Durable/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Setup a durable subscription with one monitored item (system time). Make sure the subscription is working via a call to Publish()." name="004.js" filename="Subscription Services/Subscription Durable/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Add monitored items with large (i.e. 10,000) buffer size to a Durable subscription." name="005.js" filename="Subscription Services/Subscription Durable/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Establish a durable subscription with multiple monitored items." name="006.js" filename="Subscription Services/Subscription Durable/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Create a Durable subscription and then add 1 or more monitored items." name="007.js" filename="Subscription Services/Subscription Durable/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Create a Durable subscription with 1 or more monitored items." name="008.js" filename="Subscription Services/Subscription Durable/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Create a durable subscription with the Server.Notifier (events; specify a filter to receive any kind of event)." name="009.js" filename="Subscription Services/Subscription Durable/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Create a durable subscription with 0 monitored items." name="010.js" filename="Subscription Services/Subscription Durable/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Create a durable subscription" name="011.js" filename="Subscription Services/Subscription Durable/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Create a subscription with parameters that will cause the subscription to have a short lifespan, i.e. requestedLifetimeCount=3; requestedPublishingInterval=500; requestedMaxKeepAliveCount=3" name="012.js" filename="Subscription Services/Subscription Durable/Test Cases/012.js" checkedState="0"/>
      <TestCase description="Invoke SetSubscriptionDurable without specifying any parameters." name="Err-001.js" filename="Subscription Services/Subscription Durable/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Invoke SetSubscriptionDurable while specifying one of the two parameters." name="Err-002.js" filename="Subscription Services/Subscription Durable/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Invoke SetSubscriptionDurable while specifying three UINT parameters." name="Err-003.js" filename="Subscription Services/Subscription Durable/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Invoke SetSubscriptionDurable while specifying the right number of parametes, but wrong data-types; repeat for all [IN] parameters." name="Err-004.js" filename="Subscription Services/Subscription Durable/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Create a subscription and add one or more monitored items to it. Then invoke SetSubscriptionDurable on the subscription." name="Err-005.js" filename="Subscription Services/Subscription Durable/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="Specify a subscriptionId that belongs to another session." name="Err-006.js" filename="Subscription Services/Subscription Durable/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="Specify a subscriptionId that is known to not exist." name="Err-007.js" filename="Subscription Services/Subscription Durable/Test Cases/Err-007.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Durable/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Respect the specified policy for discarding Publish Service requests. If the maximum number of Publish Service requests has been queued and a new Publish Service request arrives, the &quot;oldest&quot; Publish request has to be discarded by returning the proper err" name="Subscription Publish Discard Policy" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Publish Discard Policy/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="Subscription Services/Subscription Publish Discard Policy/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Publish Discard Policy/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 1 Subscription per Session." name="Subscription Minimum 1" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Minimum 1/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Create one subscription. Acknowledge queued SequenceNumbers out of order." name="001.js" filename="Subscription Services/Subscription Minimum 1/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Create one subscription. Check it exists in Diagnostics." name="002.js" filename="Subscription Services/Subscription Minimum 1/Test Cases/002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Minimum 1/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 2 Subscriptions per Session." name="Subscription Minimum 02" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Subscription priorities EQUAL" name="001.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/001.js" checkedState="0"/>
      <TestCase description="1 session with 2 subscriptions" name="002.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Subscription with higher priority" name="003.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Subscription priority; wait for one to starve." name="004.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Modify one subscriptions Priority to be HIGHER." name="005.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Modify one subscriptions priority to be LOWER." name="006.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Modify first Subscription to have HIGHER priority; then LOWER priority." name="007.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Modify second subscription to have HIGHER priority; then LOWER priority." name="008.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Disable multiple subscriptions where some active/inactive." name="009.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Enable multiple subscriptions, some were active/inactive." name="010.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Disables already disabled subscriptions." name="011.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Enable already-enabled subscriptions." name="012.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/012.js" checkedState="0"/>
      <TestCase description="Enable 2 previously disabled subscriptions." name="013.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/013.js" checkedState="0"/>
      <TestCase description="Disable one subscription; another active. Same session." name="014.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/014.js" checkedState="0"/>
      <TestCase description="Enable two already-enabled subscriptions. Same session." name="015.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/015.js" checkedState="0"/>
      <TestCase description="Delete multiple subscriptions." name="016.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/016.js" checkedState="0"/>
      <TestCase description="Publish: Multiple subscription serviced without prejudice." name="017.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/017.js" checkedState="0"/>
      <TestCase description="Republish: 2 subscriptions acknowledging first only; Republish on second." name="018.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/018.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: 2 subscriptions configured differently, does server internally distinguish (properly) between them when disabling just one of them?" name="019.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/019.js" checkedState="0"/>
      <TestCase description="2 Subscriptions, one monitors events, and the other monitors data-changes." name="020.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/020.js" checkedState="0"/>
      <TestCase description="Disable mix of valid and invalid subscription ids." name="Err-001.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Enable Publishing for invalid subscription ids." name="Err-002.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Enable Publishing for valid and invalid subscription ids." name="Err-003.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/Err-003.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Minimum 02/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 5 Subscriptions per Session.&#xa;This number has to be supported for at least half of the minimum required sessions." name="Subscription Minimum 05" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CreateSubscription: 5 subscriptions of varying priorities; 50 items minimum. Check priority of received notifications." name="001.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CreateSubscription: 5 Subscriptions per Session, 5 Sessions." name="002.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/002.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Multiple, valid." name="003.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/003.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Enables 5 previously disabled subscriptions. Verify with Publish() calls." name="004.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/004.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Create 5 subscriptions and then disable 2 of them. Verify with Pubilsh() calls." name="005.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/005.js" checkedState="0"/>
      <TestCase description="CreateSubscription: 3 subscriptions of various priorities." name="006.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Publish: Multiple subscription serviced without prejudice." name="007.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/007.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Disable publishing for multiple invalid subscriptions." name="Err-001.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Publish: Acknowledge multiple invalid sequenceNumbers while specifying multiple invalid subscriptionIds." name="Err-002.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Multiple invalid subscriptions." name="Err-003.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Multiple subscriptions, some valid and some invalid." name="Err-004.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Delete multiple subscriptions, some valid, and some already-deleted subscriptions." name="Err-005.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/Err-005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Minimum 05/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 10 Subscriptions per Session.&#xa;This number has to be supported for at least half of the minimum required sessions." name="Subscription Minimum 10" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Minimum 10/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Create 10 subscriptions" name="001.js" filename="Subscription Services/Subscription Minimum 10/Test Cases/001.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Multiple valid." name="002.js" filename="Subscription Services/Subscription Minimum 10/Test Cases/002.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Enables 10 subscriptions that were previously disabled." name="003.js" filename="Subscription Services/Subscription Minimum 10/Test Cases/003.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: 10 active subscriptions where every odd subscription is then disabled." name="004.js" filename="Subscription Services/Subscription Minimum 10/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Publish: Multiple subscription serviced without prejudice." name="005.js" filename="Subscription Services/Subscription Minimum 10/Test Cases/005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Minimum 10/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 2 Publish Service requests per Session." name="Subscription Publish Min 02" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Publish Min 02/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Queue 2 Publish() requests in a single session." name="001.js" filename="Subscription Services/Subscription Publish Min 02/Test Cases/001.js" checkedState="0"/>
      <TestCase description="DeleteSubscription() with 2 outstanding Publish() requests." name="002.js" filename="Subscription Services/Subscription Publish Min 02/Test Cases/002.js" checkedState="0"/>
      <TestCase description="ModifySubscription: check timings after modifying publishing interval." name="003.js" filename="Subscription Services/Subscription Publish Min 02/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Republish: MessageRetransmissionQueueSize expected to be 2." name="004.js" filename="Subscription Services/Subscription Publish Min 02/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Publish.TimeoutHint causes BadTimeout" name="005.js" filename="Subscription Services/Subscription Publish Min 02/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Queue more Publish() requests than the server can support." name="Err-001.js" filename="Subscription Services/Subscription Publish Min 02/Test Cases/Err-001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Publish Min 02/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 5 Publish Service requests per Session." name="Subscription Publish Min 05" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Publish Min 05/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Publish: 5 concurrent Publish requests, in a single session." name="001.js" filename="Subscription Services/Subscription Publish Min 05/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Create half as many sessions as are claimed to be supported; e.g. create 5-sessions if the Server claims to support 10." name="003.js" filename="Subscription Services/Subscription Publish Min 05/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Republish" name="005.js" filename="Subscription Services/Subscription Publish Min 05/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Publish.TimeoutHint causes BadTimeout" name="006.js" filename="Subscription Services/Subscription Publish Min 05/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Publish: Call Publish more times than the server can handle." name="Err-001.js" filename="Subscription Services/Subscription Publish Min 05/Test Cases/Err-001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Publish Min 05/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support at least 10 Publish Service requests per Session.&#xa;This number has to be supported for at least half of the minimum required sessions." name="Subscription Publish Min 10" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Publish Min 10/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="10 Subscriptions and 10x Publish calls" name="001.js" filename="Subscription Services/Subscription Publish Min 10/Test Cases/001.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: Create 10 subscriptions, and then disable 5 of them. Verify with Publish() calls." name="002.js" filename="Subscription Services/Subscription Publish Min 10/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Publish: 10 concurrent Publish requests queued." name="003.js" filename="Subscription Services/Subscription Publish Min 10/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Publish: Issue more requests than the server can handle." name="Err-001.js" filename="Subscription Services/Subscription Publish Min 10/Test Cases/Err-001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Publish Min 10/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support TransferSubscriptions Service to transfer a Subscription from one Session to another." name="Subscription Transfer" used="true">
     <InitTestCase description="" name="initialize.js" filename="Subscription Services/Subscription Transfer/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="CloseSession: DeleteSubscriptions=FALSE. Verify the subscriptions are NOT deleted." name="001.js" filename="Subscription Services/Subscription Transfer/Test Cases/001.js" checkedState="0"/>
      <TestCase description="CloseSession: Create Subscriptions. CloseSession and check if associated subscriptions were deleted." name="002.js" filename="Subscription Services/Subscription Transfer/Test Cases/002.js" checkedState="0"/>
      <TestCase description="ModifySubscription: Modifies a subscription that has been transferred to another session." name="003.js" filename="Subscription Services/Subscription Transfer/Test Cases/003.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: For a subscription that was transferred, try modifying its publishing." name="004.js" filename="Subscription Services/Subscription Transfer/Test Cases/004.js" checkedState="0"/>
      <TestCase description="SetPublishingMode: For multiple subscriptions that were transferred, try modifying their publishing." name="005.js" filename="Subscription Services/Subscription Transfer/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Publish: Called on a subscription that has been transferred to another session." name="006.js" filename="Subscription Services/Subscription Transfer/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Republish: Called on a subscription that has been transferred to another session." name="007.js" filename="Subscription Services/Subscription Transfer/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Republish: Close existing session without killing subscription." name="008.js" filename="Subscription Services/Subscription Transfer/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Transfer a subscription to another session. Call Publish on both sessions." name="009.js" filename="Subscription Services/Subscription Transfer/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Transfer a subscription to another session. Call Publish on both sessions." name="010.js" filename="Subscription Services/Subscription Transfer/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Transfer a subscription to another session. Call Publish on both sessions." name="011.js" filename="Subscription Services/Subscription Transfer/Test Cases/011.js" checkedState="0"/>
      <TestCase description="Transfer a subscription to another session. Call Publish on both sessions." name="012.js" filename="Subscription Services/Subscription Transfer/Test Cases/012.js" checkedState="0"/>
      <TestCase description="Transfer a subscription to another session. Call Publish on both sessions." name="013.js" filename="Subscription Services/Subscription Transfer/Test Cases/013.js" checkedState="0"/>
      <TestCase description="Transfer a subscription to another session. Call Publish on both sessions." name="014.js" filename="Subscription Services/Subscription Transfer/Test Cases/014.js" checkedState="0"/>
      <TestCase description="Transfer a subscription to another session. Call Publish on both sessions." name="015.js" filename="Subscription Services/Subscription Transfer/Test Cases/015.js" checkedState="0"/>
      <TestCase description="Transfer a subscription to another session." name="016.js" filename="Subscription Services/Subscription Transfer/Test Cases/016.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Deletes a subscription that has been transferred to another session." name="Err-001.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Deletes multiple subscriptions, all of which have been transferred to another session." name="Err-002.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="SetMonitoringMode: Create a subscription with 1 valid MonitoredItem. Transfer the subscription to another session. Call SetMonitoringMode (default values) from the original session." name="Err-003.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="DeleteSubscriptions: Some valid and invalid subscriptions (transferred to another session)." name="Err-004.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Call TransferSubscriptions() without specifying any SubscriptionIds." name="Err-005.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="Call TransferSubscriptions() while specifying more SubscriptionIds than the server can handle." name="Err-006.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="Call TransferSubscription() while specifying an invalid/non-existent SubscriptionId." name="Err-007.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-007.js" checkedState="0"/>
      <TestCase description="Create a new subscription and monitored item (reporting mode) in a default session. Create another session on another channel, to attempt to replicate a different client altogether. Transfer the subscription to the new session." name="Err-008.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="Create a session using a set of user credentials other than anonymous. Create a subscription that is monitoring at least 1 item. Create another session using anonymous login credentials. Transfer the subscription." name="Err-009.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="Create a session using one set of user credentials. Create a subscription that is monitoring at least 1 item. Create another session using a different set of user credentials which belongs to a different group/role from the other user and does not have permissions to acquire the subscription (e.g. not an admin). Transfer the subscription." name="Err-010.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-010.js" checkedState="0"/>
      <TestCase description="Create a session using anonymous credentials. Create a subscription that is monitoring at least 1 item. Create another secure channel using a different set of client credentials (i.e. different x509 softwareCertificate) and establish another anonymous session. Transfer the subscription." name="Err-011.js" filename="Subscription Services/Subscription Transfer/Test Cases/Err-011.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Subscription Services/Subscription Transfer/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="16" editable="true" description="User defined conformance group." name="UserDefinedCG">
   <ConformanceUnits>
    <ConformanceUnit editable="true" category="" description="User defined conformance unit." name="UserDefinedCU" used="true">
     <InitTestCase description="" name="initialize.js" filename="UserDefinedCG/UserDefinedCU/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="User defined test case." name="001.js" filename="UserDefinedCG/UserDefinedCU/Test Cases/001.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="UserDefinedCG/UserDefinedCU/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="17" description="Clients use the View Service Set to navigate through the AddressSpace or through a View as subset of the AddressSpace." name="View Services">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Support the View Service Set (Browse, BrowseNext)." name="View Basic" used="true">
     <InitTestCase description="" name="initialize.js" filename="View Services/View Basic/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Browse: ReferenceTypeId=&lt;null> returns ALL references." name="001.js" filename="View Services/View Basic/Test Cases/001.js" checkedState="0"/>
      <TestCase description="Browse: Should browse references in the forward direction." name="002.js" filename="View Services/View Basic/Test Cases/002.js" checkedState="0"/>
      <TestCase description="Browse: Should browse for references in the inverse direction." name="003.js" filename="View Services/View Basic/Test Cases/003.js" checkedState="0"/>
      <TestCase description="Browse: Should return references of the specified ReferenceTypeId (without subtypes) when the ReferenceTypeId matches a reference." name="004.js" filename="View Services/View Basic/Test Cases/004.js" checkedState="0"/>
      <TestCase description="Browse: Should return references of the specified ReferenceTypeId and its subtypes when the ReferenceTypeId matches a reference." name="005.js" filename="View Services/View Basic/Test Cases/005.js" checkedState="0"/>
      <TestCase description="Browse: Should return references matching the node class as specified by the NodeClassMask." name="006.js" filename="View Services/View Basic/Test Cases/006.js" checkedState="0"/>
      <TestCase description="Browse: Should browse multiple nodes in one call." name="007.js" filename="View Services/View Basic/Test Cases/007.js" checkedState="0"/>
      <TestCase description="Browse: Should browse multiple nodes with a mix of valid and invalid node IDs." name="008.js" filename="View Services/View Basic/Test Cases/008.js" checkedState="0"/>
      <TestCase description="Browse: Should return all references when NodeClassMask is 0." name="009.js" filename="View Services/View Basic/Test Cases/009.js" checkedState="0"/>
      <TestCase description="Browse: Should return only the one Reference Description field specified by the ResultMask." name="010.js" filename="View Services/View Basic/Test Cases/010.js" checkedState="0"/>
      <TestCase description="Browse: Should return references of the specified ReferenceTypeId (without subtypes) when the ReferenceTypeId matches a parent of a reference." name="015.js" filename="View Services/View Basic/Test Cases/015.js" checkedState="0"/>
      <TestCase description="Browse: Should return references of the specified ReferenceTypeId and its subtypes when the ReferenceTypeId matches the parent type of a reference." name="016.js" filename="View Services/View Basic/Test Cases/016.js" checkedState="0"/>
      <TestCase description="Browse: Should return references of node class View." name="017.js" filename="View Services/View Basic/Test Cases/017.js" checkedState="0"/>
      <TestCase description="Browse: Should return non-null Reference Description fields for all node classes except Object and Variable. For Object and Variable, all fields should be non-null except TypeDefinition, which should be a null NodeId." name="018.js" filename="View Services/View Basic/Test Cases/018.js" checkedState="0"/>
      <TestCase description="Browse: Should return the Reference Description fields  specified by the ResultMask." name="019.js" filename="View Services/View Basic/Test Cases/019.js" checkedState="0"/>
      <TestCase description="Browse: Should return references of the specified ReferenceTypeId and its recursive subtypes when the ReferenceTypeId matches the grandparent type of a reference." name="020.js" filename="View Services/View Basic/Test Cases/020.js" checkedState="0"/>
      <TestCase description="Browse: Should return diagnostic info as specified by the returnDiagnostics bit  mask." name="027.js" filename="View Services/View Basic/Test Cases/027.js" checkedState="0"/>
      <TestCase description="Browse: Should not return diagnostics when returnDiagnostics is 0." name="028.js" filename="View Services/View Basic/Test Cases/028.js" checkedState="0"/>
      <TestCase description="Browse: Should return operation result Bad_NodeIdInvalid when the node ID in NodeToBrowse has invaild syntax." name="Err-001.js" filename="View Services/View Basic/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="Browse: Should return operation error Bad_NodeIdUnknown when the node to browse is not in the address space." name="Err-002.js" filename="View Services/View Basic/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Browse: Should return operation result BadBrowseDirectionInvalid when the BrowseDirection is invalid." name="Err-003.js" filename="View Services/View Basic/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="Browse: Should return operation result BadViewIdUnknown when the View does not exist." name="Err-004.js" filename="View Services/View Basic/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="Browse: Should return operation result Bad_ReferenceTypeIdInvalid when ReferenceTypeId does not exist." name="Err-006.js" filename="View Services/View Basic/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="Browse: Should return Bad_NothingToDo when nodesToBrowse[] is empty." name="Err-008.js" filename="View Services/View Basic/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="Browse: Should return operation result Bad_ViewIdUnknown when the specified View does not exist." name="Err-009.js" filename="View Services/View Basic/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="Browse: Should return operation result Bad_ReferenceTypeIdInvalid when ReferenceTypeId is a node that is not a reference type." name="Err-010.js" filename="View Services/View Basic/Test Cases/Err-010.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return service result Bad_NothingToDo when there are no ContinuationPoints." name="Err-014.js" filename="View Services/View Basic/Test Cases/Err-014.js" checkedState="0"/>
      <TestCase description="Browse: Should return service error Bad_SecurityChecksFailed when authenticationToken is null." name="Err-015.js" filename="View Services/View Basic/Test Cases/Err-015.js" checkedState="0"/>
      <TestCase description="Browse: Should return Bad_SecurityChecksFailed when the authenticationToken does not exist." name="Err-016.js" filename="View Services/View Basic/Test Cases/Err-016.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="View Services/View Basic/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support minimum 1 continuation point per Session." name="View Minimum Continuation Point 01" used="true">
     <InitTestCase description="" name="initialize.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Browse: Should browse for a maximum of one reference." name="001.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/001.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should browse for the next reference and release continuation points." name="005.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/005.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return a ContinuationPoint when ReleaseContinuationPoints is false and more references exist." name="006.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/006.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should browse through to the last reference at which point the operation result should have StatusCode Good and empty ContinuationPoint." name="007.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/007.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return Inverse references when the direction is Inverse." name="009.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/009.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return references of the specified type when a ReferenceTypeId is specified and IncludeSubtypes is false." name="010.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/010.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return references of the specified type and its subtypes when a ReferenceTypeId is specified and IncludeSubtypes is true." name="011.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/011.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return references matching the specified NodeClassMask." name="012.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/012.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return requested result fields as specified by the ResultMask. " name="013.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/013.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return the number of references requested or the number remaining, whichever is fewer." name="014.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/014.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return Views when the NodeClassMask is set to include Views." name="015.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/015.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return requested diagnostics as specified by the diagnostic mask." name="016.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/016.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return no diagnostic info when the returnDiagnostics mask is 0." name="017.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/017.js" checkedState="0"/>
      <TestCase description="Browse: Should return operation result Bad_NoContinuationPoints when no more continuation points can be allocated or the server's maximum has been reached." name="Err-001.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return operation result Bad_ContinuationPointInvalid when using a ContinuationPoint used in a previous session." name="Err-002.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return operation result Bad_ContinuationPointInvalid after releasing the ContinuationPoint." name="Err-003.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return operation result Bad_ContinuationPointInvalid when the ContinuationPoint has already been used." name="Err-006.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return service result Bad_SecurityChecksFailed when the AuthenticationToken is null." name="Err-008.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return service result Bad_SecurityChecksFailed when the AuthenticationToken does not exist." name="Err-009.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return service result Bad_InvalidTimestamp when RequestHeader.Timestamp is too far out of range." name="Err-010.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/Err-010.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="View Services/View Minimum Continuation Point 01/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support minimum 5 continuation points per Session.&#xa;This number has to be supported for at least half of the minimum required sessions." name="View Minimum Continuation Point 05" used="true">
     <InitTestCase description="" name="initialize.js" filename="View Services/View Minimum Continuation Point 05/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Browse: Should return five continuation points." name="001.js" filename="View Services/View Minimum Continuation Point 05/Test Cases/001.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return multiple ContinuationPoints elements." name="003.js" filename="View Services/View Minimum Continuation Point 05/Test Cases/003.js" checkedState="0"/>
      <TestCase description="BrowseNext: Should return references for ContinuationPoints from separate Browse calls combined into one BrowseNext call." name="004.js" filename="View Services/View Minimum Continuation Point 05/Test Cases/004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="View Services/View Minimum Continuation Point 05/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support minimum 10 continuation points per Session.&#xa;This number has to be supported for at least half of the minimum required sessions." name="View Minimum Continuation Point 10" used="true">
     <InitTestCase description="" name="initialize.js" filename="View Services/View Minimum Continuation Point 10/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="View Services/View Minimum Continuation Point 10/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="View Services/View Minimum Continuation Point 10/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support minimum 50 continuation points per Session.&#xa;This number has to be supported for at least half of the minimum required sessions." name="View Minimum Continuation Point 50" used="true">
     <InitTestCase description="" name="initialize.js" filename="View Services/View Minimum Continuation Point 50/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Please test this CU manually" name="manual.js" filename="View Services/View Minimum Continuation Point 50/Test Cases/manual.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="View Services/View Minimum Continuation Point 50/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support the RegisterNodes and UnregisterNodes Services as a way to optimize access to repeatedly used Nodes in the Server's AddressSpace." name="View RegisterNodes" used="true">
     <InitTestCase description="" name="initialize.js" filename="View Services/View RegisterNodes/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="RegisterNodes: Should return a node that refers to NodesToRegister[0]." name="001.js" filename="View Services/View RegisterNodes/Test Cases/001.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return five nodes that refer to the five NodesToRegister." name="002.js" filename="View Services/View RegisterNodes/Test Cases/002.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return 25 nodes that refer to the 25 NodesToRegister." name="003.js" filename="View Services/View RegisterNodes/Test Cases/003.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return 50 nodes that refer to the 50 NodesToRegister." name="004.js" filename="View Services/View RegisterNodes/Test Cases/004.js" checkedState="0"/>
      <TestCase description="RegisterNodes: RegisterNodes: Should return 100 nodes that refer to the 100 NodesToRegister." name="005.js" filename="View Services/View RegisterNodes/Test Cases/005.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return 20 nodes when the same node is registered 20 times." name="006.js" filename="View Services/View RegisterNodes/Test Cases/006.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return five nodes when three existing and two non-existent nodes are registered." name="007.js" filename="View Services/View RegisterNodes/Test Cases/007.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return diagnostic info as specified by the returnDiagnostics bit  mask." name="009.js" filename="View Services/View RegisterNodes/Test Cases/009.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should not return diagnostics when returnDiagnostics is 0." name="010.js" filename="View Services/View RegisterNodes/Test Cases/010.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Good service result when unregistering a registered node." name="011.js" filename="View Services/View RegisterNodes/Test Cases/011.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Good service result when unregistering five registered nodes." name="012.js" filename="View Services/View RegisterNodes/Test Cases/012.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Good service result when unregistering 25 registered nodes." name="013.js" filename="View Services/View RegisterNodes/Test Cases/013.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Good service result when unregistering 50 registered nodes." name="014.js" filename="View Services/View RegisterNodes/Test Cases/014.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Good service result when unregistering 100 registered nodes." name="015.js" filename="View Services/View RegisterNodes/Test Cases/015.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Good service result when unregistering three registered nodes and two unregistered nodes." name="016.js" filename="View Services/View RegisterNodes/Test Cases/016.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Good service result when unregistering three registered nodes and two non-existent nodes." name="017.js" filename="View Services/View RegisterNodes/Test Cases/017.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Good service result when unregistering a node that does not exist." name="018.js" filename="View Services/View RegisterNodes/Test Cases/018.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Good service result when unregistering an unregistered node." name="021.js" filename="View Services/View RegisterNodes/Test Cases/021.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Good service result when unregistering multiple unregistered nodes." name="022.js" filename="View Services/View RegisterNodes/Test Cases/022.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should not unregister a registered node when the &quot;source&quot; node is unregistered." name="023.js" filename="View Services/View RegisterNodes/Test Cases/023.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return diagnostic info as specified by the returnDiagnostics bit  mask." name="024.js" filename="View Services/View RegisterNodes/Test Cases/024.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should not return diagnostics when returnDiagnostics is 0." name="025.js" filename="View Services/View RegisterNodes/Test Cases/025.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return Bad_NothingToDo when nodesToRegister[] is empty." name="Err-001.js" filename="View Services/View RegisterNodes/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return Bad_OutOfMemory, Bad_EncodingLimitsExceeded or Bad_TooManyOperations when to many Nodes were requested." name="Err-002.js" filename="View Services/View RegisterNodes/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return the non-existent NodeId when the node does not exist." name="Err-003.js" filename="View Services/View RegisterNodes/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return non-existent NodeIds when the 500 nodes do not exist." name="Err-004.js" filename="View Services/View RegisterNodes/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="RegisterNodes: specify invalid NodeId; expected Bad_NodeIdInvalid." name="Err-005.js" filename="View Services/View RegisterNodes/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="RegisterNodes: mix of valid and invalid nodes. Expects Bad_InvalidNodeId." name="Err-006.js" filename="View Services/View RegisterNodes/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return service error Bad_SecurityChecksFailed when authenticationToken is null." name="Err-007.js" filename="View Services/View RegisterNodes/Test Cases/Err-007.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return Bad_SecurityChecksFailed when the authenticationToken does not exist." name="Err-008.js" filename="View Services/View RegisterNodes/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="RegisterNodes: Should return BadInvalidTimestamp when the RequestHeader.Timestamp is too far out of range." name="Err-009.js" filename="View Services/View RegisterNodes/Test Cases/Err-009.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Bad_NothingToDo when there are no nodes to unregister." name="Err-011.js" filename="View Services/View RegisterNodes/Test Cases/Err-011.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return service error Bad_SecurityChecksFailed when authenticationToken is null." name="Err-012.js" filename="View Services/View RegisterNodes/Test Cases/Err-012.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return Bad_SecurityChecksFailed when the authenticationToken does not exist." name="Err-013.js" filename="View Services/View RegisterNodes/Test Cases/Err-013.js" checkedState="0"/>
      <TestCase description="UnregisterNodes: Should return BadInvalidTimestamp when the RequestHeader.Timestamp is too far out of range." name="Err-014.js" filename="View Services/View RegisterNodes/Test Cases/Err-014.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="View Services/View RegisterNodes/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Support TranslateBrowsePathsToNodeIds Service." name="View TranslateBrowsePath" used="true">
     <InitTestCase description="" name="initialize.js" filename="View Services/View TranslateBrowsePath/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return a valid targetId when supplied a one path element." name="001.js" filename="View Services/View TranslateBrowsePath/Test Cases/001.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return the NodeId of the last (fourth) BrowsePaths element." name="002.js" filename="View Services/View TranslateBrowsePath/Test Cases/002.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return the NodeId of the last BrowsePaths element when there are 10 BrowsePath elements." name="003.js" filename="View Services/View TranslateBrowsePath/Test Cases/003.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return the NodeId of the last BrowsePaths element when IsInverse = true." name="004.js" filename="View Services/View TranslateBrowsePath/Test Cases/004.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return target NodeId when BrowsePath element's ReferenceTypeId is a parent type and IncludeSubtypes = true." name="005.js" filename="View Services/View TranslateBrowsePath/Test Cases/005.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return the NodeId of the matching BrowseName when ReferenceTypeId is a null NodeId." name="011.js" filename="View Services/View TranslateBrowsePath/Test Cases/011.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return four TargetIds, one for each of four BrowsePaths elements." name="012.js" filename="View Services/View TranslateBrowsePath/Test Cases/012.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return four TargetIds, one for each of ten BrowsePaths elements." name="013.js" filename="View Services/View TranslateBrowsePath/Test Cases/013.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return the target NodeId when a RelativePath element's ReferenceTypeId is that of the target and IncludeSubtypes is true." name="014.js" filename="View Services/View TranslateBrowsePath/Test Cases/014.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return target NodeId when BrowsePath element's ReferenceTypeId is a grandparent type and IncludeSubtypes = true." name="015.js" filename="View Services/View TranslateBrowsePath/Test Cases/015.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return diagnostic info as specified by the returnDiagnostics bit  mask." name="016.js" filename="View Services/View TranslateBrowsePath/Test Cases/016.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should not return diagnostics when returnDiagnostics is 0." name="017.js" filename="View Services/View TranslateBrowsePath/Test Cases/017.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return operation result Bad_NodeIdInvalid when the starting node has invalid syntax." name="Err-001.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-001.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return good for matching browsePaths and bad for non-matching browsePaths." name="Err-002.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-002.js" checkedState="0"/>
      <TestCase description="Empty request, expects Bad_NothingToDo." name="Err-003.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-003.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return operation result Bad_NodeIdUnknown when the StartingNode does not exist." name="Err-004.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-004.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return operation result Bad_NothingToDo when RelativePaths is empty." name="Err-005.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-005.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return operation result Bad_NoMatch when the BrowseName does not match." name="Err-006.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-006.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return operation result Bad_BrowseNameInvalid when the last RelativePath element's TargetName is a null QualifiedName." name="Err-007.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-007.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return operation result Bad_BrowseNameInvalid when a RelativePath element prior to the last element contains a null BrowseName." name="Err-008.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-008.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return operation result Bad_NoMatch when a RelativePath element specifies a ReferenceTypeId that does not match a reference." name="Err-011.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-011.js" checkedState="0"/>
      <TestCase description="Translate: relativePath contains invalid NodeId for referenceTypeId." name="Err-012.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-012.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return Bad_NoMatch when the ReferenceTypeId is a NodeId that does not exist." name="Err-013.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-013.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return operation result Bad_BrowseNameInvalid or Bad_NoMatch when a browseName is too long or contains invalid characters." name="Err-014.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-014.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return Bad_NoMatch when a RelativePath element's ReferenceTypeId is a parent of the reference's ReferenceTypeId and IncludeSubtypes is false." name="Err-015.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-015.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return operation result Bad_NoMatch when the ReferenceTypeId is the NodeId of something other than a reference type." name="Err-018.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-018.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return Bad_NoMatch when a RelativePath's element's IsInverse is true and the BrowseName is in the Forward direction." name="Err-019.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-019.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should match any node when ReferenceTypeId is null and includeSubtypes is false." name="Err-020.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-020.js" checkedState="0"/>
      <TestCase description="Test ServerCapabilities max operations-per-method for TranslateBrowsePathsToNodeIds." name="Err-021.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-021.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return service error Bad_SecurityChecksFailed when authenticationToken is null." name="Err-022.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-022.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return Bad_SecurityChecksFailed when the authenticationToken does not exist." name="Err-023.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-023.js" checkedState="0"/>
      <TestCase description="TranslateBrowsePathsToNodeIds: Should return BadInvalidTimestamp when the RequestHeader.Timestamp is too far out of range." name="Err-024.js" filename="View Services/View TranslateBrowsePath/Test Cases/Err-024.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="View Services/View TranslateBrowsePath/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="18" description="User level security includes support for security audit trails, with traceability between Client and Server audit logs." name="Auditing">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Note: Ensure that the CTT is configured to receive AuditEvents. It is recommended that AuditEvents are only provided for special users over a secure connection. Support AuditEvents. The list of supported AuditEvents shall be verified during certification testing and will be shown in the Certificate." name="Auditing Base" used="true">
     <InitTestCase description="" name="initialize.js" filename="Auditing/Auditing Base/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="" name="AASET-001.js" filename="Auditing/Auditing Base/Test Cases/AASET-001.js" checkedState="0"/>
      <TestCase description="" name="AASET-002.js" filename="Auditing/Auditing Base/Test Cases/AASET-002.js" checkedState="0"/>
      <TestCase description="" name="AASET-004.js" filename="Auditing/Auditing Base/Test Cases/AASET-004.js" checkedState="0"/>
      <TestCase description="" name="AASET-005.js" filename="Auditing/Auditing Base/Test Cases/AASET-005.js" checkedState="0"/>
      <TestCase description="" name="ACSET-001.js" filename="Auditing/Auditing Base/Test Cases/ACSET-001.js" checkedState="0"/>
      <TestCase description="" name="ACSET-002.js" filename="Auditing/Auditing Base/Test Cases/ACSET-002.js" checkedState="0"/>
      <TestCase description="" name="ACSET-004.js" filename="Auditing/Auditing Base/Test Cases/ACSET-004.js" checkedState="0"/>
      <TestCase description="" name="AOSCET-001.js" filename="Auditing/Auditing Base/Test Cases/AOSCET-001.js" checkedState="0"/>
      <TestCase description="" name="AOSCET-002.js" filename="Auditing/Auditing Base/Test Cases/AOSCET-002.js" checkedState="0"/>
      <TestCase description="" name="AOSCET-003.js" filename="Auditing/Auditing Base/Test Cases/AOSCET-003.js" checkedState="0"/>
      <TestCase description="" name="AOSCET-004.js" filename="Auditing/Auditing Base/Test Cases/AOSCET-004.js" checkedState="0"/>
      <TestCase description="" name="AOSCET-005.js" filename="Auditing/Auditing Base/Test Cases/AOSCET-005.js" checkedState="0"/>
      <TestCase description="" name="AOSCET-006.js" filename="Auditing/Auditing Base/Test Cases/AOSCET-006.js" checkedState="0"/>
      <TestCase description="" name="ASET-003.js" filename="Auditing/Auditing Base/Test Cases/ASET-003.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Auditing/Auditing Base/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
  <ConformanceGroup runOrder="19" description="Defines ConformanceUnits for various features of OPC UA Alarms and Conditions." name="Alarms and Conditions">
   <ConformanceUnits>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Basic." name="A and C Basic" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Basic/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Check the object type definition exists in the Type system (address space) and that it complies with the official definition (check the specification)." name="Test_001.js" filename="Alarms and Conditions/A and C Basic/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Check any derived types, ensure that generated Alarm/Conditions comply with the expected structure of the parent type." name="Test_002.js" filename="Alarms and Conditions/A and C Basic/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Check alarms/conditions that are reported comply with the type definition when 'IsAbstract=False'; if 'IsAbstract=True' then no Alarm/Condition are recieved." name="Test_003.js" filename="Alarms and Conditions/A and C Basic/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="For conditions that are Active, change the Quality of a condition such as disconnecting from the alarm source (e.g. PLC etc.)" name="Test_004.js" filename="Alarms and Conditions/A and C Basic/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Validate condition notifications" name="Test_005.js" filename="Alarms and Conditions/A and C Basic/Test Cases/Test_005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Basic/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition model ConditionType." name="A and C Enable" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Enable/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Search and save address space conditions, Validate Enable/Disable" name="Test_001.js" filename="Alarms and Conditions/A and C Enable/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Test Disable Method" name="Test_002.js" filename="Alarms and Conditions/A and C Enable/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Test Enable Method" name="Test_003.js" filename="Alarms and Conditions/A and C Enable/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Specify multiple methods in one 'Call' where method, for example: (1)=Enable; (2)=Disable; (3)=Disable; (4)=Enable." name="Test_008.js" filename="Alarms and Conditions/A and C Enable/Test Cases/Test_008.js" checkedState="0"/>
      <TestCase description="Disable an already-disabled condition instance." name="Err_004.js" filename="Alarms and Conditions/A and C Enable/Test Cases/Err_004.js" checkedState="0"/>
      <TestCase description="Enable an already-enabled condition instance." name="Err_005.js" filename="Alarms and Conditions/A and C Enable/Test Cases/Err_005.js" checkedState="0"/>
      <TestCase description="Enable a condition instance that the user does not have access to." name="Err_006.js" filename="Alarms and Conditions/A and C Enable/Test Cases/Err_006.js" checkedState="0"/>
      <TestCase description="Disable a condition instance that the user does not have access to." name="Err_007.js" filename="Alarms and Conditions/A and C Enable/Test Cases/Err_007.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Enable/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Acknowledge." name="A and C Acknowledge" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Invoke Acknowledge method passing eventId as received and  a unique comment" name="Test_001.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Call AddComment() and pass a unique comment, Invoke Acknowledge() method passing eventId as received and NULL comment (both locale and text)" name="Test_002.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Invoke acknowledge method passing eventId as received and empty comment" name="Test_003.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Individually acknowledge events in multiple sessions" name="Err_004.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/Err_004.js" checkedState="0"/>
      <TestCase description="Invoke acknowledge method passing the same eventId and comment" name="Err_005.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/Err_005.js" checkedState="0"/>
      <TestCase description="Invoke acknowledge method passing a random eventId (not in list) and comment" name="Err_006.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/Err_006.js" checkedState="0"/>
      <TestCase description="Invoke acknowledge method passing an invalid ConditionId to the call service" name="Err_007.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/Err_007.js" checkedState="0"/>
      <TestCase description="Invoke acknowledge method passing the nodeId of the conditionType node to the call service" name="Err_008.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/Err_008.js" checkedState="0"/>
      <TestCase description="Invoke acknowledge method passing an invalid existing Objectid As the conditionId (not an Alarm instance or valid condition, but a valid Object - i.e. server object or some other object) to the call service" name="Err_009.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/Err_009.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Acknowledge/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Confirm." name="A and C Confirm" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Invoke Confirm method passing eventId as received and  a unique comment" name="Test_001.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Call AddComment() and pass a unique comment, Invoke Confirm() method passing eventId as received and NULL comment (both locale and text)" name="Test_002.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Invoke confirm method passing eventId as received and empty comment" name="Test_003.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Create two subscriptions (in two sessions). Individually confirm events in one session, the reconfirm in second subscription" name="Err_004.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/Err_004.js" checkedState="0"/>
      <TestCase description="Invoke confirm method passing the same eventId and comment" name="Err_005.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/Err_005.js" checkedState="0"/>
      <TestCase description="Invoke confirm method passing a random eventId (not in list) and comment" name="Err_006.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/Err_006.js" checkedState="0"/>
      <TestCase description="Invoke confirm method passing an invalid ConditionId to the call service" name="Err_007.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/Err_007.js" checkedState="0"/>
      <TestCase description="Invoke confirm method passing the nodeId of the conditionType node to the call service" name="Err_008.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/Err_008.js" checkedState="0"/>
      <TestCase description="Invoke confirm method passing an invalid existing Objectid As the conditionId (not an Alarm instance or valid condition, but a valid Object - i.e. server object or some other object) to the call service" name="Err_009.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/Err_009.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Confirm/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Alarm." name="A and C Alarm" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Alarm/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Verify the AlarmConditionType is nested and follow all of its references to identify all Alarm Condition types." name="Test_000.js" filename="Alarms and Conditions/A and C Alarm/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Use multiple select fields for event notification" name="Test_001.js" filename="Alarms and Conditions/A and C Alarm/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Call acknowledge and/or confirm on the alarm (that has returned to normal)" name="Test_002.js" filename="Alarms and Conditions/A and C Alarm/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Call acknowledge and/or confirm on multiple alarm (that have returned to normal)" name="Test_003.js" filename="Alarms and Conditions/A and C Alarm/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Select an alarm and read the value of the nodeid that was returned from the InputNode property" name="Test_004.js" filename="Alarms and Conditions/A and C Alarm/Test Cases/Test_004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Alarm/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Refresh." name="A and C Refresh" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Refresh/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walk through the address space and verify the ConditionRefresh method exists on ConditionType type." name="Test_000.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Connect to the Server, create a subscription for an MonitoredItem (Notifier) and invoke ConditionRefresh()." name="Test_001.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Connect to the Server, create a subscription for two MonitoredItem (Notifier) and invoke ConditionRefresh()." name="Test_002.js" filename="Alarms and Conditions/A and C Refresh/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Create 2 subscriptions with each have a monitored item with a different (unique) filter. Invoke ConditionRefresh for each subscription." name="Test_003.js" filename="Alarms and Conditions/A and C Refresh/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Verify the structure of a RefreshStartEventType event." name="Test_004.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Verify the structure of a RefreshEndEventType event." name="Test_005.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Create two sessions with a valid configuration for events. Then call ConditionRefresh on one Subscription." name="Test_006.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_006.js" checkedState="0"/>
      <TestCase description="Create a subscription for events and observing the communication for a while (e.g. until 10 Alarms have been received). After receiving several Alarms call the ConditionRefresh method and see if all Alarms are reported." name="Test_007.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_007.js" checkedState="0"/>
      <TestCase description="After receiving several events create a second session with the same configuration for a subscription and MonitoredItem and call the ConditionRefresh method and see if all alarms are reported." name="Test_008.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_008.js" checkedState="0"/>
      <TestCase description="Specify an invalid SubscriptionId." name="Err_001.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Err_001.js" checkedState="0"/>
      <TestCase description="Create a valid Subscription to monitor Events. Invoke ConditionRefresh again and specify an invalid SubscriptionId." name="Err_003.js" filename="Alarms and Conditions/A and C Refresh/Test Cases/Err_003.js" checkedState="0"/>
      <TestCase description="Add two or more refresh ConditionRefresh calls (near simultaneously)." name="Err_004.js" filename="Alarms and Conditions/A and C Refresh/Test Cases/Err_004.js" checkedState="0"/>
      <TestCase description="Create two sessions with a valid configuration for events. Then call ConditionRefresh in the first Session specifying the SubscriptionId from the second Session." name="Err_005.js" filename="Alarms and Conditions/A and C Refresh/Test Cases/Err_005.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Refresh/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Refresh2." name="A and C Refresh2" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Refresh2/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walk through the address space and verify the ConditionRefresh2 method exists on ConditionType type." name="Test_000.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Connect to the Server, create a subscription for an MonitoredItem (Notifier) and invoke ConditionRefresh2()." name="Test_001.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Create 2 subscriptions with each monitoring conditions of different types. Invoke ConditionRefresh2 for each subscription." name="Test_002.js" filename="Alarms and Conditions/A and C Refresh2/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Create 1 subscription monitoring 2 items. Invoke ConditionRefresh2 for one MonitoredItemId, then the other" name="Test_003.js" filename="Alarms and Conditions/A and C Refresh2/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Verify the structure of a RefreshStartEventType event." name="Test_004.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Verify the structure of a RefreshEndEventType event." name="Test_005.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Create two sessions with a valid configuration for events. Then call ConditionRefresh2 on one Subscription." name="Test_006.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_006.js" checkedState="0"/>
      <TestCase description="Create a subscription for events and observing the communication for a while (e.g. until 10 Alarms have been received). After receiving several Alarms call the ConditionRefresh2 method and see if all Alarms are reported." name="Test_007.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_007.js" checkedState="0"/>
      <TestCase description="After receiving several events create a second session with the same configuration for a subscription and MonitoredItem and call the ConditionRefresh2 method and see if all alarms are reported." name="Test_008.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Test_008.js" checkedState="0"/>
      <TestCase description="Specify an invalid SubscriptionId." name="Err_001.js" filename="Alarms and Conditions/A and C Base/Refresh/Test Cases/Err_001.js" checkedState="0"/>
      <TestCase description="Create a valid Subscription to monitor Events subscribing to events of the Server Object and call ConditionRefresh2 to verify everything is working fine. Then invoke ConditionRefresh2 again and specify an invalid SubscriptionId." name="Err_002.js" filename="Alarms and Conditions/A and C Refresh2/Test Cases/Err_002.js" checkedState="0"/>
      <TestCase description="Add two or more refresh ConditionRefresh2 calls (near simultaneously)." name="Err_003.js" filename="Alarms and Conditions/A and C Refresh2/Test Cases/Err_003.js" checkedState="0"/>
      <TestCase description="Specify a valid SubscriptionId but specify an invalid MonitoredItemId." name="Err_004.js" filename="Alarms and Conditions/A and C Refresh2/Test Cases/Err_004.js" checkedState="0"/>
      <TestCase description="Create two sessions with a valid configuration for events. Then call ConditionRefresh2 in the first Session specifying the SubscriptionId and MonitoredItemId from the second Session." name="Err_006.js" filename="Alarms and Conditions/A and C Refresh2/Test Cases/Err_006.js" checkedState="0"/>
      <TestCase description="Create two sessions with a valid configuration for events. Then call ConditionRefresh2 in the first Session specifying the SubscriptionId from the first session and MonitoredItemId from the second Session." name="Err_007.js" filename="Alarms and Conditions/A and C Refresh2/Test Cases/Err_006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Refresh2/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Shelve." name="A and C Shelve" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Check if MaxTimeShelved is defined correctly in the type system" name="Test_000.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Use multiple select fields for event notification" name="Test_001.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Check OneShotShelve is cleared on Any Transition Occurs" name="Test_002.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Check OneShotShelve is still active on Alarm Transition to active state" name="Test_003.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Check OneShotShelve is cleared after MaxTimeShelved" name="Test_004.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Check 20 Second TimedShelve" name="Test_005.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Check TimedShelve on Regular interval Alarm" name="Test_006.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_006.js" checkedState="0"/>
      <TestCase description="Check TimedShelve and Unshelve on Regular interval Always Active Alarm" name="Test_007.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_007.js" checkedState="0"/>
      <TestCase description="Check OneShotShelve and Unshelve on Always Active Alarm" name="Test_008.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_008.js" checkedState="0"/>
      <TestCase description="Check OneShotShelve and TimedShelve on Always Active Alarm" name="Test_009.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_009.js" checkedState="0"/>
      <TestCase description="Check TimedShelve and OneShotShelve on Always Active Alarm" name="Test_010.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Test_010.js" checkedState="0"/>
      <TestCase description="Call TimedShelve Twice" name="Err_001.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Err_001.js" checkedState="0"/>
      <TestCase description="Call OneShotShelve Twice" name="Err_002.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Err_002.js" checkedState="0"/>
      <TestCase description="Call Unshelve on unshelved alarm" name="Err_003.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Err_003.js" checkedState="0"/>
      <TestCase description="Call TimedShelve with interval longer than MaxTimeShelved" name="Err_004.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/Err_004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Shelve/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Comment." name="A and C Comment" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Comment/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Browse the type definitions in the address space for Conditions and locate the AddComment method" name="Test_000.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Call add comment for an event, providing a valid comment" name="Test_001.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Add multiple (separate) comments to a single Event in a single 'Call'" name="Test_002.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Specify an empty Comment. (the default locale is defined and the string is empty)" name="Test_003.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Specify a string using an available local (other than english)" name="Test_004.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Specify an EventId that is unknown (but is syntactically valid)" name="Err_002.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Err_002.js" checkedState="0"/>
      <TestCase description="Call AddComment on the ConditionType node" name="Err_003.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Err_003.js" checkedState="0"/>
      <TestCase description="Specify a Condition where the NodeId does not exist (but is syntactically valid)" name="Err_004.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Err_004.js" checkedState="0"/>
      <TestCase description="Call the method but specify the ServerObject as the target object" name="Err_005.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Err_005.js" checkedState="0"/>
      <TestCase description="Add a Comment while specifying an EventId where the related EventType does not support Comments" name="Err_006.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Err_006.js" checkedState="0"/>
      <TestCase description="Add a VERY LARGE comment" name="Err_007.js" filename="Alarms and Conditions/A and C Comment/Test Cases/Err_007.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Comment/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Suppression." name="A and C Suppression" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Suppression/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Suppressed alarm becomes unsuppressed" name="Test_001.js" filename="Alarms and Conditions/A and C Suppression/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Suppressed alarm returns to normal and becomes unsuppressed " name="Test_002.js" filename="Alarms and Conditions/A and C Suppression/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Create  an event subscription that has a filter that restrict the events that have SuppressedOrShelved = TRUE" name="Test_003.js" filename="Alarms and Conditions/A and C Suppression/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Create  an event subscription that has a filter that restrict the events that have SuppressedOrShelved = FALSE" name="Test_004.js" filename="Alarms and Conditions/A and C Suppression/Test Cases/Test_004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Suppression/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Discrete." name="A and C Discrete" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C Discrete/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Check DiscreteAlarmType Definition" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Discrete/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Validate DiscreteAlarmType Fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Discrete/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Validate Alarm States" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Discrete/Test Cases/Test_002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C Discrete/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition OffNormal." name="A and C OffNormal" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C OffNormal/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Check OffNormalAlarmType Definition" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Discrete/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Validate OffNormalAlarmType Fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Discrete/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Validate Alarm States" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Discrete/Test Cases/Test_002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C OffNormal/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition SystemOffNormal." name="A and C SystemOffNormal" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C SystemOffNormal/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Check SystemOffNormalAlarmType Definition" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Discrete/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Validate SystemOffNormalAlarmType Fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Discrete/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Validate Alarm States" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Discrete/Test Cases/Test_002.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C SystemOffNormal/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition CertificateExpiration." name="A and C CertificateExpiration" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C CertificateExpiration/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Check CertificateExpiration Definition" name="Test_000.js" filename="Alarms and Conditions/A and C CertificateExpiration/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Load a certificate that is about to reach the expiration limit" name="Test_001.js" filename="Alarms and Conditions/A and C CertificateExpiration/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Load a certificate that is already within the expirationlimit" name="Test_002.js" filename="Alarms and Conditions/A and C CertificateExpiration/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Load a certificate that is already expired" name="Test_003.js" filename="Alarms and Conditions/A and C CertificateExpiration/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Use Multiple event filters" name="Test_004.js" filename="Alarms and Conditions/A and C CertificateExpiration/Test Cases/Test_004.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C CertificateExpiration/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Exclusive Limit." name="A and C ExclusiveLimit" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C ExclusiveLimit/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walk through the address space checking the type definition and Instances of ExclusiveLimitAlarmType" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Create an Alarm filter that include all fields available for a ExclusiveLimitAlarmType, Check the data type of the return fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Watch for a ExclusiveLimitAlarmType alarm, verify that it occurred on an apprpriate threshhold, Ensure that all alarm limits defined have been exercised" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of HighHigh state." name="Test_003.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of High state." name="Test_004.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of Low state." name="Test_005.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of LowLow state." name="Test_006.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C ExclusiveLimit/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Exclusive Level." name="A and C ExclusiveLevel" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C ExclusiveLevel/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walk through the address space checking the type definition and Instances of ExclusiveLevelAlarmType" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Create an Alarm filter that include all fields available for a ExclusiveLevelAlarmType, Check the data type of the return fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Watch for a ExclusiveLevelAlarmType alarm, verify that it occurred on an apprpriate threshhold, Ensure that all alarm limits defined have been exercised" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of HighHigh state." name="Test_003.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of High state." name="Test_004.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of Low state." name="Test_005.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of LowLow state." name="Test_006.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C ExclusiveLevel/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Exclusive Deviation." name="A and C ExclusiveDeviation" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C ExclusiveDeviation/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walk through the address space checking the type definition and Instances of ExclusiveDeviationAlarmType" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Create an Alarm filter that include all fields available for a ExclusiveDeviationAlarmType, Check the data type of the return fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Watch for a ExclusiveDeviationAlarmType alarm, verify that it occurred on an apprpriate threshhold, Ensure that all alarm limits defined have been exercised" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of HighHigh state." name="Test_003.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of High state." name="Test_004.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of Low state." name="Test_005.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of LowLow state." name="Test_006.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C ExclusiveDeviation/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Exclusive Rate of Change." name="A and C ExclusiveRateOfChange" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C ExclusiveRateOfChange/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walk through the address space checking the type definition and Instances of ExclusiveRateOfChangeAlarmType" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Create an Alarm filter that include all fields available for a ExclusiveRateOfChangeAlarmType, Check the data type of the return fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Watch for a ExclusiveRateOfChangeAlarmType alarm, verify that it occurred on an apprpriate threshhold, Ensure that all alarm limits defined have been exercised" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of HighHigh state." name="Test_003.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of High state." name="Test_004.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of Low state." name="Test_005.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of LowLow state." name="Test_006.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C ExclusiveRateOfChange/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Non Exclusive Limit." name="A and C NonExclusiveLimit" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C NonExclusiveLimit/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walk through the address space checking the type definition and Instances of NonExclusiveLimitAlarmType" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Create an Alarm filter that include all fields available for a NonExclusiveLimitAlarmType, Check the data type of the return fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Watch for a NonExclusiveLimitAlarmType alarm, verify that it occurred on an apprpriate threshhold, Ensure that all alarm limits defined have been exercised" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of HighHigh state." name="Test_003.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of High state." name="Test_004.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of Low state." name="Test_005.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of LowLow state." name="Test_006.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C NonExclusiveLimit/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Non Exclusive Level." name="A and C NonExclusiveLevel" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C NonExclusiveLevel/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walk through the address space checking the type definition and Instances of NonExclusiveLevelAlarmType" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Create an Alarm filter that include all fields available for a NonExclusiveLevelAlarmType, Check the data type of the return fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Watch for a NonExclusiveLevelAlarmType alarm, verify that it occurred on an apprpriate threshhold, Ensure that all alarm limits defined have been exercised" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of HighHigh state." name="Test_003.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of High state." name="Test_004.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of Low state." name="Test_005.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of LowLow state." name="Test_006.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C NonExclusiveLevel/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Non Exclusive Deviation." name="A and C NonExclusiveDeviation" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C NonExclusiveDeviation/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walk through the address space checking the type definition and Instances of NonExclusiveDeviationAlarmType" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Create an Alarm filter that include all fields available for a NonExclusiveDeviationAlarmType, Check the data type of the return fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Watch for a NonExclusiveDeviationAlarmType alarm, verify that it occurred on an apprpriate threshhold, Ensure that all alarm limits defined have been exercised" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of HighHigh state." name="Test_003.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of High state." name="Test_004.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of Low state." name="Test_005.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of LowLow state." name="Test_006.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C NonExclusiveDeviation/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
    <ConformanceUnit category="Server" description="Supports Alarm and Condition Non Exclusive Rate of Change." name="A and C NonExclusiveRateOfChange" used="true">
     <InitTestCase description="" name="initialize.js" filename="Alarms and Conditions/A and C NonExclusiveRateOfChange/Test Cases/initialize.js" checkedState="0"/>
     <TestCases>
      <TestCase description="Walk through the address space checking the type definition and Instances of NonExclusiveRateOfChangeAlarmType" name="Test_000.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_000.js" checkedState="0"/>
      <TestCase description="Create an Alarm filter that include all fields available for a NonExclusiveRateOfChangeAlarmType, Check the data type of the return fields" name="Test_001.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_001.js" checkedState="0"/>
      <TestCase description="Watch for a NonExclusiveRateOfChangeAlarmType alarm, verify that it occurred on an apprpriate threshhold, Ensure that all alarm limits defined have been exercised" name="Test_002.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_002.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of HighHigh state." name="Test_003.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_003.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of High state." name="Test_004.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_004.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of Low state." name="Test_005.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_005.js" checkedState="0"/>
      <TestCase description="Ensure that a filter can be created that restrict to only receive event that are of LowLow state." name="Test_006.js" filename="Alarms and Conditions/A and C Base/Limit/Test Cases/Test_006.js" checkedState="0"/>
     </TestCases>
     <CleanupTestCase description="" name="cleanup.js" filename="Alarms and Conditions/A and C NonExclusiveRateOfChange/Test Cases/cleanup.js" checkedState="0"/>
    </ConformanceUnit>
   </ConformanceUnits>
  </ConformanceGroup>
 </ConformanceGroups>
 <Profiles>
  <Profile category="Server" description="specifies Auditing functionality for Servers." uri="http://opcfoundation.org/UA-Profile/Server/Auditing" name="Auditing Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Auditing Base"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Standard Event Subscription Server Facet"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="specifies behavioural aspects that Servers shall follow for best use by operators and administrators. These aspects can only be tested in a test lab.  They are best practice guidelines." uri="http://opcfoundation.org/UA-Profile/Server/Behaviour" name="Base Server Behaviour Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Protocol Configuration"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Administration - XML Schema"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Certificate Administration"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Administration"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Discovery Configuration"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="includes the ConformanceUnits to support redundant Clients." uri="http://opcfoundation.org/UA-Profile/Server/ClientRedundancy" name="Client Redundancy Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Transfer"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="This Facet extends the Core Server Facet to include Variables with structured data, i.e. data that are composed of multiple elements such as a structure and where the individual elements are exposed as component variables. Support of this Facet requires the implementation of structured DataTypes and Variables that make use of these DataTypes. The Read, Write and Subscriptions service set shall support the encoding and decoding of these structured DataTypes. As an option the Server can also support alternate encodings, such as an XML encoding when the binary protocol is currently used and vice-versa." uri="http://opcfoundation.org/UA-Profile/Server/ComplexTypes2017" name="ComplexType 2017 Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Alternate Encoding"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Alternate Encoding"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Read Complex"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Write Complex"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="Note: ComplexType Server Facet has been deprecated as it is superseded with ComplexType 2017 Server Facet in v1.04.\nThis Facet extends the Core Server Facet to include Variables with Complex Data, i.e. data that are composed of multiple elements such as a structure and where the individual elements are exposed as component variables. Support of this Facet requires the implementation of structured DataTypes and Variables that make use of these DataTypes. The Read, Write and Subscriptions service set shall support the encoding and decoding of these structured DataTypes. As an option the Server can also support alternate encodings, such as an XML encoding when the binary protocol is currently used and vice-versa." uri="http://opcfoundation.org/UA-Profile/Server/ComplexTypes" name="ComplexType Server Facet [deprecated]">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Alternate Encoding"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Alternate Encoding"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Read Complex"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Address Space Complex Datatypes"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Write Complex"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="This Facet supersedes the Core Server Facet." uri="http://opcfoundation.org/UA-Profile/Server/Core2017Facet" name="Core 2017 Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Address Space Base"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Address Space Atomicity"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Read"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Write Values"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Write Index"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Core Structure"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Server Capabilities"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Placeholder Modelling Rules"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info OptionSet"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info ValueAsText"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Discovery Get Endpoints"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Discovery Find Servers Self"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Administration"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session General Service Behaviour"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Base"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Minimum 1"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="View Basic"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="View TranslateBrowsePath"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="View RegisterNodes"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="View Minimum Continuation Point 01"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="User Token - User Name Password Server Facet"/>
    <IncludeProfile name="SecurityPolicy - None"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="defines core functionality for all Servers.&#xa;This facet identifies Discovery, Session, AddressSpace and Viewing capabilities." uri="http://opcfoundation.org/UA-Profile/Server/CoreFacet" name="Core Server Facet [deprecated]">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Address Space Base"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Core Structure"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Server Capabilities"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Placeholder Modelling Rules"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info OptionSet"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info ValueAsText"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Read"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Write Values"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Write Index"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Discovery Get Endpoints"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Discovery Find Servers Self"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Administration"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security - No Application Authentication"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session General Service Behaviour"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Base"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Minimum 1"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="View Basic"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="View TranslateBrowsePath"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="View RegisterNodes"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="View Minimum Continuation Point 01"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="User Token - User Name Password Server Facet"/>
    <IncludeProfile name="SecurityPolicy - None"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="includes ConformanceUnits that define the handling of the DataAccess Information Model." uri="http://opcfoundation.org/UA-Profile/Server/DataAccess" name="DataAccess Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Data Access AnalogItemType"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Data Access ArrayItemType"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Data Access ComplexNumber"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Data Access DataItems"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Data Access DoubleComplex Number"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Data Access MultiState"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Data Access PercentDeadBand"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Data Access Semantic Changes"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Data Access TwoState"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="This Facet specifies support of durable storage of data and events even when Clients are disconneccted. This Facet implies support of any of the DataChange or Event Subscription Facets." uri="http://opcfoundation.org/UA-Profile/Server/DurableSubscription" name="Durable Subscription Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Durable"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="This Profile is a FullFeatured Profile that is intended for devices with more than 50 MBs of memory and a more powerful processor. This Profile builds upon the Micro Embedded Device Server Profile. The most important additions are: support for security via the Security Policies and support for the Standard DataChange Subscription Server Facet. This Profile also requires that Servers expose all OPC-UA types that are used by the Server including their components and their super-types. This profile supersedes the Embedded UA Server Profile." uri="http://opcfoundation.org/UA-Profile/Server/EmbeddedUA2017" name="Embedded 2017 UA Server Profile">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Type System"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Engineering Units"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Default ApplicationInstanceCertificate"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="SecurityPolicy - Basic256Sha256"/>
    <IncludeProfile name="SecurityPolicy - Aes128-Sha256-RsaOaep"/>
    <IncludeProfile name="SecurityPolicy - Aes256-Sha256-RsaPss"/>
    <IncludeProfile name="Standard DataChange Subscription 2017 Server Facet"/>
    <IncludeProfile name="Micro Embedded Device 2017 Server"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="includes the ConformanceUnits when supporting Embedded DataChange Subscription functionality." uri="http://opcfoundation.org/UA-Profile/Server/EmbeddedDataChangeSubscription" name="Embedded DataChange Subscription Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Basic"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Value Change"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items 2"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor QueueSize_1"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Basic"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Minimum 1"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Publish Min 02"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Publish Discard Policy"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="Note: Embedded UA Server Profile has been deprecated as it is superseded with Embedded 2017 UA Server Profile in v1.04.\nThis Profile is a FullFeatured Profile that is intended for devices with more than 50 MBs of memory and a more powerful processor. This Profile builds upon the Micro Embedded Device Server Profile. The most important additions are: support for security via the Security Policy – Basic128Rsa15 Facet, and support for the Standard DataChange Subscription Server Facet. This Profile also requires that servers expose all OPC-UA types that are used by the Server including their components and their super-types." uri="http://opcfoundation.org/UA-Profile/Server/EmbeddedUA" name="Embedded UA Server Profile [deprecated]">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Type System"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Placeholder Modelling Rules"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Engineering Units"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Default ApplicationInstanceCertificate"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Standard DataChange Subsc. Srv Facet [deprecated]"/>
    <IncludeProfile name="Micro Embedded Device Server [deprecated]"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="Note: Enhanced DataChange Subscription Server Facet has been deprecated as it is superseded with Enhanced DataChange Subscription 2017 Server Facet in v1.04.\nThis Facet specifies an enhanced support of subscribing to data changes. It is part of the Standard UA Server Profile. This Facet increases the limits defined by the Standard Data Change Subscription Facet." uri="http://opcfoundation.org/UA-Profile/Server/EnhancedDataChangeSubscription" name="Enhanced DataChange Subsc. Srv Facet [deprecated]">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items 500"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor MinQueueSize_05"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Minimum 05"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Publish Min 10"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Standard DataChange Subsc. Srv Facet [deprecated]"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="This Facet specifies an enhanced support of subscribing to data changes. It is part of the Standard UA Server 2017 Profile. This Facet increases the limits defined by the Standard Data Change Subscription 2017 Server Facet." uri="http://opcfoundation.org/UA-Profile/Server/EnhancedDataChangeSubscription2017" name="Enhanced DataChange Subscription 2017 Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items 500"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor MinQueueSize_05"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Minimum 05"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Publish Min 10"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Standard DataChange Subscription 2017 Server Facet"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="defines the functionality when supporting Subscription functionality for Events." uri="http://opcfoundation.org/UA-Profile/Server/EventSubscription" name="Event Subscription Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Complex Event Filter"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor QueueSize_1"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Publish Discard Policy"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Events"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Basic"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items 10"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Minimum 02"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Publish Min 05"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Basic"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Transport" description="This transport Facet defines a combination of network protocol, security protocol and message encoding that balances compatibility with widely used HTTPS transport and a compact UA-Binary encoded message for added performance. It is expected that this transport will be used to support installations where firewalls only permit HTTPS or where a WEB browser is used as Client. This transport requires that one of the TransportSecurity Profiles for TLS be provided." uri="http://opcfoundation.org/UA-Profile/Transport/https-uabinary" name="HTTPS UA-Binary">
   <IncludeConformanceUnits/>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Transport" description="This transport Facet defines a combination of network protocol, security protocol and message encoding that uses HTTPS transport and a UA-JSON encoded message. This transport requires that one of the TransportSecurity Profiles for TLS be provided." uri="http://opcfoundation.org/UA-Profile/Transport/https-uajson" name="HTTPS UA-JSON">
   <IncludeConformanceUnits/>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Transport" description="This transport Facet defines a combination of network protocol, security protocol and message encoding that uses HTTPS transport and a SOAP XML encoded message for use with standard SOAP V1.2 toolkits. This transport requires that one of the TransportSecurity Profiles for TLS be provided." uri="http://opcfoundation.org/UA-Profile/Transport/https-uasoapxml" name="HTTPS UA-XML">
   <IncludeConformanceUnits/>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="specifies the Method handling functionality for Servers." uri="http://opcfoundation.org/UA-Profile/Server/Methods" name="Method Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Method Call"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Address Space Method"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="This Profile is a FullFeatured Profile intended for small devices with limited resources. This Profile builds upon the Nano Embedded Device Server Profile. The most important additions are: support for subscriptions via the Embedded Data Change Subscription Server Facet and support for at least two sessions. A complete Type System is not required; however, if the Server implements any non-UA types then these types and their super-types must be exposed. This profile supersedes the Micro Embedded Device Server Profile." uri="http://opcfoundation.org/UA-Profile/Server/MicroEmbeddedDevice2017" name="Micro Embedded Device 2017 Server">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Minimum 2 Parallel"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Nano Embedded Device 2017 Server"/>
    <IncludeProfile name="Embedded DataChange Subscription Server Facet"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="defines a Profile which is appropriate only for small devices with limited resources, including the inability to include a security infrastructure. It is expected that most applications will use gateways that enhance the functionality of these Servers to" uri="http://opcfoundation.org/UA-Profile/Server/MicroEmbeddedDevice" name="Micro Embedded Device Server [deprecated]">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Minimum 2 Parallel"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Nano Embedded Device Server Profile [deprecated]"/>
    <IncludeProfile name="Embedded DataChange Subscription Server Facet"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="This Profile is a FullFeatured Profile intended for chip level devices with limited resources. This Profile is functionally equivalent to the Core Server Facet and defines the OPC UA TCP binary protocol as the required transport profile.The support of Diagnostic Objects and Variables is optional for this Profile despite it being defined as “mandatory” in UA Part 5. Support of Diagnostic Objects and Variables is mandatory in some higher level Profiles. Exposing types in the AddressSpace is optional for this Profile except if custom types (i.e. types that are derived from well-known ObjectTypes, VariableTypes, ReferenceType or DataTypes) are used. Exposing all supported types in the AddressSpace is mandatory in some higher level Profiles. This profile supersedes the Nano Embedded Device Server Profile." uri="http://opcfoundation.org/UA-Profile/Server/NanoEmbeddedDevice2017" name="Nano Embedded Device 2017 Server">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Diagnostics"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Custom Type System"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Core 2017 Server Facet"/>
    <IncludeProfile name="UA-TCP UA-SC UA-Binary"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="Note: Nano Embedded Device Server Profile has been deprecated as it is superseded with Nano Embedded Device 2017 Server Profile in v1.04.\nThis Profile is a FullFeatured Profile intended for chip level devices with limited resources. This Profile is functionally equivalent to the Core Server Facet and defines the OPC UA TCP binary protocol as the required transport profile.The support of Diagnostic Objects and Variables is optional for this Profile despite it being defined as “mandatory” in UA Part 5. Support of Diagnostic Objects and Variables is mandatory in some higher level Profiles. Exposing types in the AddressSpace is optional for this Profile except if custom types (i.e. types that are derived from well-known ObjectTypes, VariableTypes, ReferenceType or DataTypes) are used. Exposing all supported types in the AddressSpace is mandatory in some higher level Profiles." uri="http://opcfoundation.org/UA-Profile/Server/NanoEmbeddedDeviceServerProfile" name="Nano Embedded Device Server Profile [deprecated]">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Diagnostics"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Custom Type System"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Core Server Facet [deprecated]"/>
    <IncludeProfile name="UA-TCP UA-SC UA-Binary"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="includes the ConformanceUnits when supporting configuration of the AddressSpace through the OPC UA Node Management Service Set." uri="http://opcfoundation.org/UA-Profile/Server/NodeManagement" name="Node Management Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Node Management Delete Ref"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Node Management Add Ref"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Node Management Delete Node"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Node Management Add Node"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Address Space Base"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="includes the ConformanceUnits for Servers with transparent redundancy." uri="http://opcfoundation.org/UA-Profile/Server/TransparentRedundancy" name="Redundancy Transparent Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Redundancy Server Transparent"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="includes the ConformanceUnits for visible redundancy." uri="http://opcfoundation.org/UA-Profile/Server/VisibleRedundancy" name="Redundancy Visible Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Redundancy Server"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="This Facet specifies the support of the RequestServerStateChange Method." uri="http://opcfoundation.org/UA-Profile/Server/RequestStateChangeServerFacet" name="Request State Change Server Facet">
   <IncludeConformanceUnits/>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="This Facet defines support of reverse connectivity in a Server." uri="http://opcfoundation.org/UA-Profile/Server/ReverseConnect" name="Reverse Connect Server Facet">
   <IncludeConformanceUnits/>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Security" description="This security Facet defines a security policy for configurations with average security needs. It requires a PKI infrastructure. As computing power increases, security policies are expected to expire. NIST provides guidelines for expected expiration dates for individual algorithms. These guidelines provide recommended dates at which the algorithm should be replaced or upgraded to a more secure algorithm. They do not indicate a failure of the algorithm. This security policy has no published end dates as of this time. It is recommended that Servers and Clients support all security profiles and support configurability of actual exposed and default security policies." uri="http://opcfoundation.org/UA/SecurityPolicy#Aes128_Sha256_RsaOaep" name="SecurityPolicy - Aes128-Sha256-RsaOaep">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Certificate Validation"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Aes128-Sha256-RsaOaep"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Encryption Required"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Signing Required"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Security" description="This security Facet defines a security policy for configurations with average security needs. It requires a PKI infrastructure. As computing power increases, security policies are expected to expire. NIST provides guidelines for expected expiration dates for individual algorithms. These guidelines provide recommended dates at which the algorithm should be replaced or upgraded to a more secure algorithm. They do not indicate a failure of the algorithm. This security policy has no published end dates as of this time. It is recommended that Servers and Clients support all security profiles and support configurability of actual exposed and default security policies." uri="http://opcfoundation.org/UA/SecurityPolicy#Aes256_Sha256_RsaPss" name="SecurityPolicy - Aes256-Sha256-RsaPss">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Certificate Validation"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Aes256-Sha256-RsaPss"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Encryption Required"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Signing Required"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Security" description="defines a Security Policy for medium to highly secure configurations." uri="http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15" name="SecurityPolicy - Basic128Rsa15">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Certificate Validation"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Basic 128Rsa15"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Encryption Required"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Signing Required"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Security" description="defines a Security Policy for configurations with high security needs." uri="http://opcfoundation.org/UA/SecurityPolicy/Basic256" name="SecurityPolicy - Basic256">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Certificate Validation"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Basic 256"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Encryption Required"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Signing Required"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Security" description="defines a Security Policy for configurations with high security needs." uri="http://opcfoundation.org/UA/SecurityPolicy/Basic256Sha256" name="SecurityPolicy - Basic256Sha256">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Certificate Validation"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Basic 256Sha256"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Encryption Required"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security Signing Required"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Security" description="defines a policy used for configurations with lowest security needs. This Security Policy can affect the behaviour of the CreateSession and Activate Session services. It also results in a SecureChannel which has no Channel Security" uri="http://opcfoundation.org/UA/SecurityPolicy#None" name="SecurityPolicy - None">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security None"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security None CreateSession ActivateSession"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security None CreateSession ActivateSession 1.01"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="Defines the use of Sessionless Service invocation in a Server." uri="http://opcfoundation.org/UA-Profile/Server/SessionLess" name="Sessionless Server Facet">
   <IncludeConformanceUnits/>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="This Profile is a FullFeatured Profile that defines a minimum set of functionality required for PC based OPC UA servers. Compared to the embedded profiles, the Profile requires higher limits for Sessions, Subscriptions and Monitored Items. It also requires support of diagnostic information. This profile supersedes the Standard UA Server Profile." uri="http://opcfoundation.org/UA-Profile/Server/StandardUA2017" name="Standard 2017 UA Server">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Diagnostics"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Discovery Register"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Discovery Register2"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Change User"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Cancel"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Minimum 50 Parallel"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="View Minimum Continuation Point 05"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Write StatusCode &amp; TimeStamp"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Enhanced DataChange Subscription 2017 Server Facet"/>
    <IncludeProfile name="Embedded 2017 UA Server Profile"/>
    <IncludeProfile name="User Token - X509 Certificate Server Facet"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="includes the ConformanceUnits when supporting Standard DataChange Subscription functionality." uri="http://opcfoundation.org/UA-Profile/Server/StandardDataChangeSubscription" name="Standard DataChange Subsc. Srv Facet [deprecated]">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Method Call"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items Deadband Filter"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items 10"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items 100"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor MinQueueSize_02"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Triggering"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Minimum 02"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Publish Min 05"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info GetMonitoredItems Method"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Embedded DataChange Subscription Server Facet"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="This Facet specifies the standard support of subscribing to data changes and extends features and limits defined by the Embedded Data Change Subscription Facet. See ConformanceUnits for these limits. Note that the Method Call Service is only required for the Methods defined in this Facet. This Facet supersedes the Standard DataChange Subscription Server Facet." uri="http://opcfoundation.org/UA-Profile/Server/StandardDataChangeSubscription2017" name="Standard DataChange Subscription 2017 Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Method Call"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items Deadband Filter"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items 10"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items 100"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor MinQueueSize_02"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Triggering"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Minimum 02"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Publish Min 05"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info GetMonitoredItems Method"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info ResendData Method"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Embedded DataChange Subscription Server Facet"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Server" description="This Facet specifies the standard support for subscribing to events and is intended to supplement any of the full featured Server Profiles. Support of this Facet requires the implementation of Event Types representing the Events that the Server can report and their specific fields. " uri="" name="Standard Event Subscription Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Progress Events"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info System Status"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Property Change"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info EventQueueOverflowEventType"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Basic"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Items 10"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor QueueSize_ServerMax"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Events"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Monitor Complex Event Filter"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Basic"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Minimum 02"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Publish Min 05"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Subscription Publish Discard Policy"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="Note: Standard UA Server Profile has been deprecated as it is superseded with Standard 2017 UA Server Profile in v1.04.\nThis Profile is a FullFeatured Profile that defines a minimum set of functionality required for PC based OPC UA servers. Such a server must provide the base AddressSpace structure with type nodes, instance nodes and diagnostic information. The Server must provide connection establishment through the OPC UA TCP binary protocol with security and the creation of at least 50 parallel sessions. It includes view services like browsing and the attribute services for reading and writing of current values. In addition, the monitoring of data changes is included with a minimum of 5 subscriptions for half of the required sessions (total 225) and a minimum of 500 monitored items for half of the subscriptions (total 56250)." uri="http://opcfoundation.org/UA-Profile/Server/StandardUA" name="Standard UA Server [deprecated]">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Base Info Diagnostics"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Discovery Register"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Discovery Register2"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Change User"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Cancel"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Session Minimum 50 Parallel"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="View Minimum Continuation Point 05"/>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Attribute Write StatusCode &amp; TimeStamp"/>
   </IncludeConformanceUnits>
   <IncludeProfiles>
    <IncludeProfile name="Enhanced DataChange Subsc. Srv Facet [deprecated]"/>
    <IncludeProfile name="Embedded UA Server Profile [deprecated]"/>
    <IncludeProfile name="User Token - X509 Certificate Server Facet"/>
   </IncludeProfiles>
  </Profile>
  <Profile category="Transport" description="This transport Facet defines a combination of network protocol, security protocol and message encoding that is optimized for low resource consumption and high performance. It combines the simple TCP based network protocol UA-TCP 1.0 with the binary security protocol UA-SecureConversation 1.0 and the binary message encoding UA-Binary 1.0." uri="http://opcfoundation.org/UA-Profile/Transport/uatcp-uasc-uabinary" name="UA-TCP UA-SC UA-Binary">
   <IncludeConformanceUnits/>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="indicates that a user token that is comprised of a username and password is supported." uri="http://opcfoundation.org/UA-Profile/Security/UserToken/Server/UserNamePassword" name="User Token - User Name Password Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security User Name Password"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Server" description="Indicates that the use of an X509 certificates to identify users is supported" uri="" name="User Token - X509 Certificate Server Facet">
   <IncludeConformanceUnits>
    <IncludeConformanceUnit optional="false" group="Alarms and Conditions" name="Security User X509"/>
   </IncludeConformanceUnits>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Transport" description="This transport Facet defines a combination of network protocol, security protocol and message encoding that uses WSS transport with UA-JSON encoded messages." uri="http://opcfoundation.org/UA-Profile/Transport/wss-uajson" name="WSS UA-JSON">
   <IncludeConformanceUnits/>
   <IncludeProfiles/>
  </Profile>
  <Profile category="Transport" description="This transport Facet defines a combination of network protocol, security protocol and message encoding that uses WSS transport as a tunnel for UA-SecureConversation and UA-Binary encoded messages. Although transport security is available in WSS via TLS, additional message security can be used to assure end-to-end security." uri="http://opcfoundation.org/UA-Profile/Transport/wss-uasc-uabinary" name="WSS UA-SC UA-Binary">
   <IncludeConformanceUnits/>
   <IncludeProfiles/>
  </Profile>
 </Profiles>
</UaProfiles>
